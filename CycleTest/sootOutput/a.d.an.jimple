final class a.d.an extends a.d.b
{
    private static final int D;
    private long E;
    private int F;
    private int G;
    int b;
    int c;
    int d;

    static void <clinit>()
    {
        int $i0;

        $i0 = staticinvoke <a.a: int a(java.lang.String,int)>("jcifs.smb.client.ReadAndX.Close", 1);

        <a.d.an: int D> = $i0;

        return;
    }

    void <init>()
    {
        a.d.an $r0;

        $r0 := @this: a.d.an;

        specialinvoke $r0.<a.d.b: void <init>(a.d.u)>(null);

        $r0.<a.d.an: byte g> = 46;

        $r0.<a.d.an: int G> = -1;

        return;
    }

    void <init>(int, long, int)
    {
        a.d.an $r0;
        int $i0, $i2;
        long $l1;

        $r0 := @this: a.d.an;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i2 := @parameter2: int;

        specialinvoke $r0.<a.d.b: void <init>(a.d.u)>(null);

        $r0.<a.d.an: int F> = $i0;

        $r0.<a.d.an: long E> = $l1;

        $r0.<a.d.an: int c> = $i2;

        $r0.<a.d.an: int b> = $i2;

        $r0.<a.d.an: byte g> = 46;

        $r0.<a.d.an: int G> = -1;

        return;
    }

    final int a(byte)
    {
        a.d.an $r0;
        byte $b0;
        int i1;

        $r0 := @this: a.d.an;

        $b0 := @parameter0: byte;

        if $b0 != 4 goto label1;

        i1 = <a.d.an: int D>;

        return i1;

     label1:
        return 0;
    }

    final void a(int, long, int)
    {
        a.d.an $r0;
        int $i0, $i2;
        long $l1;

        $r0 := @this: a.d.an;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i2 := @parameter2: int;

        $r0.<a.d.an: int F> = $i0;

        $r0.<a.d.an: long E> = $l1;

        $r0.<a.d.an: int c> = $i2;

        $r0.<a.d.an: int b> = $i2;

        return;
    }

    final int i(byte[], int)
    {
        a.d.an $r0;
        byte[] $r1;
        int $i0, $i1, $i3;
        long $l2;

        $r0 := @this: a.d.an;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = $r0.<a.d.an: int F>;

        $l2 = (long) $i1;

        staticinvoke <a.d.an: void a(long,byte[],int)>($l2, $r1, $i0);

        $i1 = $i0 + 2;

        $l2 = $r0.<a.d.an: long E>;

        staticinvoke <a.d.an: void b(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 4;

        $i3 = $r0.<a.d.an: int b>;

        $l2 = (long) $i3;

        staticinvoke <a.d.an: void a(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 2;

        $i3 = $r0.<a.d.an: int c>;

        $l2 = (long) $i3;

        staticinvoke <a.d.an: void a(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 2;

        $i3 = $r0.<a.d.an: int G>;

        $l2 = (long) $i3;

        staticinvoke <a.d.an: void b(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 4;

        $i3 = $r0.<a.d.an: int d>;

        $l2 = (long) $i3;

        staticinvoke <a.d.an: void a(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 2;

        $l2 = $r0.<a.d.an: long E>;

        $l2 = $l2 >> 32;

        staticinvoke <a.d.an: void b(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 4;

        $i0 = $i1 - $i0;

        return $i0;
    }

    final int j(byte[], int)
    {
        a.d.an $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.an;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    final int k(byte[], int)
    {
        a.d.an $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.an;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    final int l(byte[], int)
    {
        a.d.an $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.an;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    public final java.lang.String toString()
    {
        a.d.an $r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder $r2;
        int $i0;
        long $l1;

        $r0 := @this: a.d.an;

        $r1 = new java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("SmbComReadAndX[");

        $r3 = specialinvoke $r0.<a.d.b: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",fid=");

        $i0 = $r0.<a.d.an: int F>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",offset=");

        $l1 = $r0.<a.d.an: long E>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",maxCount=");

        $i0 = $r0.<a.d.an: int b>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",minCount=");

        $i0 = $r0.<a.d.an: int c>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",openTimeout=");

        $i0 = $r0.<a.d.an: int G>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",remaining=");

        $i0 = $r0.<a.d.an: int d>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",offset=");

        $l1 = $r0.<a.d.an: long E>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>($r3);

        return $r1;
    }
}
