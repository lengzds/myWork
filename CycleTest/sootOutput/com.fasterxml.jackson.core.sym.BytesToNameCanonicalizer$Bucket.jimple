final class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket extends java.lang.Object
{
    protected final com.fasterxml.jackson.core.sym.Name _name;
    protected final com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket _next;

    void <init>(com.fasterxml.jackson.core.sym.Name, com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket $r0, $r2;
        com.fasterxml.jackson.core.sym.Name $r1;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket;

        $r1 := @parameter0: com.fasterxml.jackson.core.sym.Name;

        $r2 := @parameter1: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.Name _name> = $r1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket _next> = $r2;

        return;
    }

    public final com.fasterxml.jackson.core.sym.Name find(int, int, int)
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket $r0;
        int $i0, $i1, $i2, $i3;
        com.fasterxml.jackson.core.sym.Name $r1;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.Name _name>;

        $i3 = virtualinvoke $r1.<com.fasterxml.jackson.core.sym.Name: int hashCode()>();

        if $i3 != $i0 goto label1;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.Name _name>;

        $z0 = virtualinvoke $r1.<com.fasterxml.jackson.core.sym.Name: boolean equals(int,int)>($i1, $i2);

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.Name _name>;

        return $r1;

     label1:
        $r0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket _next>;

     label2:
        if $r0 == null goto label4;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.Name _name>;

        $i3 = virtualinvoke $r1.<com.fasterxml.jackson.core.sym.Name: int hashCode()>();

        if $i3 != $i0 goto label3;

        $z0 = virtualinvoke $r1.<com.fasterxml.jackson.core.sym.Name: boolean equals(int,int)>($i1, $i2);

        if $z0 != 0 goto label5;

     label3:
        $r0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket _next>;

        goto label2;

     label4:
        return null;

     label5:
        return $r1;
    }

    public final com.fasterxml.jackson.core.sym.Name find(int, int[], int)
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket $r0;
        int $i0, $i1, $i2;
        int[] $r1;
        com.fasterxml.jackson.core.sym.Name $r2;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket;

        $i0 := @parameter0: int;

        $r1 := @parameter1: int[];

        $i1 := @parameter2: int;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.Name _name>;

        $i2 = virtualinvoke $r2.<com.fasterxml.jackson.core.sym.Name: int hashCode()>();

        if $i2 != $i0 goto label1;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.Name _name>;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.core.sym.Name: boolean equals(int[],int)>($r1, $i1);

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.Name _name>;

        return $r2;

     label1:
        $r0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket _next>;

     label2:
        if $r0 == null goto label4;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.Name _name>;

        $i2 = virtualinvoke $r2.<com.fasterxml.jackson.core.sym.Name: int hashCode()>();

        if $i2 != $i0 goto label3;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.core.sym.Name: boolean equals(int[],int)>($r1, $i1);

        if $z0 != 0 goto label5;

     label3:
        $r0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket _next>;

        goto label2;

     label4:
        return null;

     label5:
        return $r2;
    }

    public final int length()
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket $r0;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket;

        $i0 = 1;

        $r0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket _next>;

     label1:
        if $r0 == null goto label2;

        $i0 = $i0 + 1;

        $r0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket _next>;

        goto label1;

     label2:
        return $i0;
    }
}
