public class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter extends com.fasterxml.jackson.databind.ser.BeanPropertyWriter
{
    protected final com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer;

    public void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter, com.fasterxml.jackson.databind.util.NameTransformer)
    {
        com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter $r0;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r1;
        com.fasterxml.jackson.databind.util.NameTransformer $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter;

        $r2 := @parameter1: com.fasterxml.jackson.databind.util.NameTransformer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>($r1);

        $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = $r2;

        return;
    }

    private void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter, com.fasterxml.jackson.databind.util.NameTransformer, com.fasterxml.jackson.core.io.SerializedString)
    {
        com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter $r0, $r1;
        com.fasterxml.jackson.databind.util.NameTransformer $r2;
        com.fasterxml.jackson.core.io.SerializedString $r3;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;

        $r2 := @parameter1: com.fasterxml.jackson.databind.util.NameTransformer;

        $r3 := @parameter2: com.fasterxml.jackson.core.io.SerializedString;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.core.io.SerializedString)>($r1, $r3);

        $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = $r2;

        return;
    }

    protected com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, java.lang.Class, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter $r0;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r1;
        java.lang.Class $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.util.NameTransformer $r4, $r8;
        com.fasterxml.jackson.databind.JavaType $r5;
        com.fasterxml.jackson.databind.JsonSerializer $r6;
        boolean $z0;
        com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer $r7;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JavaType _nonTrivialBaseType>;

        if $r5 == null goto label3;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JavaType _nonTrivialBaseType>;

        $r5 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r5, $r2);

        $r6 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r5, $r0);

     label1:
        $r4 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;

        $z0 = virtualinvoke $r6.<com.fasterxml.jackson.databind.JsonSerializer: boolean isUnwrappingSerializer()>();

        if $z0 == 0 goto label4;

        $r7 = (com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer) $r6;

        $r8 = $r7.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;

        $r4 = staticinvoke <com.fasterxml.jackson.databind.util.NameTransformer: com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer)>($r4, $r8);

     label2:
        $r6 = virtualinvoke $r6.<com.fasterxml.jackson.databind.JsonSerializer: com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)>($r4);

        $r1 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

        $r1 = virtualinvoke $r1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>($r2, $r6);

        $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r1;

        return $r6;

     label3:
        $r6 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>($r2, $r0);

        goto label1;

     label4:
        goto label2;
    }

    public void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter $r0;
        com.fasterxml.jackson.databind.JsonSerializer $r1;
        com.fasterxml.jackson.databind.util.NameTransformer $r2, $r4;
        boolean $z0;
        com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer $r3;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)>($r1);

        $r1 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JsonSerializer _serializer>;

        if $r1 == null goto label3;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;

        $r1 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JsonSerializer _serializer>;

        $z0 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JsonSerializer: boolean isUnwrappingSerializer()>();

        if $z0 == 0 goto label2;

        $r1 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JsonSerializer _serializer>;

        $r3 = (com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer) $r1;

        $r4 = $r3.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;

        $r2 = staticinvoke <com.fasterxml.jackson.databind.util.NameTransformer: com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer)>($r2, $r4);

     label1:
        $r1 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JsonSerializer _serializer>;

        $r1 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JsonSerializer: com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)>($r2);

        $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JsonSerializer _serializer> = $r1;

        return;

     label2:
        goto label1;

     label3:
        return;
    }

    public volatile com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer)
    {
        com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter $r0;
        com.fasterxml.jackson.databind.util.NameTransformer $r1;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;

        $r1 := @parameter0: com.fasterxml.jackson.databind.util.NameTransformer;

        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer)>($r1);

        return $r0;
    }

    public com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer)
    {
        com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter $r0, $r2;
        com.fasterxml.jackson.databind.util.NameTransformer $r1, $r5;
        com.fasterxml.jackson.core.io.SerializedString $r3;
        java.lang.String $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;

        $r1 := @parameter0: com.fasterxml.jackson.databind.util.NameTransformer;

        $r3 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.core.io.SerializedString _name>;

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.core.io.SerializedString: java.lang.String getValue()>();

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.util.NameTransformer: java.lang.String transform(java.lang.String)>($r4);

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;

        $r1 = staticinvoke <com.fasterxml.jackson.databind.util.NameTransformer: com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer)>($r1, $r5);

        $r2 = new com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;

        $r3 = new com.fasterxml.jackson.core.io.SerializedString;

        specialinvoke $r3.<com.fasterxml.jackson.core.io.SerializedString: void <init>(java.lang.String)>($r4);

        specialinvoke $r2.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString)>($r0, $r1, $r3);

        return $r2;
    }

    public void serializeAsField(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter $r0;
        java.lang.Object $r1, $r4, $r9, $r10;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r5, $r8;
        java.lang.Class $r6;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r7;
        boolean $z0;
        com.fasterxml.jackson.core.io.SerializedString $r11;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r12;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: java.lang.Object get(java.lang.Object)>($r1);

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JsonSerializer _serializer>;

        if $r5 != null goto label2;

        $r6 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

        $r8 = virtualinvoke $r7.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>($r6);

        $r5 = $r8;

        if $r8 != null goto label2;

        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>($r7, $r6, $r3);

     label2:
        $r9 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: java.lang.Object _suppressableValue>;

        if $r9 == null goto label3;

        $r9 = <com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: java.lang.Object MARKER_FOR_EMPTY>;

        $r10 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: java.lang.Object _suppressableValue>;

        if $r9 != $r10 goto label6;

        $z0 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(java.lang.Object)>($r4);

        if $z0 != 0 goto label8;

     label3:
        if $r4 != $r1 goto label4;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void _handleSelfReference(java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer)>($r1, $r5);

     label4:
        $z0 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonSerializer: boolean isUnwrappingSerializer()>();

        if $z0 != 0 goto label5;

        $r11 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.core.io.SerializedString _name>;

        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(com.fasterxml.jackson.core.SerializableString)>($r11);

     label5:
        $r12 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer>;

        if $r12 != null goto label7;

        virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r4, $r2, $r3);

        return;

     label6:
        $r9 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: java.lang.Object _suppressableValue>;

        $z0 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return;

     label7:
        $r12 = $r0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer>;

        virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r4, $r2, $r3, $r12);

     label8:
        return;
    }
}
