public final enum class com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType extends java.lang.Enum
{
    private static final com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[] $VALUES;
    public static final enum com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType READ_IO_BUFFER;
    public static final enum com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType WRITE_CONCAT_BUFFER;
    public static final enum com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType WRITE_ENCODING_BUFFER;
    private final int size;

    static void <clinit>()
    {
        com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType $r0;
        com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[] $r1;

        $r0 = new com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType;

        specialinvoke $r0.<com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: void <init>(java.lang.String,int,int)>("READ_IO_BUFFER", 0, 4000);

        <com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType READ_IO_BUFFER> = $r0;

        $r0 = new com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType;

        specialinvoke $r0.<com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: void <init>(java.lang.String,int,int)>("WRITE_ENCODING_BUFFER", 1, 4000);

        <com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType WRITE_ENCODING_BUFFER> = $r0;

        $r0 = new com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType;

        specialinvoke $r0.<com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: void <init>(java.lang.String,int,int)>("WRITE_CONCAT_BUFFER", 2, 2000);

        <com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType WRITE_CONCAT_BUFFER> = $r0;

        $r1 = newarray (com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)[3];

        $r0 = <com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType READ_IO_BUFFER>;

        $r1[0] = $r0;

        $r0 = <com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType WRITE_ENCODING_BUFFER>;

        $r1[1] = $r0;

        $r0 = <com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType WRITE_CONCAT_BUFFER>;

        $r1[2] = $r0;

        <com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[] $VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int, int)
    {
        com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType $r0;
        java.lang.String $r1;
        int $i0, $i1;

        $r0 := @this: com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        $r0.<com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: int size> = $i1;

        return;
    }

    static int access$000(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)
    {
        com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType $r0;
        int i0;

        $r0 := @parameter0: com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType;

        i0 = $r0.<com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: int size>;

        return i0;
    }

    public static com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/fasterxml/jackson/core/util/BufferRecycler$ByteBufferType", $r0);

        $r2 = (com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType) $r1;

        return $r2;
    }

    public static com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[] values()
    {
        java.lang.Object $r0;
        com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[] $r1;

        $r1 = <com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[]) $r0;

        return $r1;
    }
}
