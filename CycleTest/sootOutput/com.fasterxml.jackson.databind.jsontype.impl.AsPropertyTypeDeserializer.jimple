public class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer extends com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
{

    public void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.jsontype.TypeIdResolver, java.lang.String, boolean, java.lang.Class)
    {
        com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.jsontype.TypeIdResolver $r2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.Class $r4;

        $r0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeIdResolver;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r4 := @parameter4: java.lang.Class;

        specialinvoke $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)>($r1, $r2, $r3, $z0, $r4);

        return;
    }

    public void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer $r0, $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;

        $r0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        specialinvoke $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        return;
    }

    protected java.lang.Object _deserializeIfNatural(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        int[] $r3;
        com.fasterxml.jackson.core.JsonToken $r4;
        int $i0;
        com.fasterxml.jackson.databind.JavaType $r5;
        java.lang.Class $r6;
        boolean $z0;
        java.lang.String $r7;
        java.lang.Integer $r8;
        double $d0;
        java.lang.Double $r9;
        java.lang.Boolean r10;

        $r0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $i0 = virtualinvoke $r4.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        $r5 = $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: com.fasterxml.jackson.databind.JavaType _baseType>;

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "java/lang/String");

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        return $r7;

     label3:
        $r5 = $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: com.fasterxml.jackson.databind.JavaType _baseType>;

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "java/lang/Integer");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r8;

     label4:
        $r5 = $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: com.fasterxml.jackson.databind.JavaType _baseType>;

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "java/lang/Double");

        if $z0 == 0 goto label1;

        $d0 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: double getDoubleValue()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r9;

     label5:
        $r5 = $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: com.fasterxml.jackson.databind.JavaType _baseType>;

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "java/lang/Boolean");

        if $z0 == 0 goto label1;

        r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return r10;

     label6:
        $r5 = $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: com.fasterxml.jackson.databind.JavaType _baseType>;

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "java/lang/Boolean");

        if $z0 == 0 goto label1;

        r10 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return r10;
    }

    protected final java.lang.Object _deserializeTypedForId(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.util.TokenBuffer)
    {
        com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer $r0;
        com.fasterxml.jackson.databind.DeserializationContext $r1;
        com.fasterxml.jackson.core.JsonParser $r2, $r7;
        com.fasterxml.jackson.databind.util.TokenBuffer $r3;
        java.lang.String $r4, $r6;
        com.fasterxml.jackson.databind.JsonDeserializer $r5;
        boolean $z0;
        java.lang.Object $r9;

        $r0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;

        $r2 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r1 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: com.fasterxml.jackson.databind.util.TokenBuffer;

        $r4 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>($r1, $r4);

        $z0 = $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: boolean _typeIdVisible>;

        if $z0 == 0 goto label2;

        if $r3 != null goto label1;

        $r3 = new com.fasterxml.jackson.databind.util.TokenBuffer;

        specialinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.ObjectCodec)>(null);

     label1:
        $r6 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>($r6);

        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(java.lang.String)>($r4);

     label2:
        if $r3 == null goto label3;

        $r7 = virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.JsonParser)>($r2);

        $r2 = staticinvoke <com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)>($r7, $r2);

     label3:
        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r9 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r2, $r1);

        return $r9;
    }

    protected java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.util.TokenBuffer)
    {
        com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer $r0;
        com.fasterxml.jackson.databind.DeserializationContext $r1;
        com.fasterxml.jackson.databind.util.TokenBuffer $r2;
        com.fasterxml.jackson.core.JsonParser $r3, $r6;
        com.fasterxml.jackson.databind.JavaType $r4;
        com.fasterxml.jackson.databind.JsonDeserializer $r5;
        java.lang.Object $r7;
        com.fasterxml.jackson.core.JsonToken $r8, $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;
        com.fasterxml.jackson.databind.JsonMappingException $r12;

        $r0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;

        $r3 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r1 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r2 := @parameter2: com.fasterxml.jackson.databind.util.TokenBuffer;

        $r4 = $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: com.fasterxml.jackson.databind.JavaType _defaultImpl>;

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)>($r1);

        if $r2 == null goto label1;

        virtualinvoke $r2.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();

        $r6 = virtualinvoke $r2.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.JsonParser)>($r3);

        $r3 = $r6;

        virtualinvoke $r6.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

     label1:
        $r7 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r3, $r1);

        return $r7;

     label2:
        $r7 = virtualinvoke $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object _deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r3, $r1);

        if $r7 != null goto label4;

        $r8 = virtualinvoke $r3.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if $r8 != $r9 goto label3;

        $r7 = specialinvoke $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r3, $r1);

        return $r7;

     label3:
        $r8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("missing property \'");

        $r11 = $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.String _typePropertyName>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' that is to contain type id  (for class ");

        $r11 = virtualinvoke $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.String baseTypeName()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)>($r3, $r8, $r11);

        throw $r12;

     label4:
        return $r7;
    }

    public java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.core.JsonToken $r3, $r4;
        java.lang.Object $r5;

        $r0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if $r4 != $r3 goto label1;

        $r5 = specialinvoke $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r5;

     label1:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r5;
    }

    public java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.core.JsonToken $r3, $r4, $r5;
        com.fasterxml.jackson.databind.util.TokenBuffer $r6;
        java.lang.String $r7, $r8;
        boolean $z0;
        java.lang.Object $r9;

        $r0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r4 = $r3;

        $r5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r3 != $r5 goto label3;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

     label1:
        $r3 = $r4;

        $r6 = null;

     label2:
        $r4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r3 != $r4 goto label7;

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r8 = $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.String _typePropertyName>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label5;

        $r9 = virtualinvoke $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object _deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)>($r1, $r2, $r6);

        return $r9;

     label3:
        $r5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if $r3 != $r5 goto label4;

        $r9 = virtualinvoke $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)>($r1, $r2, null);

        return $r9;

     label4:
        $r5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r3 == $r5 goto label1;

        $r9 = virtualinvoke $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)>($r1, $r2, null);

        return $r9;

     label5:
        if $r6 != null goto label6;

        $r6 = new com.fasterxml.jackson.databind.util.TokenBuffer;

        specialinvoke $r6.<com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.ObjectCodec)>(null);

     label6:
        virtualinvoke $r6.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>($r7);

        virtualinvoke $r6.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>($r1);

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label2;

     label7:
        $r9 = virtualinvoke $r0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)>($r1, $r2, $r6);

        return $r9;
    }

    public com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.BeanProperty $r0, $r2;
        com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer $r1, $r3;

        $r1 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;

        $r0 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;

        $r2 = $r1.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: com.fasterxml.jackson.databind.BeanProperty _property>;

        if $r0 != $r2 goto label1;

        return $r1;

     label1:
        $r3 = new com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;

        specialinvoke $r3.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r0);

        return $r3;
    }

    public com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion()
    {
        com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer $r0;
        com.fasterxml.jackson.'annotation'.JsonTypeInfo$As r1;

        $r0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;

        r1 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.annotation.JsonTypeInfo$As PROPERTY>;

        return r1;
    }
}
