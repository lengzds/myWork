public class com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer
{
    public static final com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer instance;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer $r0;

        $r0 = new com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer: void <init>()>();

        <com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer instance> = $r0;

        return;
    }

    public void <init>()
    {
        com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer $r0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class)>(class "java/util/TimeZone");

        return;
    }

    public volatile void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        java.lang.Object $r3;
        java.util.TimeZone $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.util.TimeZone) $r3;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer: void serialize(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r4, $r1, $r2);

        return;
    }

    public void serialize(java.util.TimeZone, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer $r0;
        java.util.TimeZone $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        java.lang.String $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer;

        $r1 := @parameter0: java.util.TimeZone;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = virtualinvoke $r1.<java.util.TimeZone: java.lang.String getID()>();

        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>($r4);

        return;
    }

    public volatile void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r3;
        java.lang.Object $r4;
        java.util.TimeZone $r5;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r3 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r5 = (java.util.TimeZone) $r4;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer: void serializeWithType(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r5, $r1, $r2, $r3);

        return;
    }

    public void serializeWithType(java.util.TimeZone, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer $r0;
        java.util.TimeZone $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer;

        $r1 := @parameter0: java.util.TimeZone;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        virtualinvoke $r4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)>($r1, $r2, class "java/util/TimeZone");

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer: void serialize(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

        virtualinvoke $r4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>($r1, $r2);

        return;
    }
}
