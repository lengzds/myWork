public class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer extends com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer
{
    private static final com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer instance;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer $r0;

        $r0 = new com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: void <init>()>();

        <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer instance> = $r0;

        return;
    }

    protected void <init>()
    {
        com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer $r0;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: void <init>(java.lang.Class)>(class "com/fasterxml/jackson/databind/JsonNode");

        return;
    }

    public static com.fasterxml.jackson.databind.JsonDeserializer getDeserializer(java.lang.Class)
    {
        java.lang.Class $r0;
        com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer $r1;
        com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer $r2;
        com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer r3;

        $r0 := @parameter0: java.lang.Class;

        if $r0 != class "com/fasterxml/jackson/databind/node/ObjectNode" goto label1;

        $r1 = staticinvoke <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance()>();

        return $r1;

     label1:
        if $r0 != class "com/fasterxml/jackson/databind/node/ArrayNode" goto label2;

        $r2 = staticinvoke <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance()>();

        return $r2;

     label2:
        r3 = <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer instance>;

        return r3;
    }

    public com.fasterxml.jackson.databind.JsonNode deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        int[] $r3;
        com.fasterxml.jackson.core.JsonToken $r4;
        int $i0;
        com.fasterxml.jackson.databind.node.JsonNodeFactory $r5;
        com.fasterxml.jackson.databind.JsonNode $r6;
        com.fasterxml.jackson.databind.node.ObjectNode $r7;
        com.fasterxml.jackson.databind.node.ArrayNode $r8;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $i0 = virtualinvoke $r4.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        $r5 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();

        $r6 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: com.fasterxml.jackson.databind.JsonNode deserializeAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>($r1, $r2, $r5);

        return $r6;

     label2:
        $r5 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();

        $r7 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: com.fasterxml.jackson.databind.node.ObjectNode deserializeObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>($r1, $r2, $r5);

        return $r7;

     label3:
        $r5 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();

        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: com.fasterxml.jackson.databind.node.ArrayNode deserializeArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>($r1, $r2, $r5);

        return $r8;
    }

    public volatile java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.JsonNode $r3;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: com.fasterxml.jackson.databind.JsonNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r3;
    }

    public volatile java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
    {
        com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r3;
        java.lang.Object $r4;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        $r4 = specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>($r1, $r2, $r3);

        return $r4;
    }
}
