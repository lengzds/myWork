public abstract class com.fasterxml.jackson.databind.introspect.AnnotatedMember extends com.fasterxml.jackson.databind.introspect.Annotated
{
    protected final com.fasterxml.jackson.databind.introspect.AnnotationMap _annotations;

    protected void <init>(com.fasterxml.jackson.databind.introspect.AnnotationMap)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r0;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        $r1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationMap;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.Annotated: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: com.fasterxml.jackson.databind.introspect.AnnotationMap _annotations> = $r1;

        return;
    }

    public final void addIfNotPresent(java.lang.annotation.Annotation)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r0;
        java.lang.'annotation'.Annotation $r1;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        $r1 := @parameter0: java.lang.'annotation'.Annotation;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: com.fasterxml.jackson.databind.introspect.AnnotationMap _annotations>;

        virtualinvoke $r2.<com.fasterxml.jackson.databind.introspect.AnnotationMap: void addIfNotPresent(java.lang.'annotation'.Annotation)>($r1);

        return;
    }

    public final void addOrOverride(java.lang.annotation.Annotation)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r0;
        java.lang.'annotation'.Annotation $r1;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        $r1 := @parameter0: java.lang.'annotation'.Annotation;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: com.fasterxml.jackson.databind.introspect.AnnotationMap _annotations>;

        virtualinvoke $r2.<com.fasterxml.jackson.databind.introspect.AnnotationMap: void add(java.lang.'annotation'.Annotation)>($r1);

        return;
    }

    public final void fixAccess()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r0;
        java.lang.reflect.Member $r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        $r1 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.reflect.Member getMember()>();

        staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r1);

        return;
    }

    protected com.fasterxml.jackson.databind.introspect.AnnotationMap getAllAnnotations()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r0;
        com.fasterxml.jackson.databind.introspect.AnnotationMap r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: com.fasterxml.jackson.databind.introspect.AnnotationMap _annotations>;

        return r1;
    }

    public abstract java.lang.Class getDeclaringClass();

    public abstract java.lang.reflect.Member getMember();

    public abstract java.lang.Object getValue(java.lang.Object);

    public abstract void setValue(java.lang.Object, java.lang.Object);
}
