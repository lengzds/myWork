public final class b.a.b.a.a.a.f extends b.a.b.a.a.a.a
{
    private final byte[] a;
    private final java.nio.charset.Charset b;

    public void <init>(java.lang.String)
    {
        b.a.b.a.a.a.f $r0;
        java.lang.String $r1;

        $r0 := @this: b.a.b.a.a.a.f;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<b.a.b.a.a.a.f: void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset)>($r1, "text/plain", null);

        return;
    }

    private void <init>(java.lang.String, java.lang.String, java.nio.charset.Charset)
    {
        b.a.b.a.a.a.f $r0;
        java.lang.String $r1, $r2;
        java.nio.charset.Charset $r3;
        java.lang.IllegalArgumentException $r4;
        byte[] $r5;

        $r0 := @this: b.a.b.a.a.a.f;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.nio.charset.Charset;

        specialinvoke $r0.<b.a.b.a.a.a.a: void <init>(java.lang.String)>($r2);

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Text may not be null");

        throw $r4;

     label1:
        if $r3 != null goto label2;

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

     label2:
        $r2 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r2);

        $r0.<b.a.b.a.a.a.f: byte[] a> = $r5;

        $r0.<b.a.b.a.a.a.f: java.nio.charset.Charset b> = $r3;

        return;
    }

    public void <init>(java.lang.String, java.nio.charset.Charset)
    {
        b.a.b.a.a.a.f $r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;

        $r0 := @this: b.a.b.a.a.a.f;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.nio.charset.Charset;

        specialinvoke $r0.<b.a.b.a.a.a.f: void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset)>($r1, "text/plain", $r2);

        return;
    }

    public final void a(java.io.OutputStream)
    {
        b.a.b.a.a.a.f $r0;
        java.io.OutputStream $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.io.ByteArrayInputStream $r3;
        byte[] $r4;

        $r0 := @this: b.a.b.a.a.a.f;

        $r1 := @parameter0: java.io.OutputStream;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output stream may not be null");

        throw $r2;

     label1:
        $r3 = new java.io.ByteArrayInputStream;

        $r4 = $r0.<b.a.b.a.a.a.f: byte[] a>;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        $r4 = newarray (byte)[4096];

     label2:
        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r4);

        if $i0 == -1 goto label3;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i0);

        goto label2;

     label3:
        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public final java.lang.String b()
    {
        b.a.b.a.a.a.f $r0;

        $r0 := @this: b.a.b.a.a.a.f;

        return null;
    }

    public final java.lang.String c()
    {
        b.a.b.a.a.a.f $r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;

        $r0 := @this: b.a.b.a.a.a.f;

        $r2 = $r0.<b.a.b.a.a.a.f: java.nio.charset.Charset b>;

        $r1 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        return $r1;
    }

    public final java.lang.String d()
    {
        b.a.b.a.a.a.f $r0;

        $r0 := @this: b.a.b.a.a.a.f;

        return "8bit";
    }

    public final long e()
    {
        b.a.b.a.a.a.f $r0;
        byte[] $r1;
        int $i0;
        long $l1;

        $r0 := @this: b.a.b.a.a.a.f;

        $r1 = $r0.<b.a.b.a.a.a.f: byte[] a>;

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        return $l1;
    }
}
