public class com.fasterxml.jackson.databind.ser.std.MapSerializer extends com.fasterxml.jackson.databind.ser.ContainerSerializer implements com.fasterxml.jackson.databind.ser.ContextualSerializer
{
    protected static final com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE;
    protected com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers;
    protected final java.util.HashSet _ignoredEntries;
    protected com.fasterxml.jackson.databind.JsonSerializer _keySerializer;
    protected final com.fasterxml.jackson.databind.JavaType _keyType;
    protected final com.fasterxml.jackson.databind.BeanProperty _property;
    protected com.fasterxml.jackson.databind.JsonSerializer _valueSerializer;
    protected final com.fasterxml.jackson.databind.JavaType _valueType;
    protected final boolean _valueTypeIsStatic;
    protected final com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.JavaType $r0;

        $r0 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();

        <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE> = $r0;

        return;
    }

    protected void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.JsonSerializer, java.util.HashSet)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0, $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3, $r4;
        java.util.HashSet $r5;
        com.fasterxml.jackson.databind.JavaType $r6;
        boolean $z0;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r7;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r8;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;

        $r4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;

        $r5 := @parameter4: java.util.HashSet;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(class "java/util/Map", 0);

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.HashSet _ignoredEntries> = $r5;

        $r6 = $r1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType> = $r6;

        $r6 = $r1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType> = $r6;

        $z0 = $r1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic> = $z0;

        $r7 = $r1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = $r7;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = $r3;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = $r4;

        $r8 = $r1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = $r8;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property> = $r2;

        return;
    }

    protected void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0, $r1;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r2;
        java.util.HashSet $r3;
        com.fasterxml.jackson.databind.JavaType $r4;
        boolean $z0;
        com.fasterxml.jackson.databind.JsonSerializer $r5;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r6;
        com.fasterxml.jackson.databind.BeanProperty $r7;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(class "java/util/Map", 0);

        $r3 = $r1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.HashSet _ignoredEntries>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.HashSet _ignoredEntries> = $r3;

        $r4 = $r1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType> = $r4;

        $r4 = $r1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType> = $r4;

        $z0 = $r1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic> = $z0;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = $r2;

        $r5 = $r1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = $r5;

        $r5 = $r1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = $r5;

        $r6 = $r1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = $r6;

        $r7 = $r1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property> = $r7;

        return;
    }

    protected void <init>(java.util.HashSet, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        java.util.HashSet $r1;
        com.fasterxml.jackson.databind.JavaType $r2, $r3;
        boolean $z0;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r4;
        com.fasterxml.jackson.databind.JsonSerializer $r5, $r6;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r7;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: java.util.HashSet;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JavaType;

        $z0 := @parameter3: boolean;

        $r4 := @parameter4: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r5 := @parameter5: com.fasterxml.jackson.databind.JsonSerializer;

        $r6 := @parameter6: com.fasterxml.jackson.databind.JsonSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(class "java/util/Map", 0);

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.HashSet _ignoredEntries> = $r1;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType> = $r2;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType> = $r3;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic> = $z0;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = $r4;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = $r5;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = $r6;

        $r7 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyMap()>();

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = $r7;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property> = null;

        return;
    }

    public static com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.lang.String[], com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.JsonSerializer)
    {
        java.lang.String[] $r0;
        com.fasterxml.jackson.databind.JavaType $r1, $r6;
        boolean $z0;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3, $r4;
        java.util.HashSet $r5;
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r7;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $z0 := @parameter2: boolean;

        $r2 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r3 := @parameter4: com.fasterxml.jackson.databind.JsonSerializer;

        $r4 := @parameter5: com.fasterxml.jackson.databind.JsonSerializer;

        $r5 = staticinvoke <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.HashSet toSet(java.lang.String[])>($r0);

        if $r1 != null goto label3;

        $r6 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE>;

        $r1 = $r6;

     label1:
        if $z0 != 0 goto label5;

        if $r1 == null goto label4;

        $z0 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: boolean isFinal()>();

        if $z0 == 0 goto label4;

        $z0 = 1;

     label2:
        $r7 = new com.fasterxml.jackson.databind.ser.std.MapSerializer;

        specialinvoke $r7.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(java.util.HashSet,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)>($r5, $r6, $r1, $z0, $r2, $r3, $r4);

        return $r7;

     label3:
        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getKeyType()>();

        $r1 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();

        goto label1;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        goto label2;
    }

    private static java.util.HashSet toSet(java.lang.String[])
    {
        java.lang.String[] $r0;
        int $i0, $i1;
        java.lang.String $r1;
        java.util.HashSet $r2;

        $r0 := @parameter0: java.lang.String[];

        if $r0 == null goto label1;

        $i0 = lengthof $r0;

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = new java.util.HashSet;

        $i0 = lengthof $r0;

        specialinvoke $r2.<java.util.HashSet: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r1 = $r0[$i1];

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return $r2;
    }

    protected final com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r1, $r6;
        com.fasterxml.jackson.databind.JavaType $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult $r4;
        com.fasterxml.jackson.databind.BeanProperty $r5;
        com.fasterxml.jackson.databind.JsonSerializer r7;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>($r2, $r3, $r5);

        $r6 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        if $r1 == $r6 goto label1;

        $r1 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = $r1;

     label1:
        r7 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.JsonSerializer serializer>;

        return r7;
    }

    protected final com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, java.lang.Class, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r1, $r6;
        java.lang.Class $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult $r4;
        com.fasterxml.jackson.databind.BeanProperty $r5;
        com.fasterxml.jackson.databind.JsonSerializer r7;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>($r2, $r3, $r5);

        $r6 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        if $r1 == $r6 goto label1;

        $r1 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = $r1;

     label1:
        r7 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.JsonSerializer serializer>;

        return r7;
    }

    protected java.util.Map _orderEntries(java.util.Map)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        java.util.Map $r1;
        boolean $z0;
        java.util.TreeMap $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: java.util.Map;

        $z0 = $r1 instanceof java.util.SortedMap;

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>(java.util.Map)>($r1);

        return $r2;
    }

    public volatile com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r1;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r1);

        return $r0;
    }

    public com.fasterxml.jackson.databind.ser.std.MapSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0, $r2;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r1;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r2 = new com.fasterxml.jackson.databind.ser.std.MapSerializer;

        specialinvoke $r2.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r0, $r1);

        return $r2;
    }

    public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        com.fasterxml.jackson.databind.SerializerProvider $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        int $i0, $i1;
        java.lang.String $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4, $r6;
        boolean $z0;
        com.fasterxml.jackson.databind.JavaType $r5;
        java.util.HashSet $r7, $r11;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r8;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r9;
        java.lang.String[] $r10;
        com.fasterxml.jackson.databind.ser.ContextualSerializer $r12;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if $r4 != null goto label05;

        $z0 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic>;

        if $z0 == 0 goto label10;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r5, $r2);

     label01:
        $r6 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        if $r6 != null goto label06;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r5, $r2);

     label02:
        $r7 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.HashSet _ignoredEntries>;

        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        if $r8 == null goto label08;

        if $r2 == null goto label08;

        $r9 = interfaceinvoke $r2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();

        $r10 = virtualinvoke $r8.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)>($r9);

        if $r10 == null goto label08;

        if $r7 != null goto label07;

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

     label03:
        $i0 = lengthof $r10;

        $i1 = 0;

     label04:
        if $i1 >= $i0 goto label09;

        $r3 = $r10[$i1];

        virtualinvoke $r11.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label04;

     label05:
        $z0 = $r4 instanceof com.fasterxml.jackson.databind.ser.ContextualSerializer;

        if $z0 == 0 goto label10;

        $r12 = (com.fasterxml.jackson.databind.ser.ContextualSerializer) $r4;

        $r4 = interfaceinvoke $r12.<com.fasterxml.jackson.databind.ser.ContextualSerializer: com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        goto label01;

     label06:
        $z0 = $r6 instanceof com.fasterxml.jackson.databind.ser.ContextualSerializer;

        if $z0 == 0 goto label02;

        $r12 = (com.fasterxml.jackson.databind.ser.ContextualSerializer) $r6;

        $r6 = interfaceinvoke $r12.<com.fasterxml.jackson.databind.ser.ContextualSerializer: com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        goto label02;

     label07:
        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>(java.util.Collection)>($r7);

        goto label03;

     label08:
        $r11 = $r7;

     label09:
        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.HashSet)>($r2, $r6, $r4, $r11);

        return $r0;

     label10:
        goto label01;
    }

    public volatile boolean hasSingleElement(java.lang.Object)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.Map $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map) $r1;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean hasSingleElement(java.util.Map)>($r2);

        return $z0;
    }

    public boolean hasSingleElement(java.util.Map)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        java.util.Map $r1;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: java.util.Map;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile boolean isEmpty(java.lang.Object)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.Map $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map) $r1;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean isEmpty(java.util.Map)>($r2);

        return $z0;
    }

    public boolean isEmpty(java.util.Map)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        java.util.Map $r1;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: java.util.Map;

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public volatile void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        java.lang.Object $r3;
        java.util.Map $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.util.Map) $r3;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serialize(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r4, $r1, $r2);

        return;
    }

    public void serialize(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        java.util.Map $r3;
        boolean $z0;
        com.fasterxml.jackson.databind.SerializationFeature $r4;
        com.fasterxml.jackson.databind.JsonSerializer $r5;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r3 := @parameter0: java.util.Map;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>();

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r4 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature ORDER_MAP_ENTRIES_BY_KEYS>;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r4);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map)>($r3);

     label1:
        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if $r5 == null goto label3;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>($r3, $r1, $r2, $r5);

     label2:
        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();

        return;

     label3:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r3, $r1, $r2);

        goto label2;
    }

    public void serializeFields(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        java.util.Map $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4, $r16;
        java.util.HashSet $r5;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r6;
        com.fasterxml.jackson.databind.SerializationFeature $r7;
        boolean $z0, $z1;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r8;
        java.util.Set $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11, $r13;
        java.util.Map$Entry $r12;
        com.fasterxml.jackson.databind.JavaType $r14;
        com.fasterxml.jackson.databind.BeanProperty $r15;
        java.lang.Class $r17;
        java.lang.Exception $r18;
        java.lang.StringBuilder $r19;
        java.lang.String $r20;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r6 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        if $r6 == null goto label01;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeTypedFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

        return;

     label01:
        $r4 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.HashSet _ignoredEntries>;

        $r7 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_NULL_MAP_VALUES>;

        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r7);

        if $z0 != 0 goto label05;

        $z0 = 1;

     label02:
        $r8 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;

        $r9 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r11;

        $r11 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r13 != null goto label06;

        $r14 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;

        $r15 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;

        $r16 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r14, $r15);

        virtualinvoke $r16.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(null, $r2, $r3);

     label04:
        if $r11 != null goto label09;

        virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>($r2);

        goto label03;

     label05:
        $z0 = 0;

        goto label02;

     label06:
        if $z0 == 0 goto label07;

        if $r11 == null goto label03;

     label07:
        if $r5 == null goto label08;

        $z1 = virtualinvoke $r5.<java.util.HashSet: boolean contains(java.lang.Object)>($r13);

        if $z1 != 0 goto label03;

     label08:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r13, $r2, $r3);

        goto label04;

     label09:
        $r17 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r8.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>($r17);

        if $r16 != null goto label15;

        $r14 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;

        $z1 = virtualinvoke $r14.<com.fasterxml.jackson.databind.JavaType: boolean hasGenericTypes()>();

        if $z1 == 0 goto label13;

        $r14 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;

        $r14 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r14, $r17);

        $r16 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)>($r8, $r14, $r3);

     label10:
        $r8 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;

     label11:
        virtualinvoke $r16.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r11, $r2, $r3);

     label12:
        goto label03;

     label13:
        $r16 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>($r8, $r17, $r3);

        goto label10;

     label14:
        $r18 := @caughtexception;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>($r3, $r18, $r1, $r20);

        goto label03;

     label15:
        goto label11;

     label16:
        return;

        catch java.lang.Exception from label11 to label12 with label14;
    }

    protected void serializeFieldsUsing(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        java.util.Map $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4, $r5, $r16;
        java.util.HashSet $r6;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r7;
        com.fasterxml.jackson.databind.SerializationFeature $r8;
        boolean $z0, $z1;
        java.util.Set $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11, $r13;
        java.util.Map$Entry $r12;
        com.fasterxml.jackson.databind.JavaType $r14;
        com.fasterxml.jackson.databind.BeanProperty $r15;
        java.lang.Exception $r17;
        java.lang.StringBuilder $r18;
        java.lang.String $r19;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        $r6 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.HashSet _ignoredEntries>;

        $r7 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        $r8 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_NULL_MAP_VALUES>;

        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r8);

        if $z0 != 0 goto label04;

        $z0 = 1;

     label01:
        $r9 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r11;

        $r11 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r13 != null goto label05;

        $r14 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;

        $r15 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;

        $r16 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r14, $r15);

        virtualinvoke $r16.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(null, $r2, $r3);

     label03:
        if $r11 != null goto label08;

        virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>($r2);

        goto label02;

     label04:
        $z0 = 0;

        goto label01;

     label05:
        if $z0 == 0 goto label06;

        if $r11 == null goto label02;

     label06:
        if $r6 == null goto label07;

        $z1 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>($r13);

        if $z1 != 0 goto label02;

     label07:
        virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r13, $r2, $r3);

        goto label03;

     label08:
        if $r7 != null goto label12;

     label09:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r11, $r2, $r3);

     label10:
        goto label02;

     label11:
        $r17 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>($r3, $r17, $r1, $r19);

        goto label02;

     label12:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r11, $r2, $r3, $r7);

     label13:
        goto label02;

     label14:
        return;

        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label12 to label13 with label11;
    }

    protected void serializeTypedFields(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        java.util.Map $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4, $r10, $r16;
        java.util.HashSet $r5;
        com.fasterxml.jackson.databind.SerializationFeature $r6;
        boolean $z0, $z1;
        java.util.Set $r7;
        java.util.Iterator $r8;
        java.lang.Class $r9, $r17, $r18;
        java.lang.Object $r11, $r13;
        java.util.Map$Entry $r12;
        com.fasterxml.jackson.databind.JavaType $r14;
        com.fasterxml.jackson.databind.BeanProperty $r15;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r19;
        java.lang.Exception $r20;
        java.lang.StringBuilder $r21;
        java.lang.String $r22;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.HashSet _ignoredEntries>;

        $r6 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_NULL_MAP_VALUES>;

        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r6);

        if $z0 != 0 goto label04;

        $z0 = 1;

     label01:
        $r7 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        $r9 = null;

        $r10 = null;

     label02:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r11 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r11;

        $r11 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r13 != null goto label05;

        $r14 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;

        $r15 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;

        $r16 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r14, $r15);

        virtualinvoke $r16.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(null, $r2, $r3);

     label03:
        if $r11 != null goto label08;

        virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>($r2);

        goto label02;

     label04:
        $z0 = 0;

        goto label01;

     label05:
        if $z0 == 0 goto label06;

        if $r11 == null goto label02;

     label06:
        if $r5 == null goto label07;

        $z1 = virtualinvoke $r5.<java.util.HashSet: boolean contains(java.lang.Object)>($r13);

        if $z1 != 0 goto label02;

     label07:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r13, $r2, $r3);

        goto label03;

     label08:
        $r17 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = $r17;

        if $r17 != $r9 goto label11;

        $r18 = $r9;

        $r16 = $r10;

     label09:
        $r19 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        virtualinvoke $r10.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r11, $r2, $r3, $r19);

     label10:
        $r10 = $r16;

        $r9 = $r18;

        goto label02;

     label11:
        $r15 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;

        $r16 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>($r17, $r15);

        $r10 = $r16;

        goto label09;

     label12:
        $r20 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>($r3, $r20, $r1, $r22);

        $r10 = $r16;

        $r9 = $r18;

        goto label02;

     label13:
        return;

        catch java.lang.Exception from label09 to label10 with label12;
    }

    public volatile void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r3;
        java.lang.Object $r4;
        java.util.Map $r5;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r3 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r5 = (java.util.Map) $r4;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeWithType(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r5, $r1, $r2, $r3);

        return;
    }

    public void serializeWithType(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r3;
        java.util.Map $r4;
        boolean $z0;
        com.fasterxml.jackson.databind.SerializationFeature $r5;
        com.fasterxml.jackson.databind.JsonSerializer $r6;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r4 := @parameter0: java.util.Map;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r3 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        virtualinvoke $r3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>($r4, $r1);

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r5 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature ORDER_MAP_ENTRIES_BY_KEYS>;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r5);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map)>($r4);

     label1:
        $r6 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if $r6 == null goto label3;

        $r6 = $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>($r4, $r1, $r2, $r6);

     label2:
        virtualinvoke $r3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>($r4, $r1);

        return;

     label3:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r4, $r1, $r2);

        goto label2;
    }

    public com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.JsonSerializer, java.util.HashSet)
    {
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r0, $r5;
        com.fasterxml.jackson.databind.BeanProperty $r1;
        com.fasterxml.jackson.databind.JsonSerializer $r2, $r3;
        java.util.HashSet $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JsonSerializer;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;

        $r4 := @parameter3: java.util.HashSet;

        $r5 = new com.fasterxml.jackson.databind.ser.std.MapSerializer;

        specialinvoke $r5.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.HashSet)>($r0, $r1, $r2, $r3, $r4);

        return $r5;
    }
}
