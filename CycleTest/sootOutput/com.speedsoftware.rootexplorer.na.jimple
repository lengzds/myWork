final class com.speedsoftware.rootexplorer.na extends java.lang.Thread
{
    java.lang.String a;
    java.net.Socket b;
    long c;
    java.lang.String d;
    java.lang.String e;
    boolean f;
    final com.speedsoftware.rootexplorer.mz g;

    public void <init>(com.speedsoftware.rootexplorer.mz, java.net.Socket)
    {
        com.speedsoftware.rootexplorer.na $r0;
        com.speedsoftware.rootexplorer.mz $r1;
        java.net.Socket $r2;

        $r0 := @this: com.speedsoftware.rootexplorer.na;

        $r1 := @parameter0: com.speedsoftware.rootexplorer.mz;

        $r2 := @parameter1: java.net.Socket;

        $r0.<com.speedsoftware.rootexplorer.na: com.speedsoftware.rootexplorer.mz g> = $r1;

        specialinvoke $r0.<java.lang.Thread: void <init>()>();

        $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b> = $r2;

        return;
    }

    public final boolean a()
    {
        com.speedsoftware.rootexplorer.na $r0;
        java.net.Socket $r1;
        java.lang.String $r2, $r7;
        java.io.InputStream $r3;
        byte[] $r4;
        int $i0, $i1;
        java.io.IOException $r5, $r12, $r14, $r17, $r19;
        java.lang.String[] $r6;
        boolean $z0;
        com.speedsoftware.rootexplorer.mz $r8;
        com.speedsoftware.rootexplorer.bn $r9;
        long $l2;
        java.lang.StringBuilder $r10;
        java.io.OutputStream $r11;
        java.net.SocketException $r13;
        java.lang.Exception $r15;
        java.lang.Class $r16;
        java.lang.Throwable $r18;

        $r0 := @this: com.speedsoftware.rootexplorer.na;

        $r1 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

        $r2 = null;

     label01:
        $r3 = virtualinvoke $r1.<java.net.Socket: java.io.InputStream getInputStream()>();

     label02:
        $r4 = newarray (byte)[2000];

     label03:
        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r4);

     label04:
        if $i0 <= 0 goto label06;

        $r2 = new java.lang.String;

     label05:
        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int)>($r4, 0, $i0);

     label06:
        if $r2 != null goto label08;

        return 0;

     label07:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RootExplorer", "Error reading HTTP request header from stream:", $r5);

        return 0;

     label08:
        $r6 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        $r2 = $r6[0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("GET ");

        if $z0 != 0 goto label09;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RootExplorer", "Only GET is supported");

        return 0;

     label09:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(4);

        $r7 = $r2;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(32);

        if $i0 == -1 goto label10;

        $r7 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

     label10:
        $r2 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r7);

        $r0.<com.speedsoftware.rootexplorer.na: java.lang.String a> = $r2;

        $r2 = $r0.<com.speedsoftware.rootexplorer.na: java.lang.String a>;

        $r8 = $r0.<com.speedsoftware.rootexplorer.na: com.speedsoftware.rootexplorer.mz g>;

        $r9 = staticinvoke <com.speedsoftware.rootexplorer.mz: com.speedsoftware.rootexplorer.bn a(com.speedsoftware.rootexplorer.mz)>($r8);

        $r7 = virtualinvoke $r9.<com.speedsoftware.rootexplorer.bn: java.lang.String N()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label16;

        $i0 = 0;

     label11:
        $i1 = lengthof $r6;

        if $i0 < $i1 goto label12;

        return 1;

     label12:
        $r2 = $r6[$i0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("Range: bytes=");

        if $z0 == 0 goto label15;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(13);

        $r7 = $r2;

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(45);

        if $i1 <= 0 goto label13;

        $r7 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label13:
        $r0.<com.speedsoftware.rootexplorer.na: java.lang.String d> = $r7;

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r7);

        $r0.<com.speedsoftware.rootexplorer.na: long c> = $l2;

     label14:
        $i0 = $i0 + 1;

        goto label11;

     label15:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("Connection: ");

        if $z0 == 0 goto label14;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(11);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r0.<com.speedsoftware.rootexplorer.na: java.lang.String e> = $r2;

        goto label14;

     label16:
        $r10 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("HTTP/1.0 400\r\n");

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Type: text/plain\r\n");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label17:
        $r1 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

     label18:
        $r11 = virtualinvoke $r1.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r11.<java.io.OutputStream: void write(byte[])>($r4);

     label19:
        $r2 = "Bad request: ";

     label20:
        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r11.<java.io.OutputStream: void write(byte[])>($r4);

     label21:
        $r1 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

        if $r1 == null goto label39;

        $r1 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

     label22:
        virtualinvoke $r1.<java.net.Socket: void close()>();

     label23:
        return 0;

     label24:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.io.IOException: void printStackTrace()>();

        return 0;

     label25:
        $r13 := @caughtexception;

        $r1 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

        if $r1 == null goto label39;

        $r1 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

     label26:
        virtualinvoke $r1.<java.net.Socket: void close()>();

     label27:
        return 0;

     label28:
        $r14 := @caughtexception;

        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

        return 0;

     label29:
        $r15 := @caughtexception;

     label30:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RootExplorer", "StreamToMediaPlayerTask.sendBadRequestResponse: Exception thrown from streaming task:");

        $r10 = new java.lang.StringBuilder;

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r2 = virtualinvoke $r15.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RootExplorer", $r2);

        virtualinvoke $r15.<java.lang.Exception: void printStackTrace()>();

     label31:
        $r1 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

        if $r1 == null goto label39;

        $r1 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

     label32:
        virtualinvoke $r1.<java.net.Socket: void close()>();

     label33:
        return 0;

     label34:
        $r17 := @caughtexception;

        virtualinvoke $r17.<java.io.IOException: void printStackTrace()>();

        return 0;

     label35:
        $r18 := @caughtexception;

        $r1 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

        if $r1 == null goto label37;

        $r1 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

     label36:
        virtualinvoke $r1.<java.net.Socket: void close()>();

     label37:
        throw $r18;

     label38:
        $r19 := @caughtexception;

        virtualinvoke $r19.<java.io.IOException: void printStackTrace()>();

        goto label37;

     label39:
        return 0;

        catch java.io.IOException from label01 to label02 with label07;
        catch java.io.IOException from label03 to label04 with label07;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.net.SocketException from label18 to label19 with label25;
        catch java.net.SocketException from label20 to label21 with label25;
        catch java.lang.Exception from label17 to label19 with label29;
        catch java.lang.Exception from label20 to label21 with label29;
        catch java.lang.Throwable from label17 to label19 with label35;
        catch java.lang.Throwable from label20 to label21 with label35;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.lang.Throwable from label30 to label31 with label35;
        catch java.io.IOException from label32 to label33 with label34;
        catch java.io.IOException from label36 to label37 with label38;
    }

    public final void run()
    {
        com.speedsoftware.rootexplorer.na $r0;
        long $l0, $l1, $l2, $l3, $l6;
        com.speedsoftware.rootexplorer.mz $r1;
        java.lang.String $r2;
        java.lang.StringBuilder $r3;
        com.speedsoftware.rootexplorer.bn $r4;
        byte[] $r5, $r8;
        java.net.Socket $r6;
        java.io.OutputStream $r7;
        boolean $z0;
        byte $b4;
        java.io.InputStream $r9;
        java.net.SocketException $r10;
        java.io.IOException $r11, $r14, $r16, $r17;
        int $i5;
        java.lang.Exception $r12;
        java.lang.Class $r13;
        java.lang.Throwable $r15;

        $r0 := @this: com.speedsoftware.rootexplorer.na;

        $r0.<com.speedsoftware.rootexplorer.na: boolean f> = 1;

        $r1 = $r0.<com.speedsoftware.rootexplorer.na: com.speedsoftware.rootexplorer.mz g>;

        $l1 = staticinvoke <com.speedsoftware.rootexplorer.mz: long b(com.speedsoftware.rootexplorer.mz)>($r1);

        $l2 = $r0.<com.speedsoftware.rootexplorer.na: long c>;

        $l1 = $l1 - $l2;

        $r2 = $r0.<com.speedsoftware.rootexplorer.na: java.lang.String d>;

        if $r2 != null goto label13;

        $r2 = "HTTP/1.0 200 OK\r\n";

     label01:
        $r3 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Type: ");

        $r1 = $r0.<com.speedsoftware.rootexplorer.na: com.speedsoftware.rootexplorer.mz g>;

        $r2 = staticinvoke <com.speedsoftware.rootexplorer.mz: java.lang.String c(com.speedsoftware.rootexplorer.mz)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Accept-Ranges: bytes\r\n");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Range: bytes ");

        $l2 = $r0.<com.speedsoftware.rootexplorer.na: long c>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r1 = $r0.<com.speedsoftware.rootexplorer.na: com.speedsoftware.rootexplorer.mz g>;

        $l2 = staticinvoke <com.speedsoftware.rootexplorer.mz: long b(com.speedsoftware.rootexplorer.mz)>($r1);

        $l2 = $l2 - 1L;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r1 = $r0.<com.speedsoftware.rootexplorer.na: com.speedsoftware.rootexplorer.mz g>;

        $l2 = staticinvoke <com.speedsoftware.rootexplorer.mz: long b(com.speedsoftware.rootexplorer.mz)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Length: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connection: ");

        $r2 = $r0.<com.speedsoftware.rootexplorer.na: java.lang.String e>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Disposition: inline; filename=");

        $r1 = $r0.<com.speedsoftware.rootexplorer.na: com.speedsoftware.rootexplorer.mz g>;

        $r4 = staticinvoke <com.speedsoftware.rootexplorer.mz: com.speedsoftware.rootexplorer.bn a(com.speedsoftware.rootexplorer.mz)>($r1);

        $r2 = virtualinvoke $r4.<com.speedsoftware.rootexplorer.bn: java.lang.String N()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (byte)[49152];

     label02:
        $r6 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

     label03:
        $r7 = virtualinvoke $r6.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $r8 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[])>($r8);

        virtualinvoke $r7.<java.io.OutputStream: void flush()>();

     label04:
        $l3 = $l1;

     label05:
        $z0 = $r0.<com.speedsoftware.rootexplorer.na: boolean f>;

     label06:
        if $z0 == 0 goto label10;

        $b4 = $l3 cmp 0L;

        if $b4 <= 0 goto label10;

     label07:
        $r6 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

     label08:
        $z0 = virtualinvoke $r6.<java.net.Socket: boolean isClosed()>();

     label09:
        if $z0 == 0 goto label14;

     label10:
        $r6 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

        if $r6 == null goto label12;

        $r6 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

     label11:
        virtualinvoke $r6.<java.net.Socket: void close()>();

     label12:
        $r0.<com.speedsoftware.rootexplorer.na: boolean f> = 0;

        return;

     label13:
        $r2 = "HTTP/1.0 206 OK\r\n";

        goto label01;

     label14:
        $l1 = 0L;

     label15:
        $r1 = $r0.<com.speedsoftware.rootexplorer.na: com.speedsoftware.rootexplorer.mz g>;

     label16:
        $r4 = staticinvoke <com.speedsoftware.rootexplorer.mz: com.speedsoftware.rootexplorer.bn a(com.speedsoftware.rootexplorer.mz)>($r1);

     label17:
        $l2 = $r0.<com.speedsoftware.rootexplorer.na: long c>;

     label18:
        $r9 = virtualinvoke $r4.<com.speedsoftware.rootexplorer.bn: java.io.InputStream a(long)>($l2);

     label19:
        if $r9 == null goto label26;

     label20:
        $r1 = $r0.<com.speedsoftware.rootexplorer.na: com.speedsoftware.rootexplorer.mz g>;

     label21:
        $l1 = staticinvoke <com.speedsoftware.rootexplorer.mz: long b(com.speedsoftware.rootexplorer.mz)>($r1);

     label22:
        $l2 = 0L;

     label23:
        $b4 = $l1 cmp 0L;

        if $b4 > 0 goto label33;

     label24:
        virtualinvoke $r9.<java.io.InputStream: void close()>();

        virtualinvoke $r7.<java.io.OutputStream: void flush()>();

     label25:
        $l1 = $l2;

     label26:
        $b4 = $l1 cmp 0L;

        if $b4 != 0 goto label05;

     label27:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label28:
        goto label05;

     label29:
        $r10 := @caughtexception;

        $r6 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

        if $r6 == null goto label12;

        $r6 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

     label30:
        virtualinvoke $r6.<java.net.Socket: void close()>();

     label31:
        goto label12;

     label32:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

        goto label12;

     label33:
        $i5 = lengthof $r5;

     label34:
        $l0 = (long) $i5;

     label35:
        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l1, $l0);

     label36:
        $i5 = (int) $l0;

     label37:
        $i5 = virtualinvoke $r9.<java.io.InputStream: int read(byte[],int,int)>($r5, 0, $i5);

     label38:
        if $i5 == -1 goto label24;

     label39:
        $l0 = (long) $i5;

     label40:
        $l1 = $l1 - $l0;

     label41:
        $l0 = (long) $i5;

     label42:
        $l3 = $l3 - $l0;

     label43:
        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i5);

     label44:
        $l6 = $r0.<com.speedsoftware.rootexplorer.na: long c>;

     label45:
        $l0 = (long) $i5;

     label46:
        $l0 = $l6 + $l0;

     label47:
        $r0.<com.speedsoftware.rootexplorer.na: long c> = $l0;

     label48:
        $l0 = (long) $i5;

        $l2 = $l2 + $l0;

        goto label23;

     label49:
        $r12 := @caughtexception;

     label50:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RootExplorer", "StreamToMediaPlayerTask.run: Exception thrown from streaming task:");

        $r3 = new java.lang.StringBuilder;

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r2 = virtualinvoke $r12.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RootExplorer", $r2);

        virtualinvoke $r12.<java.lang.Exception: void printStackTrace()>();

     label51:
        $r6 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

        if $r6 == null goto label12;

        $r6 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

     label52:
        virtualinvoke $r6.<java.net.Socket: void close()>();

     label53:
        goto label12;

     label54:
        $r14 := @caughtexception;

        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

        goto label12;

     label55:
        $r15 := @caughtexception;

        $r6 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

        if $r6 == null goto label57;

        $r6 = $r0.<com.speedsoftware.rootexplorer.na: java.net.Socket b>;

     label56:
        virtualinvoke $r6.<java.net.Socket: void close()>();

     label57:
        throw $r15;

     label58:
        $r16 := @caughtexception;

        virtualinvoke $r16.<java.io.IOException: void printStackTrace()>();

        goto label57;

     label59:
        $r17 := @caughtexception;

        virtualinvoke $r17.<java.io.IOException: void printStackTrace()>();

        goto label12;

        catch java.net.SocketException from label03 to label04 with label29;
        catch java.net.SocketException from label08 to label09 with label29;
        catch java.lang.Exception from label02 to label04 with label49;
        catch java.lang.Exception from label05 to label06 with label49;
        catch java.lang.Exception from label07 to label09 with label49;
        catch java.lang.Throwable from label02 to label04 with label55;
        catch java.lang.Throwable from label05 to label06 with label55;
        catch java.lang.Throwable from label07 to label09 with label55;
        catch java.io.IOException from label11 to label12 with label59;
        catch java.net.SocketException from label16 to label17 with label29;
        catch java.net.SocketException from label18 to label19 with label29;
        catch java.net.SocketException from label21 to label22 with label29;
        catch java.net.SocketException from label24 to label25 with label29;
        catch java.net.SocketException from label27 to label28 with label29;
        catch java.lang.Exception from label15 to label19 with label49;
        catch java.lang.Exception from label20 to label22 with label49;
        catch java.lang.Exception from label24 to label25 with label49;
        catch java.lang.Exception from label27 to label28 with label49;
        catch java.lang.Throwable from label15 to label19 with label55;
        catch java.lang.Throwable from label20 to label22 with label55;
        catch java.lang.Throwable from label24 to label25 with label55;
        catch java.lang.Throwable from label27 to label28 with label55;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.net.SocketException from label35 to label36 with label29;
        catch java.net.SocketException from label37 to label38 with label29;
        catch java.net.SocketException from label43 to label44 with label29;
        catch java.lang.Exception from label33 to label34 with label49;
        catch java.lang.Exception from label35 to label36 with label49;
        catch java.lang.Exception from label37 to label38 with label49;
        catch java.lang.Exception from label43 to label45 with label49;
        catch java.lang.Exception from label47 to label48 with label49;
        catch java.lang.Throwable from label34 to label38 with label55;
        catch java.lang.Throwable from label39 to label40 with label55;
        catch java.lang.Throwable from label41 to label42 with label55;
        catch java.lang.Throwable from label43 to label46 with label55;
        catch java.lang.Throwable from label47 to label48 with label55;
        catch java.lang.Throwable from label50 to label51 with label55;
        catch java.io.IOException from label52 to label53 with label54;
        catch java.io.IOException from label56 to label57 with label58;
    }
}
