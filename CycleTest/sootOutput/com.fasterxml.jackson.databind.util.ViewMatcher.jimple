public abstract class com.fasterxml.jackson.databind.util.ViewMatcher extends java.lang.Object
{

    public void <init>()
    {
        com.fasterxml.jackson.databind.util.ViewMatcher $r0;

        $r0 := @this: com.fasterxml.jackson.databind.util.ViewMatcher;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.fasterxml.jackson.databind.util.ViewMatcher construct(java.lang.Class[])
    {
        java.lang.Class[] $r0;
        int $i0;
        com.fasterxml.jackson.databind.util.ViewMatcher$Multi $r1;
        com.fasterxml.jackson.databind.util.ViewMatcher$Single $r2;
        java.lang.Class $r3;
        com.fasterxml.jackson.databind.util.ViewMatcher$Empty r4;

        $r0 := @parameter0: java.lang.Class[];

        if $r0 != null goto label1;

        r4 = <com.fasterxml.jackson.databind.util.ViewMatcher$Empty: com.fasterxml.jackson.databind.util.ViewMatcher$Empty instance>;

        return r4;

     label1:
        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label2;
        };

     label2:
        $r1 = new com.fasterxml.jackson.databind.util.ViewMatcher$Multi;

        specialinvoke $r1.<com.fasterxml.jackson.databind.util.ViewMatcher$Multi: void <init>(java.lang.Class[])>($r0);

        return $r1;

     label3:
        r4 = <com.fasterxml.jackson.databind.util.ViewMatcher$Empty: com.fasterxml.jackson.databind.util.ViewMatcher$Empty instance>;

        return r4;

     label4:
        $r2 = new com.fasterxml.jackson.databind.util.ViewMatcher$Single;

        $r3 = $r0[0];

        specialinvoke $r2.<com.fasterxml.jackson.databind.util.ViewMatcher$Single: void <init>(java.lang.Class)>($r3);

        return $r2;
    }

    public abstract boolean isVisibleForView(java.lang.Class);
}
