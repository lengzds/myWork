public final class com.fasterxml.jackson.databind.util.TokenBuffer$Segment extends java.lang.Object
{
    private static final com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX;
    protected com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next;
    protected long _tokenTypes;
    protected final java.lang.Object[] _tokens;

    static void <clinit>()
    {
        com.fasterxml.jackson.core.JsonToken[] $r0, $r1;
        int $i0;

        $r0 = newarray (com.fasterxml.jackson.core.JsonToken)[16];

        <com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX> = $r0;

        $r1 = staticinvoke <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken[] values()>();

        $r0 = <com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX>;

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>(15, $i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 1, $r0, 1, $i0);

        return;
    }

    public void <init>()
    {
        com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r0;
        java.lang.Object[] $r1;

        $r0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.Object)[16];

        $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object[] _tokens> = $r1;

        return;
    }

    public final com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int, com.fasterxml.jackson.core.JsonToken)
    {
        com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r0, $r2;
        int $i0;
        com.fasterxml.jackson.core.JsonToken $r1;

        $r0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonToken;

        if $i0 >= 16 goto label1;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,com.fasterxml.jackson.core.JsonToken)>($i0, $r1);

        return null;

     label1:
        $r2 = new com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        specialinvoke $r2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next> = $r2;

        $r2 = $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        virtualinvoke $r2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,com.fasterxml.jackson.core.JsonToken)>(0, $r1);

        $r0 = $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        return $r0;
    }

    public final com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int, com.fasterxml.jackson.core.JsonToken, java.lang.Object)
    {
        com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r0, $r3;
        int $i0;
        com.fasterxml.jackson.core.JsonToken $r1;
        java.lang.Object $r2;

        $r0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonToken;

        $r2 := @parameter2: java.lang.Object;

        if $i0 >= 16 goto label1;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($i0, $r1, $r2);

        return null;

     label1:
        $r3 = new com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        specialinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next> = $r3;

        $r3 = $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(0, $r1, $r2);

        $r0 = $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        return $r0;
    }

    public final java.lang.Object get(int)
    {
        com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r0;
        int $i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        $r0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object[] _tokens>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public final com.fasterxml.jackson.databind.util.TokenBuffer$Segment next()
    {
        com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r0;

        $r0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        $r0 = $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        return $r0;
    }

    public final void set(int, com.fasterxml.jackson.core.JsonToken)
    {
        com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r0;
        int $i0, $i1;
        com.fasterxml.jackson.core.JsonToken $r1;
        long $l2, $l3;

        $r0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonToken;

        $i1 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        $l2 = (long) $i1;

        if $i0 <= 0 goto label1;

        $i0 = $i0 << 2;

        $l2 = $l2 << $i0;

     label1:
        $l3 = $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;

        $l2 = $l2 | $l3;

        $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes> = $l2;

        return;
    }

    public final void set(int, com.fasterxml.jackson.core.JsonToken, java.lang.Object)
    {
        com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r0;
        int $i0, $i1;
        com.fasterxml.jackson.core.JsonToken $r1;
        java.lang.Object $r2;
        java.lang.Object[] $r3;
        long $l2, $l3;

        $r0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonToken;

        $r2 := @parameter2: java.lang.Object;

        $r3 = $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object[] _tokens>;

        $r3[$i0] = $r2;

        $i1 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        $l2 = (long) $i1;

        if $i0 <= 0 goto label1;

        $i0 = $i0 << 2;

        $l2 = $l2 << $i0;

     label1:
        $l3 = $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;

        $l2 = $l2 | $l3;

        $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes> = $l2;

        return;
    }

    public final com.fasterxml.jackson.core.JsonToken type(int)
    {
        com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r0;
        int $i0;
        com.fasterxml.jackson.core.JsonToken[] $r1;
        long $l1;
        com.fasterxml.jackson.core.JsonToken $r2;

        $r0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        $i0 := @parameter0: int;

        $l1 = $r0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;

        if $i0 <= 0 goto label1;

        $i0 = $i0 << 2;

        $l1 = $l1 >> $i0;

     label1:
        $i0 = (int) $l1;

        $i0 = $i0 & 15;

        $r1 = <com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX>;

        $r2 = $r1[$i0];

        return $r2;
    }
}
