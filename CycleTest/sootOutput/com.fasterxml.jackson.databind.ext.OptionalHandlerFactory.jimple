public class com.fasterxml.jackson.databind.ext.OptionalHandlerFactory extends java.lang.Object
{
    public static final com.fasterxml.jackson.databind.ext.OptionalHandlerFactory instance;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.ext.OptionalHandlerFactory $r0;

        $r0 = new com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: void <init>()>();

        <com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory instance> = $r0;

        return;
    }

    protected void <init>()
    {
        com.fasterxml.jackson.databind.ext.OptionalHandlerFactory $r0;

        $r0 := @this: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private boolean doesImplement(java.lang.Class, java.lang.String)
    {
        com.fasterxml.jackson.databind.ext.OptionalHandlerFactory $r0;
        java.lang.String $r1, $r3;
        java.lang.Class $r2;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

     label1:
        if $r2 == null goto label3;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean hasInterface(java.lang.Class,java.lang.String)>($r2, $r1);

        if $z0 != 0 goto label4;

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label3:
        return 0;

     label4:
        return 1;
    }

    private boolean hasInterface(java.lang.Class, java.lang.String)
    {
        com.fasterxml.jackson.databind.ext.OptionalHandlerFactory $r0;
        java.lang.Class $r1;
        java.lang.String $r2, $r4;
        java.lang.Class[] $r3;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r3[$i1];

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i0 = lengthof $r3;

        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label5;

        $r1 = $r3[$i1];

        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean hasInterface(java.lang.Class,java.lang.String)>($r1, $r2);

        if $z0 != 0 goto label6;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return 0;

     label6:
        return 1;
    }

    private boolean hasInterfaceStartingWith(java.lang.Class, java.lang.String)
    {
        com.fasterxml.jackson.databind.ext.OptionalHandlerFactory $r0;
        java.lang.Class $r1;
        java.lang.String $r2, $r4;
        java.lang.Class[] $r3;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r3[$i1];

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i0 = lengthof $r3;

        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label5;

        $r1 = $r3[$i1];

        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean hasInterfaceStartingWith(java.lang.Class,java.lang.String)>($r1, $r2);

        if $z0 != 0 goto label6;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return 0;

     label6:
        return 1;
    }

    private boolean hasSupertypeStartingWith(java.lang.Class, java.lang.String)
    {
        com.fasterxml.jackson.databind.ext.OptionalHandlerFactory $r0;
        java.lang.String $r1, $r4;
        java.lang.Class $r2, $r3;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

     label1:
        if $r3 == null goto label4;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r3 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label3:
        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

     label4:
        if $r2 == null goto label5;

        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean hasInterfaceStartingWith(java.lang.Class,java.lang.String)>($r2, $r1);

        if $z0 == 0 goto label3;

        return 1;

     label5:
        return 0;
    }

    private java.lang.Object instantiate(java.lang.String)
    {
        com.fasterxml.jackson.databind.ext.OptionalHandlerFactory $r0;
        java.lang.String $r1;
        java.lang.Class $r2;
        java.lang.Object $r3;
        java.lang.Exception $r4;
        java.lang.LinkageError $r5;

        $r0 := @this: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

     label4:
        return null;

     label5:
        $r5 := @caughtexception;

        goto label4;

        catch java.lang.LinkageError from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label3;
    }

    public com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.DeserializationConfig)
    {
        com.fasterxml.jackson.databind.ext.OptionalHandlerFactory $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.DeserializationConfig $r2;
        java.lang.Class $r3, $r11;
        java.lang.String $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fasterxml.jackson.databind.JsonDeserializer $r6;
        com.fasterxml.jackson.databind.util.Provider $r7;
        java.util.Collection $r8;
        java.util.Iterator $r9;
        com.fasterxml.jackson.databind.deser.std.StdDeserializer $r10;

        $r0 := @this: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationConfig;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("javax.xml.");

        if $z0 != 0 goto label1;

        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean hasSupertypeStartingWith(java.lang.Class,java.lang.String)>($r3, "javax.xml.");

        if $z0 == 0 goto label2;

     label1:
        $r5 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.String)>("com.fasterxml.jackson.databind.ext.CoreXMLDeserializers");

        if $r5 != null goto label5;

        return null;

     label2:
        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean doesImplement(java.lang.Class,java.lang.String)>($r3, "org.w3c.dom.Node");

        if $z0 == 0 goto label3;

        $r5 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.String)>("com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer");

        $r6 = (com.fasterxml.jackson.databind.JsonDeserializer) $r5;

        return $r6;

     label3:
        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean doesImplement(java.lang.Class,java.lang.String)>($r3, "org.w3c.dom.Node");

        if $z0 == 0 goto label4;

        $r5 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.String)>("com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer");

        $r6 = (com.fasterxml.jackson.databind.JsonDeserializer) $r5;

        return $r6;

     label4:
        return null;

     label5:
        $r7 = (com.fasterxml.jackson.databind.util.Provider) $r5;

        $r8 = interfaceinvoke $r7.<com.fasterxml.jackson.databind.util.Provider: java.util.Collection provide()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.fasterxml.jackson.databind.deser.std.StdDeserializer) $r5;

        $r11 = virtualinvoke $r10.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class getValueClass()>();

        if $r3 != $r11 goto label6;

        return $r10;

     label7:
        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label8:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r5 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.fasterxml.jackson.databind.deser.std.StdDeserializer) $r5;

        $r11 = virtualinvoke $r10.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class getValueClass()>();

        $z0 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z0 == 0 goto label8;

        return $r10;

     label9:
        return null;
    }

    public com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.ext.OptionalHandlerFactory $r0;
        com.fasterxml.jackson.databind.SerializationConfig $r1;
        com.fasterxml.jackson.databind.JavaType $r2;
        java.lang.Class $r3, $r11;
        java.lang.String $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fasterxml.jackson.databind.JsonSerializer $r6;
        com.fasterxml.jackson.databind.util.Provider $r7;
        java.util.Collection $r8;
        java.util.Iterator $r9;
        java.util.Map$Entry $r10;

        $r0 := @this: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $r3 = virtualinvoke $r2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("javax.xml.");

        if $z0 != 0 goto label1;

        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean hasSupertypeStartingWith(java.lang.Class,java.lang.String)>($r3, "javax.xml.");

        if $z0 == 0 goto label2;

     label1:
        $r5 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.String)>("com.fasterxml.jackson.databind.ext.CoreXMLSerializers");

        if $r5 != null goto label4;

        return null;

     label2:
        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean doesImplement(java.lang.Class,java.lang.String)>($r3, "org.w3c.dom.Node");

        if $z0 == 0 goto label3;

        $r5 = specialinvoke $r0.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.String)>("com.fasterxml.jackson.databind.ext.DOMSerializer");

        $r6 = (com.fasterxml.jackson.databind.JsonSerializer) $r5;

        return $r6;

     label3:
        return null;

     label4:
        $r7 = (com.fasterxml.jackson.databind.util.Provider) $r5;

        $r8 = interfaceinvoke $r7.<com.fasterxml.jackson.databind.util.Provider: java.util.Collection provide()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r3 != $r5 goto label5;

        $r5 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (com.fasterxml.jackson.databind.JsonSerializer) $r5;

        return $r6;

     label6:
        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label7:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.Class) $r5;

        $z0 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (com.fasterxml.jackson.databind.JsonSerializer) $r5;

        return $r6;

     label8:
        return null;
    }
}
