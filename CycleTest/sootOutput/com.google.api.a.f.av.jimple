public final class com.google.api.a.f.av extends java.lang.Object
{

    public static java.lang.Class a(java.lang.reflect.ParameterizedType)
    {
        java.lang.reflect.ParameterizedType $r0;
        java.lang.reflect.Type $r1;
        java.lang.Class $r2;

        $r0 := @parameter0: java.lang.reflect.ParameterizedType;

        $r1 = interfaceinvoke $r0.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r2 = (java.lang.Class) $r1;

        return $r2;
    }

    public static java.lang.Class a(java.util.List, java.lang.reflect.Type)
    {
        java.util.List $r0;
        java.lang.reflect.Type $r1;
        boolean $z0;
        java.lang.reflect.TypeVariable $r2;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.reflect.ParameterizedType $r5;
        java.lang.Object[] $r6;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.reflect.Type;

        $z0 = $r1 instanceof java.lang.reflect.TypeVariable;

        if $z0 == 0 goto label7;

        $r2 = (java.lang.reflect.TypeVariable) $r1;

        $r1 = staticinvoke <com.google.api.a.f.av: java.lang.reflect.Type a(java.util.List,java.lang.reflect.TypeVariable)>($r0, $r2);

     label1:
        $z0 = $r1 instanceof java.lang.reflect.GenericArrayType;

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <com.google.api.a.f.av: java.lang.reflect.Type b(java.lang.reflect.Type)>($r1);

        $r3 = staticinvoke <com.google.api.a.f.av: java.lang.Class a(java.util.List,java.lang.reflect.Type)>($r0, $r1);

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r3, 0);

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        return $r3;

     label2:
        $z0 = $r1 instanceof java.lang.Class;

        if $z0 == 0 goto label3;

        $r3 = (java.lang.Class) $r1;

        return $r3;

     label3:
        $z0 = $r1 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label4;

        $r5 = (java.lang.reflect.ParameterizedType) $r1;

        $r3 = staticinvoke <com.google.api.a.f.av: java.lang.Class a(java.lang.reflect.ParameterizedType)>($r5);

        return $r3;

     label4:
        if $r1 != null goto label6;

        $z0 = 1;

     label5:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r1;

        staticinvoke <com.google.api.a.e.a.a.a.a.b: void a(boolean,java.lang.String,java.lang.Object[])>($z0, "wildcard type is not supported: %s", $r6);

        return class "java/lang/Object";

     label6:
        $z0 = 0;

        goto label5;

     label7:
        goto label1;
    }

    private static java.lang.IllegalArgumentException a(java.lang.Exception, java.lang.Class)
    {
        java.lang.Exception $r0;
        java.lang.Class $r1, $r8;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r3;
        java.util.ArrayList $r4;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        int $i0;
        java.lang.Class[] $r9;
        java.lang.NoSuchMethodException $r10;
        java.lang.IllegalArgumentException $r11;

        $r0 := @parameter0: java.lang.Exception;

        $r1 := @parameter1: java.lang.Class;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("unable to create new instance of class ");

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label04;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>("because it is an array");

     label01:
        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

        $z0 = 0;

     label02:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label15;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r6;

        if $z0 == 0 goto label14;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and");

     label03:
        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label02;

     label04:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label05;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>("because it is primitive");

        goto label01;

     label05:
        if $r1 != class "java/lang/Void" goto label06;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>("because it is void");

        goto label01;

     label06:
        $i0 = virtualinvoke $r1.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isInterface(int)>($i0);

        if $z0 == 0 goto label09;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>("because it is an interface");

     label07:
        $r8 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        if $r8 == null goto label08;

        $i0 = virtualinvoke $r1.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 != 0 goto label08;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>("because it is not static");

     label08:
        $i0 = virtualinvoke $r1.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z0 != 0 goto label10;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>("possibly because it is not public");

        goto label01;

     label09:
        $i0 = virtualinvoke $r1.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        if $z0 == 0 goto label07;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>("because it is abstract");

        goto label07;

     label10:
        $r9 = newarray (java.lang.Class)[0];

     label11:
        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r9);

     label12:
        goto label01;

     label13:
        $r10 := @caughtexception;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>("because it has no accessible default constructor");

        goto label01;

     label14:
        $z0 = 1;

        goto label03;

     label15:
        $r11 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r3, $r0);

        return $r11;

        catch java.lang.NoSuchMethodException from label11 to label12 with label13;
    }

    public static java.lang.Iterable a(java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        java.lang.Iterable $r1;
        java.lang.Class $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;
        com.google.api.a.f.aw $r5;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof java.lang.Iterable;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.Iterable) $r0;

        return $r1;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isArray()>();

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r2;

        staticinvoke <com.google.api.a.e.a.a.a.a.b: void a(boolean,java.lang.String,java.lang.Object[])>($z0, "not an array or Iterable: %s", $r3);

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getComponentType()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label2;

        $r3 = (java.lang.Object[]) $r0;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;

     label2:
        $r5 = new com.google.api.a.f.aw;

        specialinvoke $r5.<com.google.api.a.f.aw: void <init>(java.lang.Object)>($r0);

        return $r5;
    }

    public static java.lang.Object a(java.lang.Class)
    {
        java.lang.Class $r0;
        java.lang.Object $r1;
        java.lang.IllegalAccessException $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.InstantiationException $r4;

        $r0 := @parameter0: java.lang.Class;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <com.google.api.a.f.av: java.lang.IllegalArgumentException a(java.lang.Exception,java.lang.Class)>($r2, $r0);

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $r3 = staticinvoke <com.google.api.a.f.av: java.lang.IllegalArgumentException a(java.lang.Exception,java.lang.Class)>($r4, $r0);

        throw $r3;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label4;
    }

    public static java.lang.Object a(java.util.Collection, java.lang.Class)
    {
        java.util.Collection $r0;
        java.lang.Class $r1;
        boolean $z0;
        int $i0;
        java.lang.Object $r2, $r4;
        java.util.Iterator $r3;
        java.lang.Object[] $r5;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label3;

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r1, $i0);

        $i0 = 0;

        $r3 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r2, $i0, $r4);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;

     label3:
        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r1, $i0);

        $r5 = (java.lang.Object[]) $r2;

        $r5 = interfaceinvoke $r0.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        return $r5;
    }

    private static java.lang.reflect.ParameterizedType a(java.lang.reflect.Type, java.lang.Class)
    {
        java.lang.Class $r0, $r2, $r5;
        int $i0, $i1;
        java.lang.reflect.Type $r1;
        boolean $z0;
        java.lang.reflect.ParameterizedType $r3;
        java.lang.reflect.Type[] $r4;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r0 := @parameter1: java.lang.Class;

        $z0 = $r1 instanceof java.lang.Class;

        if $z0 != 0 goto label01;

        $z0 = $r1 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label09;

     label01:
        if $r1 == null goto label09;

        if $r1 == class "java/lang/Object" goto label09;

        $z0 = $r1 instanceof java.lang.Class;

        if $z0 == 0 goto label03;

        $r2 = (java.lang.Class) $r1;

     label02:
        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();

        goto label01;

     label03:
        $r3 = (java.lang.reflect.ParameterizedType) $r1;

        $r2 = staticinvoke <com.google.api.a.f.av: java.lang.Class a(java.lang.reflect.ParameterizedType)>($r3);

        if $r2 != $r0 goto label04;

        return $r3;

     label04:
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label10;

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>();

        $i0 = lengthof $r4;

        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label10;

        $r1 = $r4[$i1];

        $z0 = $r1 instanceof java.lang.Class;

        if $z0 == 0 goto label07;

        $r5 = (java.lang.Class) $r1;

     label06:
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z0 == 0 goto label08;

        goto label01;

     label07:
        $r3 = (java.lang.reflect.ParameterizedType) $r1;

        $r5 = staticinvoke <com.google.api.a.f.av: java.lang.Class a(java.lang.reflect.ParameterizedType)>($r3);

        goto label06;

     label08:
        $i1 = $i1 + 1;

        goto label05;

     label09:
        return null;

     label10:
        goto label02;
    }

    private static java.lang.reflect.Type a(java.lang.reflect.Type, java.lang.Class, int)
    {
        java.lang.reflect.Type $r0, $r4;
        java.lang.Class $r1;
        int $i0;
        java.lang.reflect.ParameterizedType $r2;
        java.lang.reflect.Type[] $r3;
        boolean $z0;
        java.util.List $r5;
        java.lang.reflect.TypeVariable $r6;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 := @parameter1: java.lang.Class;

        $i0 := @parameter2: int;

        $r2 = staticinvoke <com.google.api.a.f.av: java.lang.reflect.ParameterizedType a(java.lang.reflect.Type,java.lang.Class)>($r0, $r1);

        $r3 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r4 = $r3[$i0];

        $z0 = $r4 instanceof java.lang.reflect.TypeVariable;

        if $z0 == 0 goto label1;

        $r3 = newarray (java.lang.reflect.Type)[1];

        $r3[0] = $r0;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r6 = (java.lang.reflect.TypeVariable) $r4;

        $r0 = staticinvoke <com.google.api.a.f.av: java.lang.reflect.Type a(java.util.List,java.lang.reflect.TypeVariable)>($r5, $r6);

        if $r0 == null goto label1;

        return $r0;

     label1:
        return $r4;
    }

    public static java.lang.reflect.Type a(java.lang.reflect.WildcardType)
    {
        java.lang.reflect.WildcardType $r0;
        int $i0;
        java.lang.reflect.Type[] $r1;
        java.lang.reflect.Type $r2;

        $r0 := @parameter0: java.lang.reflect.WildcardType;

        $r1 = interfaceinvoke $r0.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        $i0 = lengthof $r1;

        if $i0 == 0 goto label1;

        $r2 = $r1[0];

        return $r2;

     label1:
        $r1 = interfaceinvoke $r0.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r2 = $r1[0];

        return $r2;
    }

    public static java.lang.reflect.Type a(java.util.List, java.lang.reflect.TypeVariable)
    {
        java.util.List $r0;
        java.lang.reflect.TypeVariable $r1, $r8;
        java.lang.reflect.GenericDeclaration $r2;
        boolean $z0;
        java.lang.Class $r3;
        int $i0, $i1;
        java.lang.reflect.ParameterizedType $r4;
        java.lang.Object $r5;
        java.lang.reflect.Type $r6, $r10;
        java.lang.reflect.TypeVariable[] $r7;
        java.lang.reflect.Type[] $r9;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.reflect.TypeVariable;

        $r2 = interfaceinvoke $r1.<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>();

        $z0 = $r2 instanceof java.lang.Class;

        if $z0 == 0 goto label5;

        $r3 = (java.lang.Class) $r2;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r4 = null;

     label1:
        if $r4 != null goto label2;

        $i0 = $i0 + -1;

        if $i0 < 0 goto label2;

        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (java.lang.reflect.Type) $r5;

        $r4 = staticinvoke <com.google.api.a.f.av: java.lang.reflect.ParameterizedType a(java.lang.reflect.Type,java.lang.Class)>($r6, $r3);

        goto label1;

     label2:
        if $r4 == null goto label5;

        $r7 = interfaceinvoke $r2.<java.lang.reflect.GenericDeclaration: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $i0 = 0;

     label3:
        $i1 = lengthof $r7;

        if $i0 >= $i1 goto label4;

        $r8 = $r7[$i0];

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label4;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r9 = interfaceinvoke $r4.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r6 = $r9[$i0];

        $z0 = $r6 instanceof java.lang.reflect.TypeVariable;

        if $z0 == 0 goto label6;

        $r1 = (java.lang.reflect.TypeVariable) $r6;

        $r10 = staticinvoke <com.google.api.a.f.av: java.lang.reflect.Type a(java.util.List,java.lang.reflect.TypeVariable)>($r0, $r1);

        if $r10 == null goto label6;

        return $r10;

     label5:
        return null;

     label6:
        return $r6;
    }

    public static boolean a(java.lang.Class, java.lang.Class)
    {
        java.lang.Class $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean a(java.lang.reflect.Type)
    {
        boolean $z0;
        java.lang.reflect.Type $r0;
        java.lang.Class $r1;

        $r0 := @parameter0: java.lang.reflect.Type;

        $z0 = $r0 instanceof java.lang.reflect.GenericArrayType;

        if $z0 != 0 goto label1;

        $z0 = $r0 instanceof java.lang.Class;

        if $z0 == 0 goto label2;

        $r1 = (java.lang.Class) $r0;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static java.lang.reflect.Type b(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r0;
        boolean $z0;
        java.lang.reflect.GenericArrayType $r1;
        java.lang.Class $r2;

        $r0 := @parameter0: java.lang.reflect.Type;

        $z0 = $r0 instanceof java.lang.reflect.GenericArrayType;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.reflect.GenericArrayType) $r0;

        $r0 = interfaceinvoke $r1.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        return $r0;

     label1:
        $r2 = (java.lang.Class) $r0;

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getComponentType()>();

        return $r2;
    }

    public static java.lang.reflect.Type c(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r0;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r0 = staticinvoke <com.google.api.a.f.av: java.lang.reflect.Type a(java.lang.reflect.Type,java.lang.Class,int)>($r0, class "java/lang/Iterable", 0);

        return $r0;
    }

    public static java.lang.reflect.Type d(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r0;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r0 = staticinvoke <com.google.api.a.f.av: java.lang.reflect.Type a(java.lang.reflect.Type,java.lang.Class,int)>($r0, class "java/util/Map", 1);

        return $r0;
    }
}
