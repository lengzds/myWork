public class com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator extends java.lang.Object implements java.util.Iterator
{
    static final com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator instance;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator $r0;

        $r0 = new com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator;

        specialinvoke $r0.<com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator: void <init>()>();

        <com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator: com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator instance> = $r0;

        return;
    }

    private void <init>()
    {
        com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator $r0;

        $r0 := @this: com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator instance()
    {
        com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator r0;

        r0 = <com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator: com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator instance>;

        return r0;
    }

    public boolean hasNext()
    {
        com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator $r0;

        $r0 := @this: com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator;

        return 0;
    }

    public com.fasterxml.jackson.databind.JsonNode next()
    {
        com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator $r0;
        java.util.NoSuchElementException $r1;

        $r0 := @this: com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }

    public volatile java.lang.Object next()
    {
        com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator $r0;
        com.fasterxml.jackson.databind.JsonNode $r1;

        $r0 := @this: com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator;

        $r1 = virtualinvoke $r0.<com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator: com.fasterxml.jackson.databind.JsonNode next()>();

        return $r1;
    }

    public void remove()
    {
        com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator $r0;
        java.lang.IllegalStateException $r1;

        $r0 := @this: com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;
    }
}
