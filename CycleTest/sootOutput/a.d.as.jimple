abstract class a.d.as extends a.d.u implements java.util.Enumeration
{
    private static final int a;
    protected int D;
    protected int E;
    protected int F;
    protected int G;
    protected int H;
    protected int I;
    protected int J;
    protected int K;
    int L;
    int M;
    int N;
    int O;
    byte P;
    int Q;
    int R;
    byte S;
    java.lang.String T;
    int U;
    byte[] V;
    private boolean aA;
    private boolean aB;
    private int aC;
    private int aD;
    private int b;
    private int c;
    private int d;

    static void <clinit>()
    {
        int $i0;

        $i0 = staticinvoke <a.a: int a(java.lang.String,int)>("jcifs.smb.client.transaction_buf_size", 65535);

        $i0 = $i0 + -512;

        <a.d.as: int a> = $i0;

        return;
    }

    void <init>()
    {
        a.d.as $r0;
        int $i0;

        $r0 := @this: a.d.as;

        specialinvoke $r0.<a.d.u: void <init>()>();

        $r0.<a.d.as: int b> = 0;

        $r0.<a.d.as: int c> = 0;

        $r0.<a.d.as: int d> = 0;

        $r0.<a.d.as: boolean aA> = 1;

        $r0.<a.d.as: boolean aB> = 1;

        $i0 = <a.d.as: int a>;

        $r0.<a.d.as: int O> = $i0;

        $r0.<a.d.as: int Q> = 0;

        $r0.<a.d.as: int R> = 1;

        $r0.<a.d.as: java.lang.String T> = "";

        $r0.<a.d.as: int N> = 1024;

        $r0.<a.d.as: int D> = 61;

        $r0.<a.d.as: int E> = 51;

        return;
    }

    abstract int a(byte[], int);

    void a(int, java.lang.String)
    {
        a.d.as $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @this: a.d.as;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        virtualinvoke $r0.<a.d.as: void e()>();

        return;
    }

    abstract int b(byte[], int);

    abstract int c(byte[], int);

    final void e()
    {
        a.d.as $r0;

        $r0 := @this: a.d.as;

        specialinvoke $r0.<a.d.u: void e()>();

        $r0.<a.d.as: boolean aA> = 1;

        $r0.<a.d.as: boolean aB> = 1;

        return;
    }

    public boolean hasMoreElements()
    {
        a.d.as $r0;
        boolean z0;

        $r0 := @this: a.d.as;

        z0 = $r0.<a.d.as: boolean aA>;

        return z0;
    }

    int i(byte[], int)
    {
        a.d.as $r0;
        byte[] $r1;
        int $i0, $i2, $i3, $i5;
        long $l1;
        byte $b4;

        $r0 := @this: a.d.as;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i3 = $r0.<a.d.as: int L>;

        $l1 = (long) $i3;

        staticinvoke <a.d.as: void a(long,byte[],int)>($l1, $r1, $i0);

        $i3 = $i0 + 2;

        $i2 = $r0.<a.d.as: int M>;

        $l1 = (long) $i2;

        staticinvoke <a.d.as: void a(long,byte[],int)>($l1, $r1, $i3);

        $i3 = $i3 + 2;

        $b4 = $r0.<a.d.as: byte g>;

        if $b4 == 38 goto label1;

        $i2 = $r0.<a.d.as: int N>;

        $l1 = (long) $i2;

        staticinvoke <a.d.as: void a(long,byte[],int)>($l1, $r1, $i3);

        $i3 = $i3 + 2;

        $i2 = $r0.<a.d.as: int O>;

        $l1 = (long) $i2;

        staticinvoke <a.d.as: void a(long,byte[],int)>($l1, $r1, $i3);

        $i2 = $i3 + 2;

        $i3 = $i2 + 1;

        $b4 = $r0.<a.d.as: byte P>;

        $r1[$i2] = $b4;

        $i2 = $i3 + 1;

        $r1[$i3] = 0;

        $i3 = $r0.<a.d.as: int b>;

        $l1 = (long) $i3;

        staticinvoke <a.d.as: void a(long,byte[],int)>($l1, $r1, $i2);

        $i3 = $i2 + 2;

        $i2 = $r0.<a.d.as: int Q>;

        $l1 = (long) $i2;

        staticinvoke <a.d.as: void b(long,byte[],int)>($l1, $r1, $i3);

        $i3 = $i3 + 4;

        $i2 = $i3 + 1;

        $r1[$i3] = 0;

        $i3 = $i2 + 1;

        $r1[$i2] = 0;

     label1:
        $i2 = $r0.<a.d.as: int F>;

        $l1 = (long) $i2;

        staticinvoke <a.d.as: void a(long,byte[],int)>($l1, $r1, $i3);

        $i3 = $i3 + 2;

        $i2 = $r0.<a.d.as: int G>;

        $l1 = (long) $i2;

        staticinvoke <a.d.as: void a(long,byte[],int)>($l1, $r1, $i3);

        $i3 = $i3 + 2;

        $b4 = $r0.<a.d.as: byte g>;

        if $b4 != 38 goto label2;

        $i2 = $r0.<a.d.as: int H>;

        $l1 = (long) $i2;

        staticinvoke <a.d.as: void a(long,byte[],int)>($l1, $r1, $i3);

        $i3 = $i3 + 2;

     label2:
        $i2 = $r0.<a.d.as: int I>;

        $l1 = (long) $i2;

        staticinvoke <a.d.as: void a(long,byte[],int)>($l1, $r1, $i3);

        $i3 = $i3 + 2;

        $i2 = $r0.<a.d.as: int I>;

        if $i2 != 0 goto label5;

        $i2 = 0;

     label3:
        $l1 = (long) $i2;

        staticinvoke <a.d.as: void a(long,byte[],int)>($l1, $r1, $i3);

        $i3 = $i3 + 2;

        $b4 = $r0.<a.d.as: byte g>;

        if $b4 != 38 goto label6;

        $i2 = $r0.<a.d.as: int K>;

        $l1 = (long) $i2;

        staticinvoke <a.d.as: void a(long,byte[],int)>($l1, $r1, $i3);

        $i3 = $i3 + 2;

     label4:
        $i0 = $i3 - $i0;

        return $i0;

     label5:
        $i2 = $r0.<a.d.as: int J>;

        goto label3;

     label6:
        $i2 = $i3 + 1;

        $i5 = $r0.<a.d.as: int R>;

        $b4 = (byte) $i5;

        $r1[$i3] = $b4;

        $i3 = $i2 + 1;

        $r1[$i2] = 0;

        $i2 = virtualinvoke $r0.<a.d.as: int a(byte[],int)>($r1, $i3);

        $i3 = $i3 + $i2;

        goto label4;
    }

    final int j(byte[], int)
    {
        a.d.as $r0;
        byte[] $r1, $r3;
        int $i0, $i1, $i3, $i4;
        byte $b2;
        boolean $z0;
        java.lang.String $r2;

        $r0 := @this: a.d.as;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = $r0.<a.d.as: int c>;

        $b2 = $r0.<a.d.as: byte g>;

        if $b2 != 37 goto label8;

        $z0 = virtualinvoke $r0.<a.d.as: boolean f()>();

        if $z0 != 0 goto label8;

        $r2 = $r0.<a.d.as: java.lang.String T>;

        $i3 = virtualinvoke $r0.<a.d.as: int a(java.lang.String,byte[],int)>($r2, $r1, $i0);

        $i3 = $i3 + $i0;

     label1:
        $i4 = $r0.<a.d.as: int F>;

        if $i4 <= 0 goto label4;

        $i4 = $i1;

     label2:
        if $i4 <= 0 goto label3;

        $r1[$i3] = 0;

        $i3 = $i3 + 1;

        $i4 = $i4 + -1;

        goto label2;

     label3:
        $r3 = $r0.<a.d.as: byte[] V>;

        $i1 = $r0.<a.d.as: int aC>;

        $i4 = $r0.<a.d.as: int F>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r1, $i3, $i4);

        $i1 = $r0.<a.d.as: int F>;

        $i3 = $i1 + $i3;

     label4:
        $i1 = $r0.<a.d.as: int I>;

        if $i1 <= 0 goto label7;

        $i4 = $r0.<a.d.as: int d>;

     label5:
        if $i4 <= 0 goto label6;

        $r1[$i3] = 0;

        $i3 = $i3 + 1;

        $i4 = $i4 + -1;

        goto label5;

     label6:
        $r3 = $r0.<a.d.as: byte[] V>;

        $i1 = $r0.<a.d.as: int aD>;

        $i4 = $r0.<a.d.as: int I>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r1, $i3, $i4);

        $i1 = $r0.<a.d.as: int aD>;

        $i4 = $r0.<a.d.as: int I>;

        $i1 = $i1 + $i4;

        $r0.<a.d.as: int aD> = $i1;

        $i1 = $r0.<a.d.as: int I>;

        $i3 = $i1 + $i3;

     label7:
        $i0 = $i3 - $i0;

        return $i0;

     label8:
        $i3 = $i0;

        goto label1;
    }

    final int k(byte[], int)
    {
        a.d.as $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.as;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    final int l(byte[], int)
    {
        a.d.as $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.as;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    public java.lang.Object nextElement()
    {
        a.d.as $r0;
        boolean $z0;
        int $i0, $i1, $i3;
        byte $b2;
        java.lang.String $r1;
        byte[] $r2;

        $r0 := @this: a.d.as;

        $z0 = $r0.<a.d.as: boolean aB>;

        if $z0 == 0 goto label08;

        $r0.<a.d.as: boolean aB> = 0;

        $i0 = $r0.<a.d.as: int D>;

        $i1 = $r0.<a.d.as: int R>;

        $i1 = $i1 * 2;

        $i0 = $i0 + $i1;

        $i0 = $i0 + 2;

        $r0.<a.d.as: int G> = $i0;

        $b2 = $r0.<a.d.as: byte g>;

        if $b2 == -96 goto label05;

        $b2 = $r0.<a.d.as: byte g>;

        if $b2 != 37 goto label01;

        $z0 = virtualinvoke $r0.<a.d.as: boolean f()>();

        if $z0 != 0 goto label01;

        $i0 = $r0.<a.d.as: int G>;

        $r1 = $r0.<a.d.as: java.lang.String T>;

        $i1 = $r0.<a.d.as: int G>;

        $i1 = virtualinvoke $r0.<a.d.as: int a(java.lang.String,int)>($r1, $i1);

        $i0 = $i0 + $i1;

        $r0.<a.d.as: int G> = $i0;

     label01:
        $i0 = $r0.<a.d.as: int G>;

        $i0 = $i0 % 2;

        $r0.<a.d.as: int c> = $i0;

        $i0 = $r0.<a.d.as: int c>;

        if $i0 != 0 goto label06;

        $i0 = 0;

     label02:
        $r0.<a.d.as: int c> = $i0;

        $i0 = $r0.<a.d.as: int G>;

        $i1 = $r0.<a.d.as: int c>;

        $i0 = $i0 + $i1;

        $r0.<a.d.as: int G> = $i0;

        $r2 = $r0.<a.d.as: byte[] V>;

        $i0 = $r0.<a.d.as: int aC>;

        $i0 = virtualinvoke $r0.<a.d.as: int b(byte[],int)>($r2, $i0);

        $r0.<a.d.as: int L> = $i0;

        $i0 = $r0.<a.d.as: int L>;

        $r0.<a.d.as: int aD> = $i0;

        $i0 = $r0.<a.d.as: int U>;

        $i1 = $r0.<a.d.as: int G>;

        $i0 = $i0 - $i1;

        $i1 = $r0.<a.d.as: int L>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        $r0.<a.d.as: int F> = $i1;

        $i1 = $r0.<a.d.as: int F>;

        $i0 = $i0 - $i1;

        $i1 = $r0.<a.d.as: int G>;

        $i3 = $r0.<a.d.as: int F>;

        $i1 = $i1 + $i3;

        $r0.<a.d.as: int J> = $i1;

        $i1 = $r0.<a.d.as: int J>;

        $i1 = $i1 % 2;

        $r0.<a.d.as: int d> = $i1;

        $i1 = $r0.<a.d.as: int d>;

        if $i1 != 0 goto label07;

        $i1 = 0;

     label03:
        $r0.<a.d.as: int d> = $i1;

        $i1 = $r0.<a.d.as: int J>;

        $i3 = $r0.<a.d.as: int d>;

        $i1 = $i1 + $i3;

        $r0.<a.d.as: int J> = $i1;

        $r2 = $r0.<a.d.as: byte[] V>;

        $i1 = $r0.<a.d.as: int aD>;

        $i1 = virtualinvoke $r0.<a.d.as: int c(byte[],int)>($r2, $i1);

        $r0.<a.d.as: int M> = $i1;

        $i1 = $r0.<a.d.as: int M>;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        $r0.<a.d.as: int I> = $i0;

     label04:
        $i0 = $r0.<a.d.as: int H>;

        $i1 = $r0.<a.d.as: int F>;

        $i0 = $i0 + $i1;

        $i1 = $r0.<a.d.as: int L>;

        if $i0 < $i1 goto label16;

        $i0 = $r0.<a.d.as: int K>;

        $i1 = $r0.<a.d.as: int I>;

        $i0 = $i0 + $i1;

        $i1 = $r0.<a.d.as: int M>;

        if $i0 < $i1 goto label16;

        $r0.<a.d.as: boolean aA> = 0;

        return $r0;

     label05:
        $b2 = $r0.<a.d.as: byte g>;

        if $b2 != -96 goto label01;

        $i0 = $r0.<a.d.as: int G>;

        $i0 = $i0 + 2;

        $r0.<a.d.as: int G> = $i0;

        goto label01;

     label06:
        $i0 = $r0.<a.d.as: int c>;

        $i0 = 2 - $i0;

        goto label02;

     label07:
        $i1 = $r0.<a.d.as: int d>;

        $i1 = 2 - $i1;

        goto label03;

     label08:
        $b2 = $r0.<a.d.as: byte g>;

        if $b2 == -96 goto label13;

        $r0.<a.d.as: byte g> = 38;

     label09:
        $r0.<a.d.as: int G> = 51;

        $i0 = $r0.<a.d.as: int L>;

        $i1 = $r0.<a.d.as: int H>;

        $i0 = $i0 - $i1;

        if $i0 <= 0 goto label11;

        $i0 = $r0.<a.d.as: int G>;

        $i0 = $i0 % 2;

        $r0.<a.d.as: int c> = $i0;

        $i0 = $r0.<a.d.as: int c>;

        if $i0 != 0 goto label14;

        $i0 = 0;

     label10:
        $r0.<a.d.as: int c> = $i0;

        $i0 = $r0.<a.d.as: int G>;

        $i1 = $r0.<a.d.as: int c>;

        $i0 = $i0 + $i1;

        $r0.<a.d.as: int G> = $i0;

     label11:
        $i0 = $r0.<a.d.as: int H>;

        $i1 = $r0.<a.d.as: int F>;

        $i0 = $i0 + $i1;

        $r0.<a.d.as: int H> = $i0;

        $i0 = $r0.<a.d.as: int U>;

        $i1 = $r0.<a.d.as: int G>;

        $i0 = $i0 - $i1;

        $i1 = $r0.<a.d.as: int c>;

        $i0 = $i0 - $i1;

        $i1 = $r0.<a.d.as: int L>;

        $i3 = $r0.<a.d.as: int H>;

        $i1 = $i1 - $i3;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        $r0.<a.d.as: int F> = $i1;

        $i1 = $r0.<a.d.as: int F>;

        $i0 = $i0 - $i1;

        $i1 = $r0.<a.d.as: int G>;

        $i3 = $r0.<a.d.as: int F>;

        $i1 = $i1 + $i3;

        $r0.<a.d.as: int J> = $i1;

        $i1 = $r0.<a.d.as: int J>;

        $i1 = $i1 % 2;

        $r0.<a.d.as: int d> = $i1;

        $i1 = $r0.<a.d.as: int d>;

        if $i1 != 0 goto label15;

        $i1 = 0;

     label12:
        $r0.<a.d.as: int d> = $i1;

        $i1 = $r0.<a.d.as: int J>;

        $i3 = $r0.<a.d.as: int d>;

        $i1 = $i1 + $i3;

        $r0.<a.d.as: int J> = $i1;

        $i1 = $r0.<a.d.as: int K>;

        $i3 = $r0.<a.d.as: int I>;

        $i1 = $i1 + $i3;

        $r0.<a.d.as: int K> = $i1;

        $i1 = $r0.<a.d.as: int d>;

        $i0 = $i0 - $i1;

        $i1 = $r0.<a.d.as: int M>;

        $i3 = $r0.<a.d.as: int K>;

        $i1 = $i1 - $i3;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        $r0.<a.d.as: int I> = $i0;

        goto label04;

     label13:
        $r0.<a.d.as: byte g> = -95;

        goto label09;

     label14:
        $i0 = $r0.<a.d.as: int c>;

        $i0 = 2 - $i0;

        goto label10;

     label15:
        $i1 = $r0.<a.d.as: int d>;

        $i1 = 2 - $i1;

        goto label12;

     label16:
        return $r0;
    }

    public java.lang.String toString()
    {
        a.d.as $r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder $r2;
        int $i0;
        byte $b1;

        $r0 := @this: a.d.as;

        $r1 = new java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke $r0.<a.d.u: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",totalParameterCount=");

        $i0 = $r0.<a.d.as: int L>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",totalDataCount=");

        $i0 = $r0.<a.d.as: int M>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",maxParameterCount=");

        $i0 = $r0.<a.d.as: int N>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",maxDataCount=");

        $i0 = $r0.<a.d.as: int O>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",maxSetupCount=");

        $b1 = $r0.<a.d.as: byte P>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",flags=0x");

        $i0 = $r0.<a.d.as: int b>;

        $r3 = staticinvoke <a.e.d: java.lang.String a(int,int)>($i0, 2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",timeout=");

        $i0 = $r0.<a.d.as: int Q>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",parameterCount=");

        $i0 = $r0.<a.d.as: int F>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",parameterOffset=");

        $i0 = $r0.<a.d.as: int G>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",parameterDisplacement=");

        $i0 = $r0.<a.d.as: int H>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dataCount=");

        $i0 = $r0.<a.d.as: int I>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dataOffset=");

        $i0 = $r0.<a.d.as: int J>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dataDisplacement=");

        $i0 = $r0.<a.d.as: int K>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",setupCount=");

        $i0 = $r0.<a.d.as: int R>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",pad=");

        $i0 = $r0.<a.d.as: int c>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",pad1=");

        $i0 = $r0.<a.d.as: int d>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>($r3);

        return $r1;
    }
}
