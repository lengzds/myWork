public class com.fasterxml.jackson.databind.ser.PropertyBuilder extends java.lang.Object
{
    protected final com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector;
    protected final com.fasterxml.jackson.databind.BeanDescription _beanDesc;
    protected final com.fasterxml.jackson.databind.SerializationConfig _config;
    protected java.lang.Object _defaultBean;
    protected final com.fasterxml.jackson.annotation.JsonInclude$Include _outputProps;

    public void <init>(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription)
    {
        com.fasterxml.jackson.databind.ser.PropertyBuilder $r0;
        com.fasterxml.jackson.databind.SerializationConfig $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;
        com.fasterxml.jackson.'annotation'.JsonInclude$Include $r3;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.SerializationConfig _config> = $r1;

        $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc> = $r2;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.'annotation'.JsonInclude$Include getSerializationInclusion()>();

        $r3 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.'annotation'.JsonInclude$Include findSerializationInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Include)>($r3);

        $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.annotation.JsonInclude$Include _outputProps> = $r3;

        $r1 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector> = $r4;

        return;
    }

    protected java.lang.Object _throwWrapped(java.lang.Exception, java.lang.String, java.lang.Object)
    {
        com.fasterxml.jackson.databind.ser.PropertyBuilder $r0;
        java.lang.Exception $r1;
        java.lang.String $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4, $r5;
        boolean $z0;
        java.lang.Error $r6;
        java.lang.RuntimeException $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9;
        java.lang.Class $r10;

        $r0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;

        $r1 := @parameter0: java.lang.Exception;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object;

        $r4 = $r1;

     label1:
        $r5 = virtualinvoke $r4.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r5 == null goto label2;

        $r4 = virtualinvoke $r4.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label2:
        $z0 = $r4 instanceof java.lang.Error;

        if $z0 == 0 goto label3;

        $r6 = (java.lang.Error) $r4;

        throw $r6;

     label3:
        $z0 = $r4 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label4;

        $r7 = (java.lang.RuntimeException) $r4;

        throw $r7;

     label4:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to get property \'");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' of default ");

        $r10 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instance");

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r8;
    }

    protected com.fasterxml.jackson.databind.ser.BeanPropertyWriter buildWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.introspect.AnnotatedMember, boolean)
    {
        com.fasterxml.jackson.databind.ser.PropertyBuilder $r0;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition $r1;
        com.fasterxml.jackson.databind.JavaType $r2, $r7, $r8;
        com.fasterxml.jackson.databind.JsonSerializer $r3;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r4, $r5;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r6;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;
        com.fasterxml.jackson.databind.BeanDescription $r12;
        java.lang.Object $r13, $r20;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r14;
        com.fasterxml.jackson.'annotation'.JsonInclude$Include $r15;
        int[] $r16;
        int $i0;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r17;
        com.fasterxml.jackson.databind.util.Annotations $r18;
        com.fasterxml.jackson.databind.util.NameTransformer $r19;
        java.lang.Class $r21;
        com.fasterxml.jackson.databind.SerializationConfig $r22;
        com.fasterxml.jackson.databind.SerializationFeature $r23;

        $r0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;

        $r1 := @parameter0: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;

        $r4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r5 := @parameter4: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r6 := @parameter5: com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        $z0 := @parameter6: boolean;

        $r7 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.JavaType findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated,boolean,com.fasterxml.jackson.databind.JavaType)>($r6, $z0, $r2);

        $r8 = $r7;

        if $r5 == null goto label10;

        if $r7 != null goto label01;

        $r8 = $r2;

     label01:
        $r7 = virtualinvoke $r8.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();

        if $r7 != null goto label02;

        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Problem trying to create BeanPropertyWriter for property \'");

        $r11 = virtualinvoke $r1.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: java.lang.String getName()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' (of type ");

        $r12 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;

        $r2 = virtualinvoke $r12.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.JavaType getType()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("); serialization type ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no content");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r9;

     label02:
        $r8 = virtualinvoke $r8.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object)>($r5);

        $r7 = $r8;

        virtualinvoke $r8.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();

     label03:
        $r13 = null;

        $z0 = 0;

        $r14 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        $r15 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.annotation.JsonInclude$Include _outputProps>;

        $r15 = virtualinvoke $r14.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.'annotation'.JsonInclude$Include findSerializationInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.'annotation'.JsonInclude$Include)>($r6, $r15);

        if $r15 == null goto label04;

        $r16 = <com.fasterxml.jackson.databind.ser.PropertyBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;

        $i0 = virtualinvoke $r15.<com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();

        $i0 = $r16[$i0];

        lookupswitch($i0)
        {
            case 1: goto label05;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            default: goto label04;
        };

     label04:
        $r17 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter;

        $r12 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;

        $r18 = virtualinvoke $r12.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.util.Annotations getClassAnnotations()>();

        specialinvoke $r17.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object)>($r1, $r6, $r18, $r2, $r3, $r4, $r7, $z0, $r13);

        $r14 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        $r19 = virtualinvoke $r14.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember)>($r6);

        if $r19 == null goto label11;

        $r17 = virtualinvoke $r17.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.ser.BeanPropertyWriter unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer)>($r19);

        return $r17;

     label05:
        $r11 = virtualinvoke $r1.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: java.lang.String getName()>();

        $r20 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object getDefaultValue(java.lang.String,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>($r11, $r6);

        $r13 = $r20;

        if $r20 != null goto label06;

        $z0 = 1;

        goto label04;

     label06:
        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r21.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label04;

        $r13 = staticinvoke <com.fasterxml.jackson.databind.util.Comparators: java.lang.Object getArrayComparator(java.lang.Object)>($r20);

        $z0 = 0;

        goto label04;

     label07:
        $r13 = <com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Object MARKER_FOR_EMPTY>;

        $z0 = 1;

        goto label04;

     label08:
        $z0 = 1;

     label09:
        $z1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z1 == 0 goto label04;

        $r22 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r23 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS>;

        $z1 = virtualinvoke $r22.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r23);

        if $z1 != 0 goto label04;

        $r13 = <com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Object MARKER_FOR_EMPTY>;

        goto label04;

     label10:
        goto label03;

     label11:
        return $r17;
    }

    protected com.fasterxml.jackson.databind.JavaType findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated, boolean, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.ser.PropertyBuilder $r0;
        com.fasterxml.jackson.databind.introspect.Annotated $r1;
        com.fasterxml.jackson.databind.JavaType $r2, $r7;
        boolean $z0, $z1;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r3;
        java.lang.Class $r4, $r5;
        com.fasterxml.jackson.databind.SerializationConfig $r6;
        com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing $r8, $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;

        $r0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;

        $r1 := @parameter0: com.fasterxml.jackson.databind.introspect.Annotated;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: com.fasterxml.jackson.databind.JavaType;

        $z1 = 1;

        $r3 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Class findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated)>($r1);

        if $r4 == null goto label11;

        $r5 = virtualinvoke $r2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z0 == 0 goto label05;

        $r2 = virtualinvoke $r2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType widenBy(java.lang.Class)>($r4);

     label01:
        $z0 = 1;

     label02:
        $r6 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r7 = staticinvoke <com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JavaType modifySecondaryTypesByAnnotation(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>($r6, $r1, $r2);

        if $r7 == $r2 goto label10;

        $r2 = $r7;

        $z0 = 1;

     label03:
        if $z0 != 0 goto label09;

        $r3 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        $r8 = virtualinvoke $r3.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated)>($r1);

        if $r8 == null goto label09;

        $r9 = <com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing STATIC>;

        if $r8 != $r9 goto label07;

     label04:
        if $z1 == 0 goto label08;

        return $r2;

     label05:
        $z0 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 != 0 goto label06;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Illegal concrete-type annotation for method \'");

        $r12 = virtualinvoke $r1.<com.fasterxml.jackson.databind.introspect.Annotated: java.lang.String getName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': class ");

        $r12 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a super-type of (declared) class ");

        $r12 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r10;

     label06:
        $r6 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r2 = virtualinvoke $r6.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r2, $r4);

        goto label01;

     label07:
        $z1 = 0;

        goto label04;

     label08:
        return null;

     label09:
        $z1 = $z0;

        goto label04;

     label10:
        goto label03;

     label11:
        goto label02;
    }

    public com.fasterxml.jackson.databind.util.Annotations getClassAnnotations()
    {
        com.fasterxml.jackson.databind.ser.PropertyBuilder $r0;
        com.fasterxml.jackson.databind.util.Annotations $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.util.Annotations getClassAnnotations()>();

        return $r1;
    }

    protected java.lang.Object getDefaultBean()
    {
        com.fasterxml.jackson.databind.ser.PropertyBuilder $r0;
        java.lang.Object $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;
        com.fasterxml.jackson.databind.SerializationConfig $r3;
        boolean $z0;
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r4;
        java.lang.Class $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        $r0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;

        $r1 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object _defaultBean>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;

        $r3 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Object instantiateBean(boolean)>($z0);

        $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object _defaultBean> = $r1;

        $r1 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object _defaultBean>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;

        $r4 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class getAnnotated()>();

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Class ");

        $r8 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no default constructor; can not instantiate default bean value to support \'properties=JsonSerialize.Inclusion.NON_DEFAULT\' annotation");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label1:
        $r1 = $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object _defaultBean>;

        return $r1;
    }

    protected java.lang.Object getDefaultValue(java.lang.String, com.fasterxml.jackson.databind.introspect.AnnotatedMember)
    {
        com.fasterxml.jackson.databind.ser.PropertyBuilder $r0;
        java.lang.String $r1;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r2;
        java.lang.Exception $r3;
        java.lang.Object $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object getDefaultBean()>();

     label1:
        $r4 = virtualinvoke $r2.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.Object getValue(java.lang.Object)>($r4);

     label2:
        return $r4;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object)>($r3, $r1, $r4);

        return $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
