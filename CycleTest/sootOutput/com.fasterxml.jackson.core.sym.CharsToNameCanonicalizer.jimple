public final class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer extends java.lang.Object
{
    static final com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer sBootstrapSymbolTable;
    protected com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets;
    protected final boolean _canonicalize;
    protected boolean _dirty;
    protected int _indexMask;
    protected final boolean _intern;
    protected com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _parent;
    protected int _size;
    protected int _sizeThreshold;
    protected java.lang.String[] _symbols;

    static void <clinit>()
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0;

        $r0 = new com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void <init>()>();

        <com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer sBootstrapSymbolTable> = $r0;

        return;
    }

    private void <init>()
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _canonicalize> = 1;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _intern> = 1;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _dirty> = 1;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void initTables(int)>(64);

        return;
    }

    private void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[], int)
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0, $r1;
        boolean $z0, $z1;
        java.lang.String[] $r2;
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] $r3;
        int $i0, $i1;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        $r1 := @parameter0: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r2 := @parameter3: java.lang.String[];

        $r3 := @parameter4: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[];

        $i0 := @parameter5: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _parent> = $r1;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _canonicalize> = $z0;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _intern> = $z1;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols> = $r2;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets> = $r3;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size> = $i0;

        $i0 = lengthof $r2;

        $i1 = $i0 >> 2;

        $i1 = $i0 - $i1;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _sizeThreshold> = $i1;

        $i0 = $i0 + -1;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _indexMask> = $i0;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _dirty> = 0;

        return;
    }

    public static int calcHash(java.lang.String)
    {
        java.lang.String $r0;
        char $c0;
        int $i1, $i2, $i3;

        $r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i2 = 1;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

     label1:
        if $i2 >= $i3 goto label2;

        $i1 = $i1 * 31;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i1 = $i1 + $c0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $i1;
    }

    public static int calcHash(char[], int, int)
    {
        char[] $r0;
        int $i0, $i1, $i3;
        char $c2;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i3 = $r0[0];

        $i0 = 1;

     label1:
        if $i0 >= $i1 goto label2;

        $i3 = $i3 * 31;

        $c2 = $r0[$i0];

        $i3 = $i3 + $c2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $i3;
    }

    private void copyArrays()
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0;
        java.lang.String[] $r1, $r2;
        int $i0;
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] $r3, $r4;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        $i0 = lengthof $r1;

        $r2 = newarray (java.lang.String)[$i0];

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols> = $r2;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        $r3 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        $i0 = lengthof $r3;

        $r4 = newarray (com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)[$i0];

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets> = $r4;

        $r4 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

        return;
    }

    public static com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot()
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0;

        $r0 = <com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer sBootstrapSymbolTable>;

        $r0 = specialinvoke $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeOrphan()>();

        return $r0;
    }

    private void initTables(int)
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0;
        int $i0, $i1;
        java.lang.String[] $r1;
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] $r2;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        $i0 := @parameter0: int;

        $r1 = newarray (java.lang.String)[$i0];

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols> = $r1;

        $i1 = $i0 >> 1;

        $r2 = newarray (com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)[$i1];

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets> = $r2;

        $i1 = $i0 + -1;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _indexMask> = $i1;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size> = 0;

        $i1 = $i0 >> 2;

        $i0 = $i0 - $i1;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _sizeThreshold> = $i0;

        return;
    }

    private com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeOrphan()
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0, $r1;
        java.lang.String[] $r2;
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] $r3;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        $r1 = new com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        $r3 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        $i0 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size>;

        specialinvoke $r1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,boolean,boolean,java.lang.String[],com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[],int)>(null, 1, 1, $r2, $r3, $i0);

        return $r1;
    }

    private void mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0, $r1;
        int $i0, $i1;
        java.lang.String[] $r2;
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        $r1 := @parameter0: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        entermonitor $r0;

     label1:
        $i0 = virtualinvoke $r1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int size()>();

        if $i0 <= 12000 goto label4;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void initTables(int)>(64);

     label2:
        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _dirty> = 0;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $i0 = virtualinvoke $r1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int size()>();

        $i1 = virtualinvoke $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int size()>();

        if $i0 <= $i1 goto label3;

        $r2 = $r1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols> = $r2;

        $r3 = $r1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets> = $r3;

        $i0 = $r1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size>;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size> = $i0;

        $i0 = $r1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _sizeThreshold>;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _sizeThreshold> = $i0;

        $i0 = $r1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _indexMask>;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _indexMask> = $i0;

     label5:
        goto label2;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private void rehash()
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0;
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] $r1, $r4, $r8;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r5, $r6;
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket $r7, $r9, $r10;
        java.lang.Error $r11;
        java.lang.StringBuilder $r12;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        $i0 = lengthof $r2;

        $i1 = $i0 + $i0;

        if $i1 <= 65536 goto label01;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size> = 0;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r2, null);

        $r1 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r1, null);

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _dirty> = 1;

        return;

     label01:
        $r2 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        $r3 = newarray (java.lang.String)[$i1];

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols> = $r3;

        $i2 = $i1 >> 1;

        $r4 = newarray (com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)[$i2];

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets> = $r4;

        $i1 = $i1 + -1;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _indexMask> = $i1;

        $i1 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _sizeThreshold>;

        $i2 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _sizeThreshold>;

        $i1 = $i1 + $i2;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _sizeThreshold> = $i1;

        $i2 = 0;

        $i1 = 0;

     label02:
        if $i2 >= $i0 goto label05;

        $r5 = $r2[$i2];

        if $r5 == null goto label03;

        $i1 = $i1 + 1;

        $i3 = staticinvoke <com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int calcHash(java.lang.String)>($r5);

        $i4 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _indexMask>;

        $i3 = $i3 & $i4;

        $r3 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        $r6 = $r3[$i3];

        if $r6 != null goto label04;

        $r3 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        $r3[$i3] = $r5;

     label03:
        $i2 = $i2 + 1;

        goto label02;

     label04:
        $i3 = $i3 >> 1;

        $r4 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        $r7 = new com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket;

        $r8 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        $r9 = $r8[$i3];

        specialinvoke $r7.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: void <init>(java.lang.String,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)>($r5, $r9);

        $r4[$i3] = $r7;

        goto label03;

     label05:
        $i0 = $i0 >> 1;

        $i2 = $i1;

        $i1 = 0;

     label06:
        if $i1 >= $i0 goto label11;

        $r7 = $r1[$i1];

     label07:
        if $r7 == null goto label10;

        $i2 = $i2 + 1;

        $r5 = virtualinvoke $r7.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: java.lang.String getSymbol()>();

        $i3 = staticinvoke <com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int calcHash(java.lang.String)>($r5);

        $i4 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _indexMask>;

        $i3 = $i3 & $i4;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        $r6 = $r2[$i3];

        if $r6 != null goto label09;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        $r2[$i3] = $r5;

     label08:
        $r7 = virtualinvoke $r7.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket getNext()>();

        goto label07;

     label09:
        $i3 = $i3 >> 1;

        $r4 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        $r9 = new com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket;

        $r8 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        $r10 = $r8[$i3];

        specialinvoke $r9.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: void <init>(java.lang.String,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)>($r5, $r10);

        $r4[$i3] = $r9;

        goto label08;

     label10:
        $i1 = $i1 + 1;

        goto label06;

     label11:
        $i0 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size>;

        if $i2 == $i0 goto label12;

        $r11 = new java.lang.Error;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Internal error on SymbolTable.rehash(): had ");

        $i0 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries; now have ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.Error: void <init>(java.lang.String)>($r5);

        throw $r11;

     label12:
        return;
    }

    public final java.lang.String findSymbol(char[], int, int, int)
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0;
        char[] $r1;
        int $i0, $i1, $i2, $i3, $i5;
        boolean $z0;
        java.lang.String $r2, $r7;
        java.lang.String[] $r3;
        char $c4, $c6;
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] $r4, $r8;
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket $r5, $r9;
        com.fasterxml.jackson.core.util.InternCache $r6;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        if $i1 > 0 goto label01;

        return "";

     label01:
        $z0 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _canonicalize>;

        if $z0 != 0 goto label02;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        return $r2;

     label02:
        $i3 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _indexMask>;

        $i2 = $i2 & $i3;

        $r3 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        $r2 = $r3[$i2];

        if $r2 == null goto label06;

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i3 != $i1 goto label05;

        $i3 = 0;

     label03:
        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i3);

        $i5 = $i0 + $i3;

        $c6 = $r1[$i5];

        if $c4 != $c6 goto label04;

        $i3 = $i3 + 1;

        if $i3 < $i1 goto label03;

     label04:
        if $i3 != $i1 goto label05;

        return $r2;

     label05:
        $r4 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        $i3 = $i2 >> 1;

        $r5 = $r4[$i3];

        if $r5 == null goto label06;

        $r2 = virtualinvoke $r5.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: java.lang.String find(char[],int,int)>($r1, $i0, $i1);

        if $r2 == null goto label06;

        return $r2;

     label06:
        $z0 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _dirty>;

        if $z0 != 0 goto label09;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void copyArrays()>();

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _dirty> = 1;

     label07:
        $i3 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size>;

        $i3 = $i3 + 1;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size> = $i3;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        $z0 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _intern>;

        if $z0 == 0 goto label08;

        $r6 = <com.fasterxml.jackson.core.util.InternCache: com.fasterxml.jackson.core.util.InternCache instance>;

        $r2 = virtualinvoke $r6.<com.fasterxml.jackson.core.util.InternCache: java.lang.String intern(java.lang.String)>($r2);

     label08:
        $r3 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        $r7 = $r3[$i2];

        if $r7 != null goto label10;

        $r3 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        $r3[$i2] = $r2;

        return $r2;

     label09:
        $i3 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size>;

        $i5 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _sizeThreshold>;

        if $i3 < $i5 goto label11;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void rehash()>();

        $i2 = staticinvoke <com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int calcHash(char[],int,int)>($r1, $i0, $i1);

        $i3 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _indexMask>;

        $i2 = $i2 & $i3;

        goto label07;

     label10:
        $i0 = $i2 >> 1;

        $r4 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        $r5 = new com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket;

        $r8 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        $r9 = $r8[$i0];

        specialinvoke $r5.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: void <init>(java.lang.String,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)>($r2, $r9);

        $r4[$i0] = $r5;

        return $r2;

     label11:
        goto label07;
    }

    public final com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(boolean, boolean)
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0, $r3;
        boolean $z0, $z1;
        java.lang.String[] $r1;
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] $r2;
        int $i0;
        java.lang.Throwable $r4;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        entermonitor $r0;

     label1:
        $r3 = new com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;

        $i0 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size>;

        specialinvoke $r3.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,boolean,boolean,java.lang.String[],com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[],int)>($r0, $z0, $z1, $r1, $r2, $i0);

     label2:
        exitmonitor $r0;

        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final boolean maybeDirty()
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0;
        boolean z0;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        z0 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _dirty>;

        return z0;
    }

    public final void release()
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0, $r1;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean maybeDirty()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _parent>;

        if $r1 == null goto label2;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _parent>;

        specialinvoke $r1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)>($r0);

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean _dirty> = 0;

     label2:
        return;
    }

    public final int size()
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r0;
        int i0;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        i0 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size>;

        return i0;
    }
}
