public final class com.fasterxml.jackson.databind.introspect.AnnotatedMethod extends com.fasterxml.jackson.databind.introspect.AnnotatedWithParams
{
    protected final java.lang.reflect.Method _method;
    protected java.lang.Class[] _paramClasses;

    public void <init>(java.lang.reflect.Method, com.fasterxml.jackson.databind.introspect.AnnotationMap, com.fasterxml.jackson.databind.introspect.AnnotationMap[])
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.reflect.Method $r1;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r2;
        com.fasterxml.jackson.databind.introspect.AnnotationMap[] $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 := @parameter0: java.lang.reflect.Method;

        $r2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotationMap;

        $r3 := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotationMap[];

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedWithParams: void <init>(com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>($r2, $r3);

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not construct AnnotatedMethod with null Method");

        throw $r4;

     label1:
        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method> = $r1;

        return;
    }

    public final java.lang.Object call()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.Object $r1;
        java.lang.reflect.Method $r2;
        java.lang.Object[] $r3;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r3 = newarray (java.lang.Object)[0];

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

        return $r1;
    }

    public final java.lang.Object call(java.lang.Object[])
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.lang.reflect.Method $r3;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 := @parameter0: java.lang.Object[];

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r2 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

        return $r2;
    }

    public final java.lang.Object call1(java.lang.Object)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.Object $r1;
        java.lang.reflect.Method $r2;
        java.lang.Object[] $r3;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r1;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

        return $r1;
    }

    public final volatile java.lang.reflect.AnnotatedElement getAnnotated()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.reflect.Method $r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method getAnnotated()>();

        return $r1;
    }

    public final java.lang.reflect.Method getAnnotated()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.reflect.Method r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        return r1;
    }

    public final java.lang.Class getDeclaringClass()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.Class $r1;
        java.lang.reflect.Method $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        return $r1;
    }

    public final java.lang.String getFullName()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class getDeclaringClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: int getParameterCount()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" params)");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public final java.lang.reflect.Type getGenericParameterType(int)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        int $i0, $i1;
        java.lang.reflect.Type[] $r1;
        java.lang.reflect.Method $r2;
        java.lang.reflect.Type $r3;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $i0 := @parameter0: int;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label1;

        return null;

     label1:
        $r3 = $r1[$i0];

        return $r3;
    }

    public final java.lang.reflect.Type getGenericType()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.reflect.Type $r1;
        java.lang.reflect.Method $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();

        return $r1;
    }

    public final volatile java.lang.reflect.Member getMember()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.reflect.Method $r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method getMember()>();

        return $r1;
    }

    public final java.lang.reflect.Method getMember()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.reflect.Method r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        return r1;
    }

    public final java.lang.String getName()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.String $r1;
        java.lang.reflect.Method $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.String getName()>();

        return $r1;
    }

    public final int getParameterCount()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.Class[] $r1;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class[] getRawParameterTypes()>();

        $i0 = lengthof $r1;

        return $i0;
    }

    public final java.lang.Class getRawParameterType(int)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        int $i0, $i1;
        java.lang.Class[] $r1;
        java.lang.Class $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class[] getRawParameterTypes()>();

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label1;

        return null;

     label1:
        $r2 = $r1[$i0];

        return $r2;
    }

    public final java.lang.Class[] getRawParameterTypes()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.Class[] $r1;
        java.lang.reflect.Method $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class[] _paramClasses>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class[] _paramClasses> = $r1;

     label1:
        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class[] _paramClasses>;

        return $r1;
    }

    public final java.lang.Class getRawReturnType()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.Class $r1;
        java.lang.reflect.Method $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        return $r1;
    }

    public final java.lang.Class getRawType()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.Class $r1;
        java.lang.reflect.Method $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        return $r1;
    }

    public final com.fasterxml.jackson.databind.JavaType getType(com.fasterxml.jackson.databind.type.TypeBindings)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        com.fasterxml.jackson.databind.type.TypeBindings $r1;
        java.lang.reflect.Method $r2;
        java.lang.reflect.TypeVariable[] $r3;
        com.fasterxml.jackson.databind.JavaType $r4;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 := @parameter0: com.fasterxml.jackson.databind.type.TypeBindings;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.JavaType getType(com.fasterxml.jackson.databind.type.TypeBindings,java.lang.reflect.TypeVariable[])>($r1, $r3);

        return $r4;
    }

    public final java.lang.Object getValue(java.lang.Object)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.Object $r1;
        java.lang.reflect.Method $r2;
        java.lang.Object[] $r3;
        java.lang.IllegalAccessException $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.reflect.InvocationTargetException $r8;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r3 = newarray (java.lang.Object)[0];

     label1:
        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r3);

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to getValue() with method ");

        $r7 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String getFullName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r4.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r4);

        throw $r5;

     label4:
        $r8 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to getValue() with method ");

        $r7 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String getFullName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r8.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r8);

        throw $r5;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }

    public final void setValue(java.lang.Object, java.lang.Object)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.Object $r1, $r2;
        java.lang.reflect.Method $r3;
        java.lang.Object[] $r4;
        java.lang.IllegalAccessException $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.lang.reflect.InvocationTargetException $r9;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r2;

     label1:
        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to setValue() with method ");

        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String getFullName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r5.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r5);

        throw $r6;

     label4:
        $r9 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to setValue() with method ");

        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String getFullName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r9.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r9);

        throw $r6;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }

    public final java.lang.String toString()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("[method ");

        $r2 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String getFullName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public final com.fasterxml.jackson.databind.introspect.AnnotatedMethod withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0, $r2;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r1;
        java.lang.reflect.Method $r3;
        com.fasterxml.jackson.databind.introspect.AnnotationMap[] $r4;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationMap;

        $r2 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r4 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.introspect.AnnotationMap[] _paramAnnotations>;

        specialinvoke $r2.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: void <init>(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>($r3, $r1, $r4);

        return $r2;
    }

    public final com.fasterxml.jackson.databind.introspect.AnnotatedMethod withMethod(java.lang.reflect.Method)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r0, $r2;
        java.lang.reflect.Method $r1;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r3;
        com.fasterxml.jackson.databind.introspect.AnnotationMap[] $r4;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 := @parameter0: java.lang.reflect.Method;

        $r2 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.introspect.AnnotationMap _annotations>;

        $r4 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.introspect.AnnotationMap[] _paramAnnotations>;

        specialinvoke $r2.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: void <init>(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>($r1, $r3, $r4);

        return $r2;
    }
}
