public class b.a.b.a.a.h extends java.lang.Object implements org.apache.http.HttpEntity
{
    private static final char[] a;
    private final b.a.b.a.a.c b;
    private final org.apache.http.Header c;
    private long d;
    private volatile boolean e;

    static void <clinit>()
    {
        char[] $r0;
        java.lang.String $r1;

        $r1 = "-_1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        <b.a.b.a.a.h: char[] a> = $r0;

        return;
    }

    public void <init>(b.a.b.a.a.e, java.nio.charset.Charset)
    {
        b.a.b.a.a.h $r0;
        java.nio.charset.Charset $r1;
        java.lang.StringBuilder $r2;
        b.a.b.a.a.e $r3;
        java.lang.String $r4;
        b.a.b.a.a.c $r5;
        org.apache.http.message.BasicHeader $r6;

        $r0 := @this: b.a.b.a.a.h;

        $r3 := @parameter0: b.a.b.a.a.e;

        $r1 := @parameter1: java.nio.charset.Charset;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = staticinvoke <b.a.b.a.a.h: java.lang.String generateBoundary()>();

        if $r3 != null goto label1;

        $r3 = <b.a.b.a.a.e: b.a.b.a.a.e a>;

     label1:
        $r5 = new b.a.b.a.a.c;

        specialinvoke $r5.<b.a.b.a.a.c: void <init>(java.lang.String,java.nio.charset.Charset,java.lang.String,b.a.b.a.a.e)>("form-data", $r1, $r4, $r3);

        $r0.<b.a.b.a.a.h: b.a.b.a.a.c b> = $r5;

        $r6 = new org.apache.http.message.BasicHeader;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipart/form-data; boundary=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        if $r1 == null goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; charset=");

        $r4 = virtualinvoke $r1.<java.nio.charset.Charset: java.lang.String name()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label2:
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.http.message.BasicHeader: void <init>(java.lang.String,java.lang.String)>("Content-Type", $r4);

        $r0.<b.a.b.a.a.h: org.apache.http.Header c> = $r6;

        $r0.<b.a.b.a.a.h: boolean e> = 1;

        return;
    }

    private void addPart(b.a.b.a.a.a)
    {
        b.a.b.a.a.h $r0;
        b.a.b.a.a.a $r1;
        b.a.b.a.a.c $r2;

        $r0 := @this: b.a.b.a.a.h;

        $r1 := @parameter0: b.a.b.a.a.a;

        $r2 = $r0.<b.a.b.a.a.h: b.a.b.a.a.c b>;

        virtualinvoke $r2.<b.a.b.a.a.c: void a(b.a.b.a.a.a)>($r1);

        $r0.<b.a.b.a.a.h: boolean e> = 1;

        return;
    }

    private static java.lang.String generateBoundary()
    {
        java.lang.StringBuilder $r0;
        java.util.Random $r1;
        int $i0, $i1, $i2;
        char[] $r2, $r3;
        char $c3;
        java.lang.String $r4;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = new java.util.Random;

        specialinvoke $r1.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(11);

        $i0 = $i0 + 30;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = <b.a.b.a.a.h: char[] a>;

        $r3 = <b.a.b.a.a.h: char[] a>;

        $i2 = lengthof $r3;

        $i2 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>($i2);

        $c3 = $r2[$i2];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private static java.lang.String generateContentType(java.lang.String, java.nio.charset.Charset)
    {
        java.lang.String $r0;
        java.nio.charset.Charset $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.nio.charset.Charset;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipart/form-data; boundary=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        if $r1 == null goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; charset=");

        $r0 = virtualinvoke $r1.<java.nio.charset.Charset: java.lang.String name()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label1:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public void a(java.lang.String, b.a.b.a.a.a.b)
    {
        b.a.b.a.a.h $r0;
        java.lang.String $r1;
        b.a.b.a.a.a.b $r2;
        b.a.b.a.a.c $r3;
        b.a.b.a.a.a $r4;

        $r0 := @this: b.a.b.a.a.h;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: b.a.b.a.a.a.b;

        $r4 = new b.a.b.a.a.a;

        specialinvoke $r4.<b.a.b.a.a.a: void <init>(java.lang.String,b.a.b.a.a.a.b)>($r1, $r2);

        $r3 = $r0.<b.a.b.a.a.h: b.a.b.a.a.c b>;

        virtualinvoke $r3.<b.a.b.a.a.c: void a(b.a.b.a.a.a)>($r4);

        $r0.<b.a.b.a.a.h: boolean e> = 1;

        return;
    }

    public void consumeContent()
    {
        b.a.b.a.a.h $r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: b.a.b.a.a.h;

        $z0 = virtualinvoke $r0.<b.a.b.a.a.h: boolean isStreaming()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Streaming entity does not implement #consumeContent()");

        throw $r1;

     label1:
        return;
    }

    public java.io.InputStream getContent()
    {
        b.a.b.a.a.h $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: b.a.b.a.a.h;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Multipart form entity does not implement #getContent()");

        throw $r1;
    }

    public org.apache.http.Header getContentEncoding()
    {
        b.a.b.a.a.h $r0;

        $r0 := @this: b.a.b.a.a.h;

        return null;
    }

    public long getContentLength()
    {
        b.a.b.a.a.h $r0;
        long $l0;
        boolean $z0;
        b.a.b.a.a.c $r1;

        $r0 := @this: b.a.b.a.a.h;

        $z0 = $r0.<b.a.b.a.a.h: boolean e>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<b.a.b.a.a.h: b.a.b.a.a.c b>;

        $l0 = virtualinvoke $r1.<b.a.b.a.a.c: long b()>();

        $r0.<b.a.b.a.a.h: long d> = $l0;

        $r0.<b.a.b.a.a.h: boolean e> = 0;

     label1:
        $l0 = $r0.<b.a.b.a.a.h: long d>;

        return $l0;
    }

    public org.apache.http.Header getContentType()
    {
        b.a.b.a.a.h $r0;
        org.apache.http.Header r1;

        $r0 := @this: b.a.b.a.a.h;

        r1 = $r0.<b.a.b.a.a.h: org.apache.http.Header c>;

        return r1;
    }

    public boolean isChunked()
    {
        b.a.b.a.a.h $r0;
        boolean $z0;

        $r0 := @this: b.a.b.a.a.h;

        $z0 = virtualinvoke $r0.<b.a.b.a.a.h: boolean isRepeatable()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isRepeatable()
    {
        b.a.b.a.a.h $r0;
        b.a.b.a.a.c $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        b.a.b.a.a.a $r5;
        b.a.b.a.a.a.b $r6;
        long $l0;
        byte $b1;

        $r0 := @this: b.a.b.a.a.h;

        $r1 = $r0.<b.a.b.a.a.h: b.a.b.a.a.c b>;

        $r2 = virtualinvoke $r1.<b.a.b.a.a.c: java.util.List a()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (b.a.b.a.a.a) $r4;

        $r6 = virtualinvoke $r5.<b.a.b.a.a.a: b.a.b.a.a.a.b a()>();

        $l0 = interfaceinvoke $r6.<b.a.b.a.a.a.b: long e()>();

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public boolean isStreaming()
    {
        b.a.b.a.a.h $r0;
        boolean $z0;

        $r0 := @this: b.a.b.a.a.h;

        $z0 = virtualinvoke $r0.<b.a.b.a.a.h: boolean isRepeatable()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void writeTo(java.io.OutputStream)
    {
        b.a.b.a.a.h $r0;
        java.io.OutputStream $r1;
        b.a.b.a.a.c $r2;

        $r0 := @this: b.a.b.a.a.h;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = $r0.<b.a.b.a.a.h: b.a.b.a.a.c b>;

        virtualinvoke $r2.<b.a.b.a.a.c: void a(java.io.OutputStream)>($r1);

        return;
    }
}
