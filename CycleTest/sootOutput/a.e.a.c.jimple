public abstract class a.e.a.c extends java.lang.Object implements java.lang.Runnable
{
    static int B;
    static a.e.e C;
    int D;
    java.lang.String E;
    java.lang.Thread F;
    a.e.a.d G;
    protected java.util.HashMap H;

    static void <clinit>()
    {
        a.e.e $r0;

        <a.e.a.c: int B> = 0;

        $r0 = staticinvoke <a.e.e: a.e.e a()>();

        <a.e.a.c: a.e.e C> = $r0;

        return;
    }

    public void <init>()
    {
        a.e.a.c $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.util.HashMap $r3;

        $r0 := @this: a.e.a.c;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<a.e.a.c: int D> = 0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Transport");

        $i1 = <a.e.a.c: int B>;

        $i0 = $i1 + 1;

        <a.e.a.c: int B> = $i0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<a.e.a.c: java.lang.String E> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(4);

        $r0.<a.e.a.c: java.util.HashMap H> = $r3;

        return;
    }

    public static int a(java.io.InputStream, byte[], int, int)
    {
        java.io.InputStream $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i3 = 0;

     label1:
        if $i3 >= $i1 goto label2;

        $i4 = $i0 + $i3;

        $i2 = $i1 - $i3;

        $i2 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r1, $i4, $i2);

        if $i2 <= 0 goto label2;

        $i3 = $i3 + $i2;

        goto label1;

     label2:
        return $i3;
    }

    public final void a(long)
    {
        a.e.a.c $r0;
        long $l0;
        int $i1;
        a.e.a.d $r1, $r8;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.InterruptedException $r4;
        java.lang.Throwable $r5, $r7, $r11;
        a.e.e $r6;
        java.lang.Thread $r9, $r10;

        $r0 := @this: a.e.a.c;

        $l0 := @parameter0: long;

        entermonitor $r0;

     label01:
        $i1 = $r0.<a.e.a.c: int D>;

        lookupswitch($i1)
        {
            case 0: goto label20;
            case 1: goto label02;
            case 2: goto label02;
            case 3: goto label14;
            case 4: goto label17;
            default: goto label02;
        };

     label02:
        $r1 = new a.e.a.d;

        $r2 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid state: ");

     label04:
        $i1 = $r0.<a.e.a.c: int D>;

     label05:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<a.e.a.d: void <init>(java.lang.String)>($r3);

     label06:
        $r0.<a.e.a.c: int D> = 0;

        throw $r1;

     label07:
        $r4 := @caughtexception;

     label08:
        $r0.<a.e.a.c: int D> = 0;

        $r0.<a.e.a.c: java.lang.Thread F> = null;

        $r1 = new a.e.a.d;

        specialinvoke $r1.<a.e.a.d: void <init>(java.lang.Throwable)>($r4);

        throw $r1;

     label09:
        $r5 := @caughtexception;

     label10:
        $i1 = $r0.<a.e.a.c: int D>;

        if $i1 == 0 goto label12;

        $i1 = $r0.<a.e.a.c: int D>;

        if $i1 == 3 goto label12;

        $i1 = $r0.<a.e.a.c: int D>;

        if $i1 == 4 goto label12;

        $r6 = <a.e.a.c: a.e.e C>;

        $i1 = <a.e.e: int a>;

        if $i1 <= 0 goto label11;

        $r6 = <a.e.a.c: a.e.e C>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid state: ");

        $i1 = $r0.<a.e.a.c: int D>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<a.e.e: void println(java.lang.String)>($r3);

     label11:
        $r0.<a.e.a.c: int D> = 0;

        $r0.<a.e.a.c: java.lang.Thread F> = null;

     label12:
        throw $r5;

     label13:
        $r7 := @caughtexception;

        exitmonitor $r0;

        throw $r7;

     label14:
        $i1 = $r0.<a.e.a.c: int D>;

        if $i1 == 0 goto label16;

        $i1 = $r0.<a.e.a.c: int D>;

        if $i1 == 3 goto label16;

        $i1 = $r0.<a.e.a.c: int D>;

        if $i1 == 4 goto label16;

        $r6 = <a.e.a.c: a.e.e C>;

        $i1 = <a.e.e: int a>;

        if $i1 <= 0 goto label15;

        $r6 = <a.e.a.c: a.e.e C>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid state: ");

        $i1 = $r0.<a.e.a.c: int D>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<a.e.e: void println(java.lang.String)>($r3);

     label15:
        $r0.<a.e.a.c: int D> = 0;

        $r0.<a.e.a.c: java.lang.Thread F> = null;

     label16:
        exitmonitor $r0;

        return;

     label17:
        $r0.<a.e.a.c: int D> = 0;

        $r1 = new a.e.a.d;

        $r8 = $r0.<a.e.a.c: a.e.a.d G>;

     label18:
        specialinvoke $r1.<a.e.a.d: void <init>(java.lang.String,java.lang.Throwable)>("Connection in error", $r8);

     label19:
        throw $r1;

     label20:
        $r0.<a.e.a.c: int D> = 1;

        $r0.<a.e.a.c: a.e.a.d G> = null;

        $r9 = new java.lang.Thread;

        $r3 = $r0.<a.e.a.c: java.lang.String E>;

     label21:
        specialinvoke $r9.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r0, $r3);

     label22:
        $r0.<a.e.a.c: java.lang.Thread F> = $r9;

        $r9 = $r0.<a.e.a.c: java.lang.Thread F>;

     label23:
        virtualinvoke $r9.<java.lang.Thread: void setDaemon(boolean)>(1);

     label24:
        $r9 = $r0.<a.e.a.c: java.lang.Thread F>;

        entermonitor $r9;

     label25:
        $r10 = $r0.<a.e.a.c: java.lang.Thread F>;

        virtualinvoke $r10.<java.lang.Thread: void start()>();

        $r10 = $r0.<a.e.a.c: java.lang.Thread F>;

        virtualinvoke $r10.<java.lang.Object: void wait(long)>($l0);

        $i1 = $r0.<a.e.a.c: int D>;

     label26:
        lookupswitch($i1)
        {
            case 1: goto label39;
            case 2: goto label43;
            default: goto label27;
        };

     label27:
        exitmonitor $r9;

     label28:
        $i1 = $r0.<a.e.a.c: int D>;

     label29:
        if $i1 == 0 goto label16;

     label30:
        $i1 = $r0.<a.e.a.c: int D>;

     label31:
        if $i1 == 3 goto label16;

     label32:
        $i1 = $r0.<a.e.a.c: int D>;

     label33:
        if $i1 == 4 goto label16;

     label34:
        $r6 = <a.e.a.c: a.e.e C>;

        $i1 = <a.e.e: int a>;

     label35:
        if $i1 <= 0 goto label37;

     label36:
        $r6 = <a.e.a.c: a.e.e C>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid state: ");

        $i1 = $r0.<a.e.a.c: int D>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<a.e.e: void println(java.lang.String)>($r3);

     label37:
        $r0.<a.e.a.c: int D> = 0;

        $r0.<a.e.a.c: java.lang.Thread F> = null;

     label38:
        goto label16;

     label39:
        $r0.<a.e.a.c: int D> = 0;

        $r0.<a.e.a.c: java.lang.Thread F> = null;

        $r1 = new a.e.a.d;

        specialinvoke $r1.<a.e.a.d: void <init>(java.lang.String)>("Connection timeout");

        throw $r1;

     label40:
        $r11 := @caughtexception;

     label41:
        exitmonitor $r9;

     label42:
        throw $r11;

     label43:
        $r1 = $r0.<a.e.a.c: a.e.a.d G>;

        if $r1 == null goto label44;

        $r0.<a.e.a.c: int D> = 4;

        $r0.<a.e.a.c: java.lang.Thread F> = null;

        $r1 = $r0.<a.e.a.c: a.e.a.d G>;

        throw $r1;

     label44:
        $r0.<a.e.a.c: int D> = 3;

        exitmonitor $r9;

     label45:
        $i1 = $r0.<a.e.a.c: int D>;

     label46:
        if $i1 == 0 goto label16;

     label47:
        $i1 = $r0.<a.e.a.c: int D>;

     label48:
        if $i1 == 3 goto label16;

     label49:
        $i1 = $r0.<a.e.a.c: int D>;

     label50:
        if $i1 == 4 goto label16;

     label51:
        $r6 = <a.e.a.c: a.e.e C>;

        $i1 = <a.e.e: int a>;

     label52:
        if $i1 <= 0 goto label54;

     label53:
        $r6 = <a.e.a.c: a.e.e C>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid state: ");

        $i1 = $r0.<a.e.a.c: int D>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<a.e.e: void println(java.lang.String)>($r3);

     label54:
        $r0.<a.e.a.c: int D> = 0;

        $r0.<a.e.a.c: java.lang.Thread F> = null;

     label55:
        goto label16;

        catch java.lang.InterruptedException from label03 to label04 with label07;
        catch java.lang.InterruptedException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label07 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label13 with label13;
        catch java.lang.Throwable from label14 to label16 with label13;
        catch java.lang.InterruptedException from label18 to label19 with label07;
        catch java.lang.InterruptedException from label21 to label22 with label07;
        catch java.lang.InterruptedException from label23 to label24 with label07;
        catch java.lang.Throwable from label17 to label25 with label09;
        catch java.lang.Throwable from label25 to label26 with label40;
        catch java.lang.Throwable from label27 to label28 with label09;
        catch java.lang.Throwable from label28 to label29 with label13;
        catch java.lang.Throwable from label30 to label31 with label13;
        catch java.lang.Throwable from label32 to label33 with label13;
        catch java.lang.Throwable from label34 to label35 with label13;
        catch java.lang.Throwable from label36 to label38 with label13;
        catch java.lang.Throwable from label39 to label40 with label40;
        catch java.lang.InterruptedException from label42 to label43 with label07;
        catch java.lang.Throwable from label41 to label43 with label09;
        catch java.lang.Throwable from label43 to label45 with label40;
        catch java.lang.Throwable from label45 to label46 with label13;
        catch java.lang.Throwable from label47 to label48 with label13;
        catch java.lang.Throwable from label49 to label50 with label13;
        catch java.lang.Throwable from label51 to label52 with label13;
        catch java.lang.Throwable from label53 to label55 with label13;
    }

    protected abstract void a(a.e.a.a);

    public final void a(a.e.a.a, a.e.a.b, long)
    {
        a.e.a.c $r0;
        a.e.a.a $r1;
        a.e.a.b $r2;
        long $l0, $l1;
        java.util.HashMap $r3;
        boolean $z0;
        byte $b2;
        a.e.a.d $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.io.IOException $r7, $r11;
        a.e.e $r8;
        int $i3;
        java.lang.Throwable $r9, $r10;
        java.lang.InterruptedException $r12;

        $r0 := @this: a.e.a.c;

        $r1 := @parameter0: a.e.a.a;

        $r2 := @parameter1: a.e.a.b;

        $l0 := @parameter2: long;

        entermonitor $r0;

     label01:
        virtualinvoke $r0.<a.e.a.c: void a(a.e.a.a)>($r1);

        $r2.<a.e.a.b: boolean e_> = 0;

     label02:
        $r3 = $r0.<a.e.a.c: java.util.HashMap H>;

     label03:
        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        virtualinvoke $r0.<a.e.a.c: void b(a.e.a.a)>($r1);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label04:
        $l1 = $l1 + $l0;

        $r2.<a.e.a.b: long d_> = $l1;

     label05:
        $z0 = $r2.<a.e.a.b: boolean e_>;

        if $z0 != 0 goto label21;

     label06:
        virtualinvoke $r0.<java.lang.Object: void wait(long)>($l0);

     label07:
        $l0 = $r2.<a.e.a.b: long d_>;

     label08:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label09:
        $l0 = $l0 - $l1;

        $b2 = $l0 cmp 0L;

        if $b2 > 0 goto label05;

        $r4 = new a.e.a.d;

        $r5 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

     label11:
        $r6 = $r0.<a.e.a.c: java.lang.String E>;

     label12:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" timedout waiting for response to ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<a.e.a.d: void <init>(java.lang.String)>($r6);

     label13:
        throw $r4;

     label14:
        $r7 := @caughtexception;

     label15:
        $r8 = <a.e.a.c: a.e.e C>;

        $i3 = <a.e.e: int a>;

        if $i3 <= 2 goto label16;

        $r8 = <a.e.a.c: a.e.e C>;

        virtualinvoke $r7.<java.io.IOException: void printStackTrace(java.io.PrintStream)>($r8);

     label16:
        virtualinvoke $r0.<a.e.a.c: void b(boolean)>(1);

     label17:
        throw $r7;

     label18:
        $r9 := @caughtexception;

     label19:
        $r3 = $r0.<a.e.a.c: java.util.HashMap H>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        throw $r9;

     label20:
        $r10 := @caughtexception;

        exitmonitor $r0;

        throw $r10;

     label21:
        $r3 = $r0.<a.e.a.c: java.util.HashMap H>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

     label22:
        exitmonitor $r0;

        return;

     label23:
        $r11 := @caughtexception;

     label24:
        $r8 = <a.e.a.c: a.e.e C>;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace(java.io.PrintStream)>($r8);

        goto label17;

     label25:
        $r12 := @caughtexception;

        $r4 = new a.e.a.d;

        specialinvoke $r4.<a.e.a.d: void <init>(java.lang.Throwable)>($r12);

        throw $r4;

     label26:
        nop;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.io.IOException from label03 to label04 with label14;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.io.IOException from label08 to label09 with label14;
        catch java.io.IOException from label10 to label11 with label14;
        catch java.io.IOException from label12 to label14 with label14;
        catch java.lang.InterruptedException from label03 to label04 with label25;
        catch java.lang.InterruptedException from label06 to label07 with label25;
        catch java.lang.InterruptedException from label08 to label09 with label25;
        catch java.lang.InterruptedException from label10 to label11 with label25;
        catch java.lang.InterruptedException from label12 to label13 with label25;
        catch java.lang.Throwable from label02 to label14 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.io.IOException from label16 to label17 with label23;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Throwable from label19 to label20 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
        catch java.lang.Throwable from label24 to label26 with label18;
    }

    protected abstract void a(a.e.a.b);

    protected abstract void a(boolean);

    protected abstract void b();

    protected abstract void b(a.e.a.a);

    public final void b(boolean)
    {
        a.e.a.c $r0;
        boolean $z0;
        java.io.IOException $r1;
        int $i0;
        a.e.e $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Throwable $r5;
        java.util.HashMap $r6;

        $r0 := @this: a.e.a.c;

        $z0 := @parameter0: boolean;

        $r1 = null;

        entermonitor $r0;

     label01:
        $i0 = $r0.<a.e.a.c: int D>;

        lookupswitch($i0)
        {
            case 0: goto label13;
            case 1: goto label02;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label10;
            default: goto label02;
        };

     label02:
        $r2 = <a.e.a.c: a.e.e C>;

        $i0 = <a.e.e: int a>;

        if $i0 <= 0 goto label03;

        $r2 = <a.e.a.c: a.e.e C>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid state: ");

        $i0 = $r0.<a.e.a.c: int D>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<a.e.e: void println(java.lang.String)>($r4);

     label03:
        $r0.<a.e.a.c: java.lang.Thread F> = null;

        $r0.<a.e.a.c: int D> = 0;

     label04:
        if $r1 == null goto label13;

        throw $r1;

     label05:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

     label06:
        $z0 = 1;

     label07:
        $r6 = $r0.<a.e.a.c: java.util.HashMap H>;

        $i0 = virtualinvoke $r6.<java.util.HashMap: int size()>();

     label08:
        if $i0 == 0 goto label09;

        if $z0 == 0 goto label04;

     label09:
        virtualinvoke $r0.<a.e.a.c: void a(boolean)>($z0);

     label10:
        $r0.<a.e.a.c: java.lang.Thread F> = null;

        $r0.<a.e.a.c: int D> = 0;

     label11:
        goto label04;

     label12:
        $r1 := @caughtexception;

        goto label10;

     label13:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label01 to label05 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.io.IOException from label09 to label10 with label12;
        catch java.lang.Throwable from label09 to label10 with label05;
        catch java.lang.Throwable from label10 to label11 with label05;
    }

    protected abstract a.e.a.a c();

    protected abstract void d();

    public void run()
    {
        a.e.a.c $r0;
        java.lang.Thread $r1, $r2;
        a.e.a.a $r3;
        java.io.IOException $r4;
        java.lang.Exception $r5, $r9;
        java.lang.String $r6;
        boolean $z0, $z1;
        a.e.e $r7;
        int $i0;
        java.lang.Throwable $r8, $r10, $r12, $r13, $r17;
        a.e.a.d $r11;
        java.util.HashMap $r14;
        java.lang.Object $r15;
        a.e.a.b $r16;

        $r0 := @this: a.e.a.c;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

     label01:
        virtualinvoke $r0.<a.e.a.c: void b()>();

     label02:
        entermonitor $r1;

     label03:
        $r2 = $r0.<a.e.a.c: java.lang.Thread F>;

        if $r1 == $r2 goto label05;

        exitmonitor $r1;

     label04:
        return;

     label05:
        $r0.<a.e.a.c: int D> = 2;

        virtualinvoke $r1.<java.lang.Object: void notify()>();

        exitmonitor $r1;

     label06:
        $r1 = $r0.<a.e.a.c: java.lang.Thread F>;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r1 != $r2 goto label41;

     label07:
        $r3 = virtualinvoke $r0.<a.e.a.c: a.e.a.a c()>();

     label08:
        if $r3 != null goto label30;

        $r4 = new java.io.IOException;

     label09:
        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("end of stream");

        throw $r4;

     label10:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        if $r6 == null goto label39;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("Read timed out");

        if $z0 == 0 goto label39;

        $z0 = 1;

     label11:
        if $z0 != 0 goto label40;

        $z1 = 1;

     label12:
        if $z0 != 0 goto label13;

        $r7 = <a.e.a.c: a.e.e C>;

        $i0 = <a.e.e: int a>;

        if $i0 < 3 goto label13;

        $r7 = <a.e.a.c: a.e.e C>;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r7);

     label13:
        virtualinvoke $r0.<a.e.a.c: void b(boolean)>($z1);

     label14:
        goto label06;

     label15:
        $r4 := @caughtexception;

        $r7 = <a.e.a.c: a.e.e C>;

        virtualinvoke $r4.<java.io.IOException: void printStackTrace(java.io.PrintStream)>($r7);

        goto label06;

     label16:
        $r8 := @caughtexception;

        exitmonitor $r1;

        throw $r8;

     label17:
        $r9 := @caughtexception;

        entermonitor $r1;

     label18:
        $r2 = $r0.<a.e.a.c: java.lang.Thread F>;

        if $r1 == $r2 goto label22;

        $r7 = <a.e.a.c: a.e.e C>;

        $i0 = <a.e.e: int a>;

        if $i0 < 2 goto label19;

        $r7 = <a.e.a.c: a.e.e C>;

        virtualinvoke $r9.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r7);

     label19:
        exitmonitor $r1;

     label20:
        return;

     label21:
        $r10 := @caughtexception;

        exitmonitor $r1;

        throw $r10;

     label22:
        $r11 = new a.e.a.d;

        specialinvoke $r11.<a.e.a.d: void <init>(java.lang.Throwable)>($r9);

        $r0.<a.e.a.c: a.e.a.d G> = $r11;

        $r0.<a.e.a.c: int D> = 2;

        virtualinvoke $r1.<java.lang.Object: void notify()>();

        exitmonitor $r1;

     label23:
        return;

     label24:
        $r12 := @caughtexception;

        entermonitor $r1;

     label25:
        $r2 = $r0.<a.e.a.c: java.lang.Thread F>;

        if $r1 == $r2 goto label28;

        exitmonitor $r1;

     label26:
        return;

     label27:
        $r13 := @caughtexception;

        exitmonitor $r1;

        throw $r13;

     label28:
        $r0.<a.e.a.c: int D> = 2;

        virtualinvoke $r1.<java.lang.Object: void notify()>();

        exitmonitor $r1;

     label29:
        throw $r12;

     label30:
        entermonitor $r0;

     label31:
        $r14 = $r0.<a.e.a.c: java.util.HashMap H>;

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r16 = (a.e.a.b) $r15;

        if $r16 != null goto label37;

        $r7 = <a.e.a.c: a.e.e C>;

        $i0 = <a.e.e: int a>;

        if $i0 < 4 goto label32;

        $r7 = <a.e.a.c: a.e.e C>;

        virtualinvoke $r7.<a.e.e: void println(java.lang.String)>("Invalid key, skipping message");

     label32:
        virtualinvoke $r0.<a.e.a.c: void d()>();

     label33:
        exitmonitor $r0;

     label34:
        goto label06;

     label35:
        $r17 := @caughtexception;

     label36:
        exitmonitor $r0;

        throw $r17;

     label37:
        virtualinvoke $r0.<a.e.a.c: void a(a.e.a.b)>($r16);

        $r16.<a.e.a.b: boolean e_> = 1;

        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

     label38:
        goto label33;

     label39:
        $z0 = 0;

        goto label11;

     label40:
        $z1 = 0;

        goto label12;

     label41:
        return;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Exception from label07 to label08 with label10;
        catch java.lang.Exception from label09 to label10 with label10;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label18 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
        catch java.lang.Exception from label30 to label31 with label10;
        catch java.lang.Throwable from label31 to label34 with label35;
        catch java.lang.Exception from label36 to label37 with label10;
        catch java.lang.Throwable from label37 to label38 with label35;
    }

    public java.lang.String toString()
    {
        a.e.a.c $r0;
        java.lang.String r1;

        $r0 := @this: a.e.a.c;

        r1 = $r0.<a.e.a.c: java.lang.String E>;

        return r1;
    }
}
