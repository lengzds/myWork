public final class com.fasterxml.jackson.databind.node.BigIntegerNode extends com.fasterxml.jackson.databind.node.NumericNode
{
    private static final java.math.BigInteger MAX_INTEGER;
    private static final java.math.BigInteger MAX_LONG;
    private static final java.math.BigInteger MIN_INTEGER;
    private static final java.math.BigInteger MIN_LONG;
    protected final java.math.BigInteger _value;

    static void <clinit>()
    {
        java.math.BigInteger $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-2147483648L);

        <com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger MIN_INTEGER> = $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483647L);

        <com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger MAX_INTEGER> = $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-9223372036854775808L);

        <com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger MIN_LONG> = $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775807L);

        <com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger MAX_LONG> = $r0;

        return;
    }

    public void <init>(java.math.BigInteger)
    {
        com.fasterxml.jackson.databind.node.BigIntegerNode $r0;
        java.math.BigInteger $r1;

        $r0 := @this: com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 := @parameter0: java.math.BigInteger;

        specialinvoke $r0.<com.fasterxml.jackson.databind.node.NumericNode: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value> = $r1;

        return;
    }

    public static com.fasterxml.jackson.databind.node.BigIntegerNode valueOf(java.math.BigInteger)
    {
        java.math.BigInteger $r0;
        com.fasterxml.jackson.databind.node.BigIntegerNode $r1;

        $r0 := @parameter0: java.math.BigInteger;

        $r1 = new com.fasterxml.jackson.databind.node.BigIntegerNode;

        specialinvoke $r1.<com.fasterxml.jackson.databind.node.BigIntegerNode: void <init>(java.math.BigInteger)>($r0);

        return $r1;
    }

    public final java.lang.String asText()
    {
        com.fasterxml.jackson.databind.node.BigIntegerNode $r0;
        java.lang.String $r1;
        java.math.BigInteger $r2;

        $r0 := @this: com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r2 = $r0.<com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $r1 = virtualinvoke $r2.<java.math.BigInteger: java.lang.String toString()>();

        return $r1;
    }

    public final boolean equals(java.lang.Object)
    {
        com.fasterxml.jackson.databind.node.BigIntegerNode $r0, $r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        java.math.BigInteger $r5, $r6;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != $r0 goto label1;

        return 1;

     label1:
        if $r1 == null goto label2;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 != $r3 goto label2;

        $r4 = (com.fasterxml.jackson.databind.node.BigIntegerNode) $r1;

        $r5 = $r4.<com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $r6 = $r0.<com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $z0 = virtualinvoke $r5.<java.math.BigInteger: boolean equals(java.lang.Object)>($r6);

        return $z0;

     label2:
        return 0;
    }

    public final int hashCode()
    {
        com.fasterxml.jackson.databind.node.BigIntegerNode $r0;
        int $i0;
        java.math.BigInteger $r1;

        $r0 := @this: com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 = $r0.<com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        return $i0;
    }

    public final void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.node.BigIntegerNode $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        java.math.BigInteger $r3;

        $r0 := @this: com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;

        $r3 = $r0.<com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.math.BigInteger)>($r3);

        return;
    }
}
