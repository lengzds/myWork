public final class com.fasterxml.jackson.databind.introspect.AnnotatedClass extends com.fasterxml.jackson.databind.introspect.Annotated
{
    private static final com.fasterxml.jackson.databind.introspect.AnnotationMap[] NO_ANNOTATION_MAPS;
    protected final com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector;
    protected final java.lang.Class _class;
    protected com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations;
    protected java.util.List _constructors;
    protected java.util.List _creatorMethods;
    protected boolean _creatorsResolved;
    protected com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor;
    protected java.util.List _fields;
    protected com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods;
    protected final com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver;
    protected final java.lang.Class _primaryMixIn;
    protected final java.util.List _superTypes;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.introspect.AnnotationMap[] $r0;

        $r0 = newarray (com.fasterxml.jackson.databind.introspect.AnnotationMap)[0];

        <com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap[] NO_ANNOTATION_MAPS> = $r0;

        return;
    }

    private void <init>(java.lang.Class, java.util.List, com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver, com.fasterxml.jackson.databind.introspect.AnnotationMap)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.Class $r1;
        java.util.List $r2;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r3;
        com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver $r4;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r5;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: com.fasterxml.jackson.databind.AnnotationIntrospector;

        $r4 := @parameter3: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;

        $r5 := @parameter4: com.fasterxml.jackson.databind.introspect.AnnotationMap;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.Annotated: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: boolean _creatorsResolved> = 0;

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _class> = $r1;

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _superTypes> = $r2;

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector> = $r3;

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver> = $r4;

        $r4 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;

        if $r4 != null goto label2;

        $r1 = null;

     label1:
        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _primaryMixIn> = $r1;

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations> = $r5;

        return;

     label2:
        $r4 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _class>;

        $r1 = interfaceinvoke $r4.<com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>($r1);

        goto label1;
    }

    private void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotatedMember, java.lang.annotation.Annotation[])
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r1;
        java.lang.annotation.Annotation[] $r2, $r6;
        int $i0, $i1;
        java.util.LinkedList $r3;
        java.lang.'annotation'.Annotation $r4;
        boolean $z0;
        java.lang.Class $r5;
        java.util.Iterator $r7;
        java.lang.Object $r8;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        $r2 := @parameter1: java.lang.annotation.Annotation[];

        if $r2 == null goto label7;

        $i0 = lengthof $r2;

        $r3 = null;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $r4 = $r2[$i1];

        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: boolean _isAnnotationBundle(java.lang.'annotation'.Annotation)>($r4);

        if $z0 == 0 goto label4;

        if $r3 != null goto label2;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

     label2:
        $r5 = interfaceinvoke $r4.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        virtualinvoke $r1.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: void addIfNotPresent(java.lang.'annotation'.Annotation)>($r4);

        goto label3;

     label5:
        if $r3 == null goto label7;

        $r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.annotation.Annotation[]) $r8;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])>($r1, $r2);

        goto label6;

     label7:
        return;
    }

    private void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap, java.lang.annotation.Annotation[])
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r1;
        java.lang.annotation.Annotation[] $r2, $r6;
        int $i0, $i1;
        java.util.LinkedList $r3;
        java.lang.'annotation'.Annotation $r4;
        boolean $z0;
        java.lang.Class $r5;
        java.util.Iterator $r7;
        java.lang.Object $r8;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationMap;

        $r2 := @parameter1: java.lang.annotation.Annotation[];

        if $r2 == null goto label7;

        $i0 = lengthof $r2;

        $r3 = null;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $r4 = $r2[$i1];

        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: boolean _isAnnotationBundle(java.lang.'annotation'.Annotation)>($r4);

        if $z0 == 0 goto label4;

        if $r3 != null goto label2;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

     label2:
        $r5 = interfaceinvoke $r4.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        virtualinvoke $r1.<com.fasterxml.jackson.databind.introspect.AnnotationMap: void addIfNotPresent(java.lang.'annotation'.Annotation)>($r4);

        goto label3;

     label5:
        if $r3 == null goto label7;

        $r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.annotation.Annotation[]) $r8;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.annotation.Annotation[])>($r1, $r2);

        goto label6;

     label7:
        return;
    }

    private void _addOrOverrideAnnotations(com.fasterxml.jackson.databind.introspect.AnnotatedMember, java.lang.annotation.Annotation[])
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r1;
        java.lang.annotation.Annotation[] $r2, $r6;
        int $i0, $i1;
        java.util.LinkedList $r3;
        java.lang.'annotation'.Annotation $r4;
        boolean $z0;
        java.lang.Class $r5;
        java.util.Iterator $r7;
        java.lang.Object $r8;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        $r2 := @parameter1: java.lang.annotation.Annotation[];

        if $r2 == null goto label7;

        $i0 = lengthof $r2;

        $r3 = null;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $r4 = $r2[$i1];

        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: boolean _isAnnotationBundle(java.lang.'annotation'.Annotation)>($r4);

        if $z0 == 0 goto label4;

        if $r3 != null goto label2;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

     label2:
        $r5 = interfaceinvoke $r4.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        virtualinvoke $r1.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: void addOrOverride(java.lang.'annotation'.Annotation)>($r4);

        goto label3;

     label5:
        if $r3 == null goto label7;

        $r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.annotation.Annotation[]) $r8;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addOrOverrideAnnotations(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])>($r1, $r2);

        goto label6;

     label7:
        return;
    }

    private com.fasterxml.jackson.databind.introspect.AnnotationMap _emptyAnnotationMap()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 = new com.fasterxml.jackson.databind.introspect.AnnotationMap;

        specialinvoke $r1.<com.fasterxml.jackson.databind.introspect.AnnotationMap: void <init>()>();

        return $r1;
    }

    private com.fasterxml.jackson.databind.introspect.AnnotationMap[] _emptyAnnotationMaps(int)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        int $i0, $i1;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r1;
        com.fasterxml.jackson.databind.introspect.AnnotationMap[] $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        $r2 = <com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap[] NO_ANNOTATION_MAPS>;

        return $r2;

     label1:
        $r2 = newarray (com.fasterxml.jackson.databind.introspect.AnnotationMap)[$i0];

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r1 = specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _emptyAnnotationMap()>();

        $r2[$i1] = $r1;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return $r2;
    }

    private final boolean _isAnnotationBundle(java.lang.annotation.Annotation)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.'annotation'.Annotation $r1;
        boolean $z0;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.'annotation'.Annotation;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.AnnotationIntrospector: boolean isAnnotationBundle(java.lang.'annotation'.Annotation)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean _isIncludableField(java.lang.reflect.Field)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.reflect.Field $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.reflect.Field;

        $z0 = virtualinvoke $r1.<java.lang.reflect.Field: boolean isSynthetic()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 != 0 goto label2;

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isTransient(int)>($i0);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static com.fasterxml.jackson.databind.introspect.AnnotatedClass construct(java.lang.Class, com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)
    {
        java.lang.Class $r0;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r1;
        com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver $r2;
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r3;
        java.util.List $r4;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: com.fasterxml.jackson.databind.AnnotationIntrospector;

        $r2 := @parameter2: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;

        $r3 = new com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.util.List findSuperTypes(java.lang.Class,java.lang.Class)>($r0, null);

        specialinvoke $r3.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void <init>(java.lang.Class,java.util.List,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.introspect.AnnotationMap)>($r0, $r4, $r1, $r2, null);

        return $r3;
    }

    public static com.fasterxml.jackson.databind.introspect.AnnotatedClass constructWithoutSuperTypes(java.lang.Class, com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)
    {
        java.lang.Class $r0;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r1;
        com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver $r2;
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r3;
        java.util.List $r4;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: com.fasterxml.jackson.databind.AnnotationIntrospector;

        $r2 := @parameter2: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;

        $r3 = new com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke $r3.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void <init>(java.lang.Class,java.util.List,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.introspect.AnnotationMap)>($r0, $r4, $r1, $r2, null);

        return $r3;
    }

    private void resolveClassAnnotations()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r1;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r2;
        java.lang.Class $r3, $r4;
        java.lang.annotation.Annotation[] $r5;
        java.util.List $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 = new com.fasterxml.jackson.databind.introspect.AnnotationMap;

        specialinvoke $r1.<com.fasterxml.jackson.databind.introspect.AnnotationMap: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations> = $r1;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        if $r2 == null goto label4;

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _primaryMixIn>;

        if $r3 == null goto label1;

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations>;

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _class>;

        $r4 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _primaryMixIn>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.Class,java.lang.Class)>($r1, $r3, $r4);

     label1:
        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations>;

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _class>;

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.annotation.Annotation[])>($r1, $r5);

        $r6 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _superTypes>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Class) $r8;

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.Class)>($r1, $r3);

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations>;

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.annotation.Annotation[])>($r1, $r5);

        goto label2;

     label3:
        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.Class)>($r1, class "java/lang/Object");

     label4:
        return;
    }

    private void resolveCreators()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Class $r1;
        java.lang.reflect.Constructor[] $r2;
        java.util.ArrayList $r3;
        java.lang.reflect.Constructor $r4;
        java.lang.Class[] $r5;
        com.fasterxml.jackson.databind.introspect.AnnotatedConstructor $r6;
        java.util.List $r7;
        boolean $z0;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r8;
        java.lang.Object $r9;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r10;
        java.lang.reflect.Method[] $r11;
        java.lang.reflect.Method $r12;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r13;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $i1 = 0;

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _class>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>();

        $i2 = lengthof $r2;

        $i3 = 0;

        $r3 = null;

     label01:
        if $i3 >= $i2 goto label05;

        $r4 = $r2[$i3];

        $r5 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r5;

        if $i0 != 0 goto label03;

        $r6 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _constructConstructor(java.lang.reflect.Constructor,boolean)>($r4, 1);

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor> = $r6;

     label02:
        $i3 = $i3 + 1;

        goto label01;

     label03:
        if $r3 != null goto label04;

        $r3 = new java.util.ArrayList;

        $i0 = lengthof $r2;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(10, $i0);

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

     label04:
        $r6 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _constructConstructor(java.lang.reflect.Constructor,boolean)>($r4, 0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label02;

     label05:
        if $r3 != null goto label11;

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _constructors> = $r7;

     label06:
        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _primaryMixIn>;

        if $r1 == null goto label08;

        $r6 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor>;

        if $r6 != null goto label07;

        $r7 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _constructors>;

        $z0 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label08;

     label07:
        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _primaryMixIn>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addConstructorMixIns(java.lang.Class)>($r1);

     label08:
        $r8 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        if $r8 == null goto label12;

        $r6 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor>;

        if $r6 == null goto label09;

        $r8 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        $r6 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor>;

        $z0 = virtualinvoke $r8.<com.fasterxml.jackson.databind.AnnotationIntrospector: boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)>($r6);

        if $z0 == 0 goto label09;

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor> = null;

     label09:
        $r7 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _constructors>;

        if $r7 == null goto label12;

        $r7 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _constructors>;

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

     label10:
        $i2 = $i2 + -1;

        if $i2 < 0 goto label12;

        $r8 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        $r7 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _constructors>;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i2);

        $r10 = (com.fasterxml.jackson.databind.introspect.AnnotatedMember) $r9;

        $z0 = virtualinvoke $r8.<com.fasterxml.jackson.databind.AnnotationIntrospector: boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)>($r10);

        if $z0 == 0 goto label22;

        $r7 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _constructors>;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>($i2);

        goto label10;

     label11:
        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _constructors> = $r3;

        goto label06;

     label12:
        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _class>;

        $r11 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        $i2 = lengthof $r11;

        $r3 = null;

     label13:
        if $i1 >= $i2 goto label16;

        $r12 = $r11[$i1];

        $i3 = virtualinvoke $r12.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i3);

        if $z0 == 0 goto label15;

        $r5 = virtualinvoke $r12.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i3 = lengthof $r5;

        if $i3 <= 0 goto label15;

        if $r3 != null goto label14;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(8);

     label14:
        $r13 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethod _constructCreatorMethod(java.lang.reflect.Method)>($r12);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r13);

     label15:
        $i1 = $i1 + 1;

        goto label13;

     label16:
        if $r3 != null goto label18;

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _creatorMethods> = $r7;

     label17:
        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: boolean _creatorsResolved> = 1;

        return;

     label18:
        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _creatorMethods> = $r3;

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _primaryMixIn>;

        if $r1 == null goto label19;

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _primaryMixIn>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addFactoryMixIns(java.lang.Class)>($r1);

     label19:
        $r8 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        if $r8 == null goto label17;

        $r7 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _creatorMethods>;

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

     label20:
        $i1 = $i1 + -1;

        if $i1 < 0 goto label17;

        $r8 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        $r7 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _creatorMethods>;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i1);

        $r10 = (com.fasterxml.jackson.databind.introspect.AnnotatedMember) $r9;

        $z0 = virtualinvoke $r8.<com.fasterxml.jackson.databind.AnnotationIntrospector: boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)>($r10);

        if $z0 == 0 goto label21;

        $r7 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _creatorMethods>;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>($i1);

        goto label20;

     label21:
        goto label20;

     label22:
        goto label10;
    }

    private void resolveFields()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.Class $r1;
        java.util.Map $r2;
        int $i0;
        java.util.List $r3;
        java.util.ArrayList $r4;
        java.util.Collection $r5;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _class>;

        $r2 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.Map _findFields(java.lang.Class,java.util.Map)>($r1, null);

        if $r2 == null goto label1;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _fields> = $r3;

        return;

     label2:
        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _fields> = $r4;

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _fields>;

        $r5 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        return;
    }

    private void resolveMemberMethods()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap $r1, $r3;
        java.lang.Class $r2, $r4;
        java.util.List $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver $r8;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r9;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r10, $r14;
        java.lang.String $r11;
        java.lang.Class[] $r12;
        java.lang.reflect.Method $r13;
        java.lang.Exception $r15;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap;

        specialinvoke $r1.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods> = $r1;

        $r1 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap;

        specialinvoke $r1.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: void <init>()>();

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _class>;

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods>;

        $r4 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _primaryMixIn>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addMemberMethods(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap)>($r2, $r3, $r4, $r1);

        $r5 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _superTypes>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.Class) $r7;

        $r8 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;

        if $r8 != null goto label03;

        $r4 = null;

     label02:
        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addMemberMethods(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap)>($r2, $r3, $r4, $r1);

        goto label01;

     label03:
        $r8 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;

        $r4 = interfaceinvoke $r8.<com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>($r2);

        goto label02;

     label04:
        $r8 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;

        if $r8 == null goto label05;

        $r8 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;

        $r2 = interfaceinvoke $r8.<com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>(class "java/lang/Object");

        if $r2 == null goto label05;

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addMethodMixIns(com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap)>($r3, $r2, $r1);

     label05:
        $r9 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        if $r9 == null goto label12;

        $z0 = virtualinvoke $r1.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: boolean isEmpty()>();

        if $z0 != 0 goto label12;

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.fasterxml.jackson.databind.introspect.AnnotatedMethod) $r7;

        $r2 = class "java/lang/Object";

     label07:
        $r11 = virtualinvoke $r10.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class[] getRawParameterTypes()>();

        $r13 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r11, $r12);

     label08:
        if $r13 == null goto label06;

     label09:
        $r14 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethod _constructMethod(java.lang.reflect.Method)>($r13);

        $r13 = virtualinvoke $r10.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method getAnnotated()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addMixOvers(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean)>($r13, $r14, 0);

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods>;

        virtualinvoke $r1.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: void add(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>($r14);

     label10:
        goto label06;

     label11:
        $r15 := @caughtexception;

        goto label06;

     label12:
        return;

        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    protected final void _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap, java.lang.Class)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r1;
        java.lang.Class $r2, $r3;
        com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver $r4;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationMap;

        $r2 := @parameter1: java.lang.Class;

        $r4 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;

        if $r4 == null goto label1;

        $r4 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;

        $r3 = interfaceinvoke $r4.<com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>($r2);

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.Class,java.lang.Class)>($r1, $r2, $r3);

     label1:
        return;
    }

    protected final void _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap, java.lang.Class, java.lang.Class)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r1;
        java.lang.Class $r2, $r3;
        java.lang.annotation.Annotation[] $r4;
        java.util.List $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationMap;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: java.lang.Class;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.annotation.Annotation[])>($r1, $r4);

        $r5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.util.List findSuperTypes(java.lang.Class,java.lang.Class)>($r3, $r2);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.Class) $r7;

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.annotation.Annotation[])>($r1, $r4);

        goto label2;

     label3:
        return;
    }

    protected final void _addConstructorMixIns(java.lang.Class)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.Class $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.reflect.Constructor $r2, $r10;
        java.util.List $r3;
        java.lang.reflect.Constructor[] $r4;
        com.fasterxml.jackson.databind.introspect.MemberKey[] $r5;
        java.lang.Class[] $r6;
        com.fasterxml.jackson.databind.introspect.AnnotatedConstructor $r7;
        com.fasterxml.jackson.databind.introspect.MemberKey $r8, $r11;
        java.lang.Object $r9;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.Class;

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _constructors>;

        if $r3 != null goto label04;

        $i1 = 0;

     label01:
        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>();

        $i0 = lengthof $r4;

        $i2 = 0;

        $r5 = null;

     label02:
        if $i2 >= $i0 goto label10;

        $r2 = $r4[$i2];

        $r6 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i3 = lengthof $r6;

        if $i3 != 0 goto label05;

        $r7 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor>;

        if $r7 == null goto label03;

        $r7 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addMixOvers(java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,boolean)>($r2, $r7, 0);

     label03:
        $i2 = $i2 + 1;

        goto label02;

     label04:
        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _constructors>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        goto label01;

     label05:
        if $r5 != null goto label07;

        $r5 = newarray (com.fasterxml.jackson.databind.introspect.MemberKey)[$i1];

        $i3 = 0;

     label06:
        if $i3 >= $i1 goto label07;

        $r8 = new com.fasterxml.jackson.databind.introspect.MemberKey;

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _constructors>;

        $r9 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i3);

        $r7 = (com.fasterxml.jackson.databind.introspect.AnnotatedConstructor) $r9;

        $r10 = virtualinvoke $r7.<com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: java.lang.reflect.Constructor getAnnotated()>();

        specialinvoke $r8.<com.fasterxml.jackson.databind.introspect.MemberKey: void <init>(java.lang.reflect.Constructor)>($r10);

        $r5[$i3] = $r8;

        $i3 = $i3 + 1;

        goto label06;

     label07:
        $r8 = new com.fasterxml.jackson.databind.introspect.MemberKey;

        specialinvoke $r8.<com.fasterxml.jackson.databind.introspect.MemberKey: void <init>(java.lang.reflect.Constructor)>($r2);

        $i3 = 0;

     label08:
        if $i3 >= $i1 goto label11;

        $r11 = $r5[$i3];

        $z0 = virtualinvoke $r8.<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label09;

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _constructors>;

        $r9 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i3);

        $r7 = (com.fasterxml.jackson.databind.introspect.AnnotatedConstructor) $r9;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addMixOvers(java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,boolean)>($r2, $r7, 1);

        goto label03;

     label09:
        $i3 = $i3 + 1;

        goto label08;

     label10:
        return;

     label11:
        goto label03;
    }

    protected final void _addFactoryMixIns(java.lang.Class)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.Class $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.reflect.Method $r2, $r10;
        com.fasterxml.jackson.databind.introspect.MemberKey[] $r3;
        java.util.List $r4;
        java.lang.reflect.Method[] $r5;
        boolean $z0;
        java.lang.Class[] $r6;
        com.fasterxml.jackson.databind.introspect.MemberKey $r7, $r11;
        java.lang.Object $r8;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r9;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.Class;

        $r3 = null;

        $r4 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _creatorMethods>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        $i0 = lengthof $r5;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label7;

        $r2 = $r5[$i2];

        $i3 = virtualinvoke $r2.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i3);

        if $z0 == 0 goto label8;

        $r6 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i3 = lengthof $r6;

        if $i3 == 0 goto label8;

        if $r3 != null goto label3;

        $r3 = newarray (com.fasterxml.jackson.databind.introspect.MemberKey)[$i1];

        $i3 = 0;

     label2:
        if $i3 >= $i1 goto label3;

        $r7 = new com.fasterxml.jackson.databind.introspect.MemberKey;

        $r4 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _creatorMethods>;

        $r8 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i3);

        $r9 = (com.fasterxml.jackson.databind.introspect.AnnotatedMethod) $r8;

        $r10 = virtualinvoke $r9.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method getAnnotated()>();

        specialinvoke $r7.<com.fasterxml.jackson.databind.introspect.MemberKey: void <init>(java.lang.reflect.Method)>($r10);

        $r3[$i3] = $r7;

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $r7 = new com.fasterxml.jackson.databind.introspect.MemberKey;

        specialinvoke $r7.<com.fasterxml.jackson.databind.introspect.MemberKey: void <init>(java.lang.reflect.Method)>($r2);

        $i3 = 0;

     label4:
        if $i3 >= $i1 goto label5;

        $r11 = $r3[$i3];

        $z0 = virtualinvoke $r7.<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label6;

        $r4 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _creatorMethods>;

        $r8 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i3);

        $r9 = (com.fasterxml.jackson.databind.introspect.AnnotatedMethod) $r8;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addMixOvers(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean)>($r2, $r9, 1);

     label5:
        $i2 = $i2 + 1;

        goto label1;

     label6:
        $i3 = $i3 + 1;

        goto label4;

     label7:
        return;

     label8:
        goto label5;
    }

    protected final void _addFieldMixIns(java.lang.Class, java.util.Map)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.Class $r1;
        java.util.Map $r2;
        int $i0, $i1;
        java.lang.reflect.Field[] $r3;
        java.lang.reflect.Field $r4;
        boolean $z0;
        java.lang.String $r5;
        java.lang.Object $r6;
        com.fasterxml.jackson.databind.introspect.AnnotatedField $r7;
        java.lang.annotation.Annotation[] $r8;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r4 = $r3[$i1];

        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: boolean _isIncludableField(java.lang.reflect.Field)>($r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.String getName()>();

        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (com.fasterxml.jackson.databind.introspect.AnnotatedField) $r6;

        if $r7 == null goto label2;

        $r8 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addOrOverrideAnnotations(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])>($r7, $r8);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    protected final void _addMemberMethods(java.lang.Class, com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap, java.lang.Class, com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.Class $r1, $r3;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap $r2, $r4;
        int $i0, $i1;
        java.lang.reflect.Method[] $r5;
        java.lang.reflect.Method $r6;
        boolean $z0;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r7, $r8;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap;

        $r3 := @parameter2: java.lang.Class;

        $r4 := @parameter3: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap;

        if $r3 == null goto label1;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addMethodMixIns(com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap)>($r2, $r3, $r4);

     label1:
        if $r1 != null goto label2;

        return;

     label2:
        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        $i0 = lengthof $r5;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label6;

        $r6 = $r5[$i1];

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: boolean _isIncludableMemberMethod(java.lang.reflect.Method)>($r6);

        if $z0 == 0 goto label4;

        $r7 = virtualinvoke $r2.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: com.fasterxml.jackson.databind.introspect.AnnotatedMethod find(java.lang.reflect.Method)>($r6);

        if $r7 != null goto label5;

        $r7 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethod _constructMethod(java.lang.reflect.Method)>($r6);

        virtualinvoke $r2.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: void add(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>($r7);

        $r8 = virtualinvoke $r4.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: com.fasterxml.jackson.databind.introspect.AnnotatedMethod remove(java.lang.reflect.Method)>($r6);

        if $r8 == null goto label4;

        $r6 = virtualinvoke $r8.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method getAnnotated()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addMixOvers(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean)>($r6, $r7, 0);

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addMixUnders(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>($r6, $r7);

        $r1 = virtualinvoke $r7.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class getDeclaringClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label4;

        $r1 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isInterface()>();

        if $z0 != 0 goto label4;

        $r7 = virtualinvoke $r7.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.introspect.AnnotatedMethod withMethod(java.lang.reflect.Method)>($r6);

        virtualinvoke $r2.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: void add(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>($r7);

        goto label4;

     label6:
        return;
    }

    protected final void _addMethodMixIns(com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap, java.lang.Class, com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap $r1, $r3;
        java.lang.Class $r2;
        int $i0, $i1;
        java.lang.reflect.Method[] $r4;
        java.lang.reflect.Method $r5;
        boolean $z0;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r6;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap;

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r5 = $r4[$i1];

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: boolean _isIncludableMemberMethod(java.lang.reflect.Method)>($r5);

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: com.fasterxml.jackson.databind.introspect.AnnotatedMethod find(java.lang.reflect.Method)>($r5);

        if $r6 == null goto label3;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addMixUnders(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>($r5, $r6);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r6 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethod _constructMethod(java.lang.reflect.Method)>($r5);

        virtualinvoke $r3.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: void add(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>($r6);

        goto label2;

     label4:
        return;
    }

    protected final void _addMixOvers(java.lang.reflect.Constructor, com.fasterxml.jackson.databind.introspect.AnnotatedConstructor, boolean)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.reflect.Constructor $r1;
        com.fasterxml.jackson.databind.introspect.AnnotatedConstructor $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.lang.annotation.Annotation[] $r3;
        java.lang.'annotation'.Annotation $r4;
        java.lang.annotation.Annotation[][] $r5;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.reflect.Constructor;

        $r2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor;

        $z0 := @parameter2: boolean;

        $r3 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addOrOverrideAnnotations(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])>($r2, $r3);

        if $z0 == 0 goto label4;

        $r5 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()>();

        $i0 = lengthof $r5;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label4;

        $r3 = $r5[$i2];

        $i1 = lengthof $r3;

        $i3 = 0;

     label2:
        if $i3 >= $i1 goto label3;

        $r4 = $r3[$i3];

        virtualinvoke $r2.<com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: void addOrOverrideParam(int,java.lang.'annotation'.Annotation)>($i2, $r4);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        return;
    }

    protected final void _addMixOvers(java.lang.reflect.Method, com.fasterxml.jackson.databind.introspect.AnnotatedMethod, boolean)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.reflect.Method $r1;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.lang.annotation.Annotation[] $r3;
        java.lang.'annotation'.Annotation $r4;
        java.lang.annotation.Annotation[][] $r5;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.reflect.Method;

        $r2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $z0 := @parameter2: boolean;

        $r3 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addOrOverrideAnnotations(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])>($r2, $r3);

        if $z0 == 0 goto label4;

        $r5 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.annotation.Annotation[][] getParameterAnnotations()>();

        $i0 = lengthof $r5;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label4;

        $r3 = $r5[$i2];

        $i1 = lengthof $r3;

        $i3 = 0;

     label2:
        if $i3 >= $i1 goto label3;

        $r4 = $r3[$i3];

        virtualinvoke $r2.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: void addOrOverrideParam(int,java.lang.'annotation'.Annotation)>($i2, $r4);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        return;
    }

    protected final void _addMixUnders(java.lang.reflect.Method, com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.reflect.Method $r1;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r2;
        java.lang.annotation.Annotation[] $r3;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.reflect.Method;

        $r2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r3 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])>($r2, $r3);

        return;
    }

    protected final com.fasterxml.jackson.databind.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[])
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.annotation.Annotation[] $r1;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.annotation.Annotation[];

        $r2 = new com.fasterxml.jackson.databind.introspect.AnnotationMap;

        specialinvoke $r2.<com.fasterxml.jackson.databind.introspect.AnnotationMap: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.annotation.Annotation[])>($r2, $r1);

        return $r2;
    }

    protected final com.fasterxml.jackson.databind.introspect.AnnotationMap[] _collectRelevantAnnotations(java.lang.annotation.Annotation[][])
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.annotation.Annotation[][] $r1;
        int $i0, $i1;
        com.fasterxml.jackson.databind.introspect.AnnotationMap[] $r2;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r3;
        java.lang.annotation.Annotation[] $r4;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.annotation.Annotation[][];

        $i0 = lengthof $r1;

        $r2 = newarray (com.fasterxml.jackson.databind.introspect.AnnotationMap)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = $r1[$i1];

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[])>($r4);

        $r2[$i1] = $r3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    protected final com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _constructConstructor(java.lang.reflect.Constructor, boolean)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.reflect.Constructor $r1;
        boolean $z0;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r2;
        com.fasterxml.jackson.databind.introspect.AnnotatedConstructor $r3;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r4;
        java.lang.Class[] $r5;
        int $i0, $i1;
        com.fasterxml.jackson.databind.introspect.AnnotationMap[] $r6;
        java.lang.annotation.Annotation[] $r7;
        java.lang.annotation.Annotation[][] $r8, $r10;
        java.lang.Class $r9;
        java.lang.IllegalStateException $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.reflect.Constructor;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        if $r2 != null goto label1;

        $r3 = new com.fasterxml.jackson.databind.introspect.AnnotatedConstructor;

        $r4 = specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _emptyAnnotationMap()>();

        $r5 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r5;

        $r6 = specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap[] _emptyAnnotationMaps(int)>($i0);

        specialinvoke $r3.<com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: void <init>(java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>($r1, $r4, $r6);

        return $r3;

     label1:
        if $z0 == 0 goto label2;

        $r3 = new com.fasterxml.jackson.databind.introspect.AnnotatedConstructor;

        $r7 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[])>($r7);

        specialinvoke $r3.<com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: void <init>(java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>($r1, $r4, null);

        return $r3;

     label2:
        $r8 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()>();

        $r5 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r5;

        $i1 = lengthof $r8;

        if $i0 == $i1 goto label5;

        $r9 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isEnum()>();

        if $z0 == 0 goto label4;

        $i1 = lengthof $r8;

        $i1 = $i1 + 2;

        if $i0 != $i1 goto label4;

        $i1 = lengthof $r8;

        $i1 = $i1 + 2;

        $r10 = newarray (java.lang.annotation.Annotation[])[$i1];

        $i1 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r10, 2, $i1);

        $r6 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap[] _collectRelevantAnnotations(java.lang.annotation.Annotation[][])>($r10);

     label3:
        if $r6 != null goto label6;

        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Internal error: constructor for ");

        $r9 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $r13 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has mismatch: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameters; ");

        $i0 = lengthof $r10;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sets of annotations");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r11;

     label4:
        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isMemberClass()>();

        if $z0 == 0 goto label7;

        $i1 = lengthof $r8;

        $i1 = $i1 + 1;

        if $i0 != $i1 goto label7;

        $i1 = lengthof $r8;

        $i1 = $i1 + 1;

        $r10 = newarray (java.lang.annotation.Annotation[])[$i1];

        $i1 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r10, 1, $i1);

        $r6 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap[] _collectRelevantAnnotations(java.lang.annotation.Annotation[][])>($r10);

        goto label3;

     label5:
        $r6 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap[] _collectRelevantAnnotations(java.lang.annotation.Annotation[][])>($r8);

     label6:
        $r3 = new com.fasterxml.jackson.databind.introspect.AnnotatedConstructor;

        $r7 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[])>($r7);

        specialinvoke $r3.<com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: void <init>(java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>($r1, $r4, $r6);

        return $r3;

     label7:
        $r10 = $r8;

        $r6 = null;

        goto label3;
    }

    protected final com.fasterxml.jackson.databind.introspect.AnnotatedMethod _constructCreatorMethod(java.lang.reflect.Method)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.reflect.Method $r1;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r2;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r3;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r4;
        java.lang.Class[] $r5;
        int $i0;
        com.fasterxml.jackson.databind.introspect.AnnotationMap[] $r6;
        java.lang.annotation.Annotation[] $r7;
        java.lang.annotation.Annotation[][] $r8;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.reflect.Method;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        if $r2 != null goto label1;

        $r3 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r4 = specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _emptyAnnotationMap()>();

        $r5 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r5;

        $r6 = specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap[] _emptyAnnotationMaps(int)>($i0);

        specialinvoke $r3.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: void <init>(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>($r1, $r4, $r6);

        return $r3;

     label1:
        $r3 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r7 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[])>($r7);

        $r8 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.annotation.Annotation[][] getParameterAnnotations()>();

        $r6 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap[] _collectRelevantAnnotations(java.lang.annotation.Annotation[][])>($r8);

        specialinvoke $r3.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: void <init>(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>($r1, $r4, $r6);

        return $r3;
    }

    protected final com.fasterxml.jackson.databind.introspect.AnnotatedField _constructField(java.lang.reflect.Field)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.reflect.Field $r1;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r2;
        com.fasterxml.jackson.databind.introspect.AnnotatedField $r3;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r4;
        java.lang.annotation.Annotation[] $r5;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.reflect.Field;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        if $r2 != null goto label1;

        $r3 = new com.fasterxml.jackson.databind.introspect.AnnotatedField;

        $r4 = specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _emptyAnnotationMap()>();

        specialinvoke $r3.<com.fasterxml.jackson.databind.introspect.AnnotatedField: void <init>(java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap)>($r1, $r4);

        return $r3;

     label1:
        $r3 = new com.fasterxml.jackson.databind.introspect.AnnotatedField;

        $r5 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[])>($r5);

        specialinvoke $r3.<com.fasterxml.jackson.databind.introspect.AnnotatedField: void <init>(java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap)>($r1, $r4);

        return $r3;
    }

    protected final com.fasterxml.jackson.databind.introspect.AnnotatedMethod _constructMethod(java.lang.reflect.Method)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.reflect.Method $r1;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r2;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r3;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r4;
        java.lang.annotation.Annotation[] $r5;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.reflect.Method;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;

        if $r2 != null goto label1;

        $r3 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r4 = specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _emptyAnnotationMap()>();

        specialinvoke $r3.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: void <init>(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>($r1, $r4, null);

        return $r3;

     label1:
        $r3 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r5 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[])>($r5);

        specialinvoke $r3.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: void <init>(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>($r1, $r4, null);

        return $r3;
    }

    protected final java.util.Map _findFields(java.lang.Class, java.util.Map)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.Class $r1, $r3;
        java.util.Map $r2;
        int $i0, $i1;
        java.lang.reflect.Field[] $r4;
        java.lang.reflect.Field $r5;
        boolean $z0;
        java.lang.String $r6;
        com.fasterxml.jackson.databind.introspect.AnnotatedField $r7;
        com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver $r8;
        java.util.LinkedHashMap r9;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r3 == null goto label5;

        $r2 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.Map _findFields(java.lang.Class,java.util.Map)>($r3, $r2);

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r5 = $r4[$i1];

        $z0 = specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: boolean _isIncludableField(java.lang.reflect.Field)>($r5);

        if $z0 == 0 goto label3;

        if $r2 != null goto label2;

        r9 = new java.util.LinkedHashMap;

        $r2 = r9;

        specialinvoke r9.<java.util.LinkedHashMap: void <init>()>();

     label2:
        $r6 = virtualinvoke $r5.<java.lang.reflect.Field: java.lang.String getName()>();

        $r7 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedField _constructField(java.lang.reflect.Field)>($r5);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r8 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;

        if $r8 == null goto label5;

        $r8 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;

        $r1 = interfaceinvoke $r8.<com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>($r1);

        if $r1 == null goto label5;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addFieldMixIns(java.lang.Class,java.util.Map)>($r1, $r2);

     label5:
        return $r2;
    }

    protected final boolean _isIncludableMemberMethod(java.lang.reflect.Method)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.reflect.Method $r1;
        int $i0;
        boolean $z0;
        java.lang.Class[] $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.reflect.Method;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.reflect.Method: boolean isSynthetic()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.reflect.Method: boolean isBridge()>();

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r2;

        if $i0 > 2 goto label2;

        return 1;

     label2:
        return 0;
    }

    public final java.lang.Iterable fields()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.util.List $r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _fields>;

        if $r1 != null goto label1;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void resolveFields()>();

     label1:
        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _fields>;

        return $r1;
    }

    public final com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String, java.lang.Class[])
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.String $r1;
        java.lang.Class[] $r2;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r3;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap $r4;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Class[];

        $r4 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods>;

        if $r4 != null goto label1;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void resolveMemberMethods()>();

     label1:
        $r4 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods>;

        $r3 = virtualinvoke $r4.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: com.fasterxml.jackson.databind.introspect.AnnotatedMethod find(java.lang.String,java.lang.Class[])>($r1, $r2);

        return $r3;
    }

    public final java.lang.Class getAnnotated()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.Class r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _class>;

        return r1;
    }

    public final volatile java.lang.reflect.AnnotatedElement getAnnotated()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.Class $r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 = virtualinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class getAnnotated()>();

        return $r1;
    }

    public final java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.Class $r1;
        java.lang.'annotation'.Annotation $r2;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r3;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 := @parameter0: java.lang.Class;

        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations>;

        if $r3 != null goto label1;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void resolveClassAnnotations()>();

     label1:
        $r3 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations>;

        $r2 = virtualinvoke $r3.<com.fasterxml.jackson.databind.introspect.AnnotationMap: java.lang.'annotation'.Annotation get(java.lang.Class)>($r1);

        return $r2;
    }

    public final com.fasterxml.jackson.databind.util.Annotations getAnnotations()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations>;

        if $r1 != null goto label1;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void resolveClassAnnotations()>();

     label1:
        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations>;

        return $r1;
    }

    public final java.util.List getConstructors()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        boolean $z0;
        java.util.List r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $z0 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: boolean _creatorsResolved>;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void resolveCreators()>();

     label1:
        r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _constructors>;

        return r1;
    }

    public final com.fasterxml.jackson.databind.introspect.AnnotatedConstructor getDefaultConstructor()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        boolean $z0;
        com.fasterxml.jackson.databind.introspect.AnnotatedConstructor r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $z0 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: boolean _creatorsResolved>;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void resolveCreators()>();

     label1:
        r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor>;

        return r1;
    }

    public final java.lang.reflect.Type getGenericType()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.Class r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _class>;

        return r1;
    }

    public final java.lang.String getName()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.String $r1;
        java.lang.Class $r2;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _class>;

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r1;
    }

    public final java.lang.Class getRawType()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.Class r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _class>;

        return r1;
    }

    public final java.util.List getStaticMethods()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        boolean $z0;
        java.util.List r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $z0 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: boolean _creatorsResolved>;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void resolveCreators()>();

     label1:
        r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.List _creatorMethods>;

        return r1;
    }

    public final boolean hasAnnotations()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        int $i0;
        com.fasterxml.jackson.databind.introspect.AnnotationMap $r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations>;

        if $r1 != null goto label1;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void resolveClassAnnotations()>();

     label1:
        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations>;

        $i0 = virtualinvoke $r1.<com.fasterxml.jackson.databind.introspect.AnnotationMap: int size()>();

        if $i0 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public final java.lang.Iterable memberMethods()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap $r1;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods>;

        if $r1 != null goto label1;

        specialinvoke $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void resolveMemberMethods()>();

     label1:
        $r1 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods>;

        return $r1;
    }

    public final java.lang.String toString()
    {
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        $r0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("[AnnotedClass ");

        $r2 = $r0.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class _class>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
