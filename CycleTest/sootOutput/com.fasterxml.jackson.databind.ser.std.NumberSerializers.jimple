public class com.fasterxml.jackson.databind.ser.std.NumberSerializers extends java.lang.Object
{

    public static void addAll(java.util.Map)
    {
        java.util.Map $r0;
        com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer $r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer $r4;
        com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer $r5;
        com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer $r6;
        com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer $r7;

        $r0 := @parameter0: java.util.Map;

        $r1 = new com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer;

        specialinvoke $r1.<com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer: void <init>()>();

        $r2 = class "java/lang/Integer";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r1);

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r1);

        $r2 = class "java/lang/Long";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer instance>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer instance>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r2 = class "java/lang/Byte";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r5 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer instance>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r5 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer instance>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $r2 = class "java/lang/Short";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r5 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer instance>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $r2 = <java.lang.Short: java.lang.Class TYPE>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r5 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer instance>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $r2 = class "java/lang/Float";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r6 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer instance>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r6);

        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r6 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer instance>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r6);

        $r2 = class "java/lang/Double";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r7 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer instance>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r7);

        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r7 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer instance>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r7);

        return;
    }
}
