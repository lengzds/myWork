public class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers extends java.lang.Object
{
    static final com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers instance;
    java.util.HashMap _allDeserializers;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers $r0;

        $r0 = new com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void <init>()>();

        <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers instance> = $r0;

        return;
    }

    protected void <init>()
    {
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers $r0;
        java.util.HashMap $r1;
        java.lang.Class $r2;
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser $r3;
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser $r4;
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser $r5;
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser $r6;
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser $r7;
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser $r8;
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser $r9;
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$StringDeser $r10;
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser $r11;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: java.util.HashMap _allDeserializers> = $r1;

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r3 = new com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser;

        specialinvoke $r3.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>($r2, $r3);

        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        $r4 = new com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        specialinvoke $r4.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>($r2, $r4);

        $r2 = <java.lang.Short: java.lang.Class TYPE>;

        $r5 = new com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser;

        specialinvoke $r5.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>($r2, $r5);

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r6 = new com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        specialinvoke $r6.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>($r2, $r6);

        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        $r7 = new com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser;

        specialinvoke $r7.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>($r2, $r7);

        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        $r8 = new com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser;

        specialinvoke $r8.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>($r2, $r8);

        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        $r9 = new com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser;

        specialinvoke $r9.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>($r2, $r9);

        $r10 = new com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$StringDeser;

        specialinvoke $r10.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$StringDeser: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>(class "java/lang/String", $r10);

        $r2 = <java.lang.Character: java.lang.Class TYPE>;

        $r11 = new com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser;

        specialinvoke $r11.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>($r2, $r11);

        return;
    }

    private void add(java.lang.Class, com.fasterxml.jackson.databind.JsonDeserializer)
    {
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers $r0;
        java.lang.Class $r1;
        com.fasterxml.jackson.databind.JsonDeserializer $r2;
        java.util.HashMap $r3;
        com.fasterxml.jackson.databind.type.TypeFactory $r4;
        com.fasterxml.jackson.databind.JavaType $r5;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JsonDeserializer;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: java.util.HashMap _allDeserializers>;

        $r4 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()>();

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>($r1);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r2);

        return;
    }

    public static java.util.HashMap getAll()
    {
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers $r0;
        java.util.HashMap r1;

        $r0 = <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers instance>;

        r1 = $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: java.util.HashMap _allDeserializers>;

        return r1;
    }
}
