public class com.speedsoftware.a.au extends java.lang.Object
{
    public static final int a;
    static final boolean b;
    private int c;
    private int[] d;
    private int[] e;
    private int f;
    private int g;
    private int h;
    private int i;
    private final com.speedsoftware.a.ak[] j;
    private int k;
    private int l;
    private int m;
    private int n;
    private byte[] o;
    private int p;
    private int q;
    private com.speedsoftware.a.ak r;
    private com.speedsoftware.a.aj s;
    private com.speedsoftware.a.aj t;
    private com.speedsoftware.a.aj u;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;
        int $i0;

        $r0 = class "com/speedsoftware/a/au";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.speedsoftware.a.au: boolean b> = $z0;

        $i0 = <com.speedsoftware.a.ab: int a>;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 12);

        <com.speedsoftware.a.au: int a> = $i0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void <init>()
    {
        com.speedsoftware.a.au $r0;
        int[] $r1;
        com.speedsoftware.a.ak[] $r2;

        $r0 := @this: com.speedsoftware.a.au;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[38];

        $r0.<com.speedsoftware.a.au: int[] d> = $r1;

        $r1 = newarray (int)[128];

        $r0.<com.speedsoftware.a.au: int[] e> = $r1;

        $r2 = newarray (com.speedsoftware.a.ak)[38];

        $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak[] j> = $r2;

        $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak r> = null;

        $r0.<com.speedsoftware.a.au: com.speedsoftware.a.aj s> = null;

        $r0.<com.speedsoftware.a.au: com.speedsoftware.a.aj t> = null;

        $r0.<com.speedsoftware.a.au: com.speedsoftware.a.aj u> = null;

        $r0.<com.speedsoftware.a.au: int c> = 0;

        return;
    }

    private int b(int)
    {
        com.speedsoftware.a.au $r0;
        int $i0, $i1;
        com.speedsoftware.a.ak[] $r1;
        com.speedsoftware.a.ak $r2, $r3;

        $r0 := @this: com.speedsoftware.a.au;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak[] j>;

        $r2 = $r1[$i0];

        $i1 = virtualinvoke $r2.<com.speedsoftware.a.ak: int a()>();

        $r2 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak r>;

        virtualinvoke $r2.<com.speedsoftware.a.ak: void c(int)>($i1);

        $r1 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak[] j>;

        $r3 = $r1[$i0];

        $i0 = virtualinvoke $r2.<com.speedsoftware.a.ak: int a()>();

        virtualinvoke $r3.<com.speedsoftware.a.ak: void a(int)>($i0);

        return $i1;
    }

    private void b(int, int, int)
    {
        com.speedsoftware.a.au $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1, $r2;

        $r0 := @this: com.speedsoftware.a.au;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i1 = $r1[$i1];

        $r1 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i3 = $r1[$i2];

        $i1 = $i1 - $i3;

        $r1 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i2 = $r1[$i2];

        $i3 = <com.speedsoftware.a.au: int a>;

        $i2 = $i2 * $i3;

        $i0 = $i2 + $i0;

        $r1 = $r0.<com.speedsoftware.a.au: int[] d>;

        $r2 = $r0.<com.speedsoftware.a.au: int[] e>;

        $i2 = $i1 + -1;

        $i2 = $r2[$i2];

        $i3 = $r1[$i2];

        if $i3 == $i1 goto label1;

        $i2 = $i2 + -1;

        specialinvoke $r0.<com.speedsoftware.a.au: void c(int,int)>($i0, $i2);

        $r1 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i2 = $r1[$i2];

        $i3 = <com.speedsoftware.a.au: int a>;

        $i3 = $i3 * $i2;

        $i0 = $i0 + $i3;

        $i1 = $i1 - $i2;

     label1:
        $r1 = $r0.<com.speedsoftware.a.au: int[] e>;

        $i1 = $i1 + -1;

        $i1 = $r1[$i1];

        specialinvoke $r0.<com.speedsoftware.a.au: void c(int,int)>($i0, $i1);

        return;
    }

    private int c(int)
    {
        com.speedsoftware.a.au $r0;
        int $i0, $i1, $i2, $i3, $i4;
        com.speedsoftware.a.aj $r1, $r2, $r3;
        byte[] $r4;
        com.speedsoftware.a.ak[] $r5;
        com.speedsoftware.a.ak $r6;
        int[] $r7, $r8;

        $r0 := @this: com.speedsoftware.a.au;

        $i0 := @parameter0: int;

        $i1 = $r0.<com.speedsoftware.a.au: int f>;

        if $i1 != 0 goto label15;

        $r0.<com.speedsoftware.a.au: int f> = 255;

        $r1 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.aj s>;

        $i1 = $r0.<com.speedsoftware.a.au: int q>;

        virtualinvoke $r1.<com.speedsoftware.a.aj: void c(int)>($i1);

        $r2 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.aj t>;

        $r3 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.aj u>;

        $i1 = $r0.<com.speedsoftware.a.au: int h>;

        $i2 = $r0.<com.speedsoftware.a.au: int i>;

        if $i1 == $i2 goto label01;

        $r4 = $r0.<com.speedsoftware.a.au: byte[] o>;

        $i1 = $r0.<com.speedsoftware.a.au: int h>;

        $r4[$i1] = 0;

     label01:
        virtualinvoke $r1.<com.speedsoftware.a.aj: void c(com.speedsoftware.a.aj)>($r1);

        virtualinvoke $r1.<com.speedsoftware.a.aj: void b(com.speedsoftware.a.aj)>($r1);

        $i1 = 0;

     label02:
        if $i1 < 38 goto label06;

        $i1 = virtualinvoke $r1.<com.speedsoftware.a.aj: int b()>();

        virtualinvoke $r2.<com.speedsoftware.a.aj: void c(int)>($i1);

     label03:
        $i1 = virtualinvoke $r2.<com.speedsoftware.a.aj: int e()>();

        $i2 = virtualinvoke $r1.<com.speedsoftware.a.aj: int e()>();

        if $i1 != $i2 goto label07;

        $i1 = virtualinvoke $r1.<com.speedsoftware.a.aj: int b()>();

        virtualinvoke $r2.<com.speedsoftware.a.aj: void c(int)>($i1);

     label04:
        $i1 = virtualinvoke $r2.<com.speedsoftware.a.aj: int e()>();

        $i2 = virtualinvoke $r1.<com.speedsoftware.a.aj: int e()>();

        if $i1 != $i2 goto label11;

        $r5 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak[] j>;

        $r6 = $r5[$i0];

        $i1 = virtualinvoke $r6.<com.speedsoftware.a.ak: int a()>();

        if $i1 == 0 goto label15;

        $i0 = specialinvoke $r0.<com.speedsoftware.a.au: int b(int)>($i0);

        return $i0;

     label05:
        $i2 = specialinvoke $r0.<com.speedsoftware.a.au: int b(int)>($i1);

        virtualinvoke $r2.<com.speedsoftware.a.aj: void c(int)>($i2);

        virtualinvoke $r2.<com.speedsoftware.a.aj: void a(com.speedsoftware.a.aj)>($r1);

        virtualinvoke $r2.<com.speedsoftware.a.aj: void f()>();

        $r7 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i2 = $r7[$i1];

        virtualinvoke $r2.<com.speedsoftware.a.aj: void a(int)>($i2);

     label06:
        $r5 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak[] j>;

        $r6 = $r5[$i1];

        $i2 = virtualinvoke $r6.<com.speedsoftware.a.ak: int a()>();

        if $i2 != 0 goto label05;

        $i1 = $i1 + 1;

        goto label02;

     label07:
        $i1 = virtualinvoke $r2.<com.speedsoftware.a.aj: int e()>();

        $i2 = virtualinvoke $r2.<com.speedsoftware.a.aj: int c()>();

        $i1 = staticinvoke <com.speedsoftware.a.au: int d(int,int)>($i1, $i2);

        virtualinvoke $r3.<com.speedsoftware.a.aj: void c(int)>($i1);

     label08:
        $i1 = virtualinvoke $r3.<com.speedsoftware.a.aj: int d()>();

        if $i1 != 65535 goto label09;

        $i1 = virtualinvoke $r2.<com.speedsoftware.a.aj: int c()>();

        $i2 = virtualinvoke $r3.<com.speedsoftware.a.aj: int c()>();

        $i1 = $i1 + $i2;

        if $i1 < 65536 goto label10;

     label09:
        $i1 = virtualinvoke $r2.<com.speedsoftware.a.aj: int b()>();

        virtualinvoke $r2.<com.speedsoftware.a.aj: void c(int)>($i1);

        goto label03;

     label10:
        virtualinvoke $r3.<com.speedsoftware.a.aj: void a()>();

        $i1 = virtualinvoke $r2.<com.speedsoftware.a.aj: int c()>();

        $i2 = virtualinvoke $r3.<com.speedsoftware.a.aj: int c()>();

        $i1 = $i1 + $i2;

        virtualinvoke $r2.<com.speedsoftware.a.aj: void a(int)>($i1);

        $i1 = virtualinvoke $r2.<com.speedsoftware.a.aj: int e()>();

        $i2 = virtualinvoke $r2.<com.speedsoftware.a.aj: int c()>();

        $i1 = staticinvoke <com.speedsoftware.a.au: int d(int,int)>($i1, $i2);

        virtualinvoke $r3.<com.speedsoftware.a.aj: void c(int)>($i1);

        goto label08;

     label11:
        virtualinvoke $r2.<com.speedsoftware.a.aj: void a()>();

        $i2 = virtualinvoke $r2.<com.speedsoftware.a.aj: int c()>();

     label12:
        if $i2 > 128 goto label14;

        $r7 = $r0.<com.speedsoftware.a.au: int[] d>;

        $r8 = $r0.<com.speedsoftware.a.au: int[] e>;

        $i1 = $i2 + -1;

        $i1 = $r8[$i1];

        $i3 = $r7[$i1];

        if $i3 == $i2 goto label13;

        $r7 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i1 = $i1 + -1;

        $i3 = $r7[$i1];

        $i3 = $i2 - $i3;

        $i4 = virtualinvoke $r2.<com.speedsoftware.a.aj: int e()>();

        $i2 = $i2 - $i3;

        $i2 = staticinvoke <com.speedsoftware.a.au: int d(int,int)>($i4, $i2);

        $i3 = $i3 + -1;

        specialinvoke $r0.<com.speedsoftware.a.au: void c(int,int)>($i2, $i3);

     label13:
        $i2 = virtualinvoke $r2.<com.speedsoftware.a.aj: int e()>();

        specialinvoke $r0.<com.speedsoftware.a.au: void c(int,int)>($i2, $i1);

        $i1 = virtualinvoke $r1.<com.speedsoftware.a.aj: int b()>();

        virtualinvoke $r2.<com.speedsoftware.a.aj: void c(int)>($i1);

        goto label04;

     label14:
        $i1 = virtualinvoke $r2.<com.speedsoftware.a.aj: int e()>();

        specialinvoke $r0.<com.speedsoftware.a.au: void c(int,int)>($i1, 37);

        $i1 = $i2 + -128;

        $i2 = virtualinvoke $r2.<com.speedsoftware.a.aj: int e()>();

        $i2 = staticinvoke <com.speedsoftware.a.au: int d(int,int)>($i2, 128);

        virtualinvoke $r2.<com.speedsoftware.a.aj: void c(int)>($i2);

        $i2 = $i1;

        goto label12;

     label15:
        $i1 = $i0;

     label16:
        $i1 = $i1 + 1;

        if $i1 != 38 goto label18;

        $i1 = $r0.<com.speedsoftware.a.au: int f>;

        $i1 = $i1 + -1;

        $r0.<com.speedsoftware.a.au: int f> = $i1;

        $r7 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i1 = $r7[$i0];

        $i2 = <com.speedsoftware.a.au: int a>;

        $i1 = $i1 * $i2;

        $r7 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i0 = $r7[$i0];

        $i0 = $i0 * 12;

        $i2 = $r0.<com.speedsoftware.a.au: int n>;

        $i3 = $r0.<com.speedsoftware.a.au: int k>;

        $i2 = $i2 - $i3;

        if $i2 <= $i0 goto label17;

        $i2 = $r0.<com.speedsoftware.a.au: int n>;

        $i0 = $i2 - $i0;

        $r0.<com.speedsoftware.a.au: int n> = $i0;

        $i0 = $r0.<com.speedsoftware.a.au: int l>;

        $i0 = $i0 - $i1;

        $r0.<com.speedsoftware.a.au: int l> = $i0;

        $i0 = $r0.<com.speedsoftware.a.au: int l>;

        return $i0;

     label17:
        return 0;

     label18:
        $r5 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak[] j>;

        $r6 = $r5[$i1];

        $i2 = virtualinvoke $r6.<com.speedsoftware.a.ak: int a()>();

        if $i2 == 0 goto label19;

        $i2 = specialinvoke $r0.<com.speedsoftware.a.au: int b(int)>($i1);

        specialinvoke $r0.<com.speedsoftware.a.au: void b(int,int,int)>($i2, $i1, $i0);

        return $i2;

     label19:
        goto label16;
    }

    private void c(int, int)
    {
        com.speedsoftware.a.au $r0;
        int $i0, $i1;
        com.speedsoftware.a.ak $r1, $r3;
        com.speedsoftware.a.ak[] $r2;

        $r0 := @this: com.speedsoftware.a.au;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak r>;

        virtualinvoke $r1.<com.speedsoftware.a.ak: void c(int)>($i0);

        $r2 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak[] j>;

        $r3 = $r2[$i1];

        $i0 = virtualinvoke $r3.<com.speedsoftware.a.ak: int a()>();

        virtualinvoke $r1.<com.speedsoftware.a.ak: void a(int)>($i0);

        $r2 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak[] j>;

        $r3 = $r2[$i1];

        virtualinvoke $r3.<com.speedsoftware.a.ak: void a(com.speedsoftware.a.ak)>($r1);

        return;
    }

    private static int d(int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = <com.speedsoftware.a.au: int a>;

        $i1 = $i2 * $i1;

        $i0 = $i1 + $i0;

        return $i0;
    }

    public final int a(int)
    {
        com.speedsoftware.a.au $r0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r1;
        com.speedsoftware.a.ak[] $r2;
        com.speedsoftware.a.ak $r3;

        $r0 := @this: com.speedsoftware.a.au;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.speedsoftware.a.au: int[] e>;

        $i0 = $i0 + -1;

        $i0 = $r1[$i0];

        $r2 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak[] j>;

        $r3 = $r2[$i0];

        $i2 = virtualinvoke $r3.<com.speedsoftware.a.ak: int a()>();

        if $i2 == 0 goto label1;

        $i0 = specialinvoke $r0.<com.speedsoftware.a.au: int b(int)>($i0);

        return $i0;

     label1:
        $i2 = $r0.<com.speedsoftware.a.au: int h>;

        $i3 = $r0.<com.speedsoftware.a.au: int h>;

        $r1 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i4 = $r1[$i0];

        $i1 = <com.speedsoftware.a.au: int a>;

        $i1 = $i4 * $i1;

        $i3 = $i3 + $i1;

        $r0.<com.speedsoftware.a.au: int h> = $i3;

        $i3 = $r0.<com.speedsoftware.a.au: int h>;

        $i1 = $r0.<com.speedsoftware.a.au: int i>;

        if $i3 <= $i1 goto label2;

        $i2 = $r0.<com.speedsoftware.a.au: int h>;

        $r1 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i3 = $r1[$i0];

        $i1 = <com.speedsoftware.a.au: int a>;

        $i3 = $i3 * $i1;

        $i2 = $i2 - $i3;

        $r0.<com.speedsoftware.a.au: int h> = $i2;

        $i0 = specialinvoke $r0.<com.speedsoftware.a.au: int c(int)>($i0);

        return $i0;

     label2:
        return $i2;
    }

    public final int a(int, int)
    {
        com.speedsoftware.a.au $r0;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r1, $r3;
        int[] $r2;

        $r0 := @this: com.speedsoftware.a.au;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.speedsoftware.a.au: int[] e>;

        $i3 = $i0 + -1;

        $i3 = $r2[$i3];

        $r2 = $r0.<com.speedsoftware.a.au: int[] e>;

        $i1 = $i0 + -1;

        $i1 = $i1 + 1;

        $i1 = $r2[$i1];

        if $i3 != $i1 goto label1;

        return $i2;

     label1:
        $i1 = $i0 + 1;

        $i1 = virtualinvoke $r0.<com.speedsoftware.a.au: int a(int)>($i1);

        if $i1 == 0 goto label2;

        $r3 = $r0.<com.speedsoftware.a.au: byte[] o>;

        $r1 = $r0.<com.speedsoftware.a.au: byte[] o>;

        $i4 = <com.speedsoftware.a.au: int a>;

        $i0 = $i4 * $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i2, $r1, $i1, $i0);

        specialinvoke $r0.<com.speedsoftware.a.au: void c(int,int)>($i2, $i3);

     label2:
        return $i1;
    }

    public final int a(int, int, int)
    {
        com.speedsoftware.a.au $r0;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r1, $r5;
        int[] $r2;
        com.speedsoftware.a.ak[] $r3;
        com.speedsoftware.a.ak $r4;

        $r0 := @this: com.speedsoftware.a.au;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<com.speedsoftware.a.au: int[] e>;

        $i0 = $i0 + -1;

        $i0 = $r2[$i0];

        $r2 = $r0.<com.speedsoftware.a.au: int[] e>;

        $i3 = $i1 + -1;

        $i3 = $r2[$i3];

        if $i0 != $i3 goto label1;

        return $i2;

     label1:
        $r3 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak[] j>;

        $r4 = $r3[$i3];

        $i4 = virtualinvoke $r4.<com.speedsoftware.a.ak: int a()>();

        if $i4 == 0 goto label2;

        $i3 = specialinvoke $r0.<com.speedsoftware.a.au: int b(int)>($i3);

        $r5 = $r0.<com.speedsoftware.a.au: byte[] o>;

        $r1 = $r0.<com.speedsoftware.a.au: byte[] o>;

        $i4 = <com.speedsoftware.a.au: int a>;

        $i1 = $i4 * $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i2, $r1, $i3, $i1);

        specialinvoke $r0.<com.speedsoftware.a.au: void c(int,int)>($i2, $i0);

        return $i3;

     label2:
        specialinvoke $r0.<com.speedsoftware.a.au: void b(int,int,int)>($i2, $i0, $i3);

        return $i2;
    }

    public final void a()
    {
        com.speedsoftware.a.au $r0;
        int $i0;

        $r0 := @this: com.speedsoftware.a.au;

        $i0 = $r0.<com.speedsoftware.a.au: int k>;

        $i0 = $i0 + 1;

        $r0.<com.speedsoftware.a.au: int k> = $i0;

        return;
    }

    public final void b()
    {
        com.speedsoftware.a.au $r0;
        int $i0;

        $r0 := @this: com.speedsoftware.a.au;

        $i0 = $r0.<com.speedsoftware.a.au: int c>;

        if $i0 == 0 goto label1;

        $r0.<com.speedsoftware.a.au: int c> = 0;

        $r0.<com.speedsoftware.a.au: byte[] o> = null;

        $r0.<com.speedsoftware.a.au: int g> = 1;

        $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak r> = null;

        $r0.<com.speedsoftware.a.au: com.speedsoftware.a.aj s> = null;

        $r0.<com.speedsoftware.a.au: com.speedsoftware.a.aj t> = null;

        $r0.<com.speedsoftware.a.au: com.speedsoftware.a.aj u> = null;

     label1:
        return;
    }

    public final void b(int, int)
    {
        com.speedsoftware.a.au $r0;
        int $i0, $i1;
        int[] $r1;

        $r0 := @this: com.speedsoftware.a.au;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.speedsoftware.a.au: int[] e>;

        $i1 = $i1 + -1;

        $i1 = $r1[$i1];

        specialinvoke $r0.<com.speedsoftware.a.au: void c(int,int)>($i0, $i1);

        return;
    }

    public final int c()
    {
        com.speedsoftware.a.au $r0;
        int $i0, $i1;
        com.speedsoftware.a.ak[] $r1;
        com.speedsoftware.a.ak $r2;

        $r0 := @this: com.speedsoftware.a.au;

        $i0 = $r0.<com.speedsoftware.a.au: int i>;

        $i1 = $r0.<com.speedsoftware.a.au: int h>;

        if $i0 == $i1 goto label1;

        $i0 = $r0.<com.speedsoftware.a.au: int i>;

        $i1 = <com.speedsoftware.a.au: int a>;

        $i0 = $i0 - $i1;

        $r0.<com.speedsoftware.a.au: int i> = $i0;

        return $i0;

     label1:
        $r1 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak[] j>;

        $r2 = $r1[0];

        $i0 = virtualinvoke $r2.<com.speedsoftware.a.ak: int a()>();

        if $i0 == 0 goto label2;

        $i0 = specialinvoke $r0.<com.speedsoftware.a.au: int b(int)>(0);

        return $i0;

     label2:
        $i0 = specialinvoke $r0.<com.speedsoftware.a.au: int c(int)>(0);

        return $i0;
    }

    public final int d()
    {
        com.speedsoftware.a.au $r0;
        int i0;

        $r0 := @this: com.speedsoftware.a.au;

        i0 = $r0.<com.speedsoftware.a.au: int n>;

        return i0;
    }

    public final int e()
    {
        com.speedsoftware.a.au $r0;
        int i0;

        $r0 := @this: com.speedsoftware.a.au;

        i0 = $r0.<com.speedsoftware.a.au: int m>;

        return i0;
    }

    public final int f()
    {
        com.speedsoftware.a.au $r0;
        int i0;

        $r0 := @this: com.speedsoftware.a.au;

        i0 = $r0.<com.speedsoftware.a.au: int k>;

        return i0;
    }

    public final void g()
    {
        com.speedsoftware.a.au $r0;
        int $i0;

        $r0 := @this: com.speedsoftware.a.au;

        $i0 = $r0.<com.speedsoftware.a.au: int k>;

        $i0 = $i0 + -1;

        $r0.<com.speedsoftware.a.au: int k> = $i0;

        return;
    }

    public final void h()
    {
        com.speedsoftware.a.au $r0;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r1;
        com.speedsoftware.a.ak[] $r2;
        int[] $r3;
        byte $b5;

        $r0 := @this: com.speedsoftware.a.au;

        $r1 = $r0.<com.speedsoftware.a.au: byte[] o>;

        $i1 = $r0.<com.speedsoftware.a.au: int p>;

        $i2 = $r0.<com.speedsoftware.a.au: int p>;

        $r2 = $r0.<com.speedsoftware.a.au: com.speedsoftware.a.ak[] j>;

        $i3 = lengthof $r2;

        $i3 = $i3 * 4;

        $i2 = $i2 + $i3;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r1, $i1, $i2, 0);

        $i1 = $r0.<com.speedsoftware.a.au: int g>;

        $r0.<com.speedsoftware.a.au: int k> = $i1;

        $i1 = $r0.<com.speedsoftware.a.au: int c>;

        $i1 = $i1 / 8;

        $i1 = $i1 / 12;

        $i1 = $i1 * 7;

        $i2 = $i1 * 12;

        $i1 = $i2 / 12;

        $i3 = <com.speedsoftware.a.au: int a>;

        $i1 = $i1 * $i3;

        $i3 = $r0.<com.speedsoftware.a.au: int c>;

        $i2 = $i3 - $i2;

        $i3 = $i2 / 12;

        $i0 = <com.speedsoftware.a.au: int a>;

        $i3 = $i3 * $i0;

        $i0 = $i2 % 12;

        $i3 = $i3 + $i0;

        $i4 = $r0.<com.speedsoftware.a.au: int g>;

        $i0 = $r0.<com.speedsoftware.a.au: int c>;

        $i0 = $i4 + $i0;

        $r0.<com.speedsoftware.a.au: int i> = $i0;

        $i0 = $r0.<com.speedsoftware.a.au: int g>;

        $i3 = $i3 + $i0;

        $r0.<com.speedsoftware.a.au: int l> = $i3;

        $r0.<com.speedsoftware.a.au: int h> = $i3;

        $i3 = $r0.<com.speedsoftware.a.au: int g>;

        $i2 = $i2 + $i3;

        $r0.<com.speedsoftware.a.au: int n> = $i2;

        $i2 = $r0.<com.speedsoftware.a.au: int h>;

        $i1 = $i2 + $i1;

        $r0.<com.speedsoftware.a.au: int i> = $i1;

        $i2 = 1;

        $i1 = 0;

     label01:
        if $i1 < 4 goto label06;

        $i2 = $i2 + 1;

     label02:
        if $i1 < 8 goto label07;

        $i2 = $i2 + 1;

     label03:
        if $i1 < 12 goto label08;

        $i2 = $i2 + 1;

     label04:
        if $i1 < 38 goto label09;

        $r0.<com.speedsoftware.a.au: int f> = 0;

        $i2 = 0;

        $i1 = 0;

     label05:
        if $i2 < 128 goto label10;

        return;

     label06:
        $r3 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i3 = $i2 & 255;

        $r3[$i1] = $i3;

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label01;

     label07:
        $r3 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i3 = $i2 & 255;

        $r3[$i1] = $i3;

        $i1 = $i1 + 1;

        $i2 = $i2 + 2;

        goto label02;

     label08:
        $r3 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i3 = $i2 & 255;

        $r3[$i1] = $i3;

        $i1 = $i1 + 1;

        $i2 = $i2 + 3;

        goto label03;

     label09:
        $r3 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i3 = $i2 & 255;

        $r3[$i1] = $i3;

        $i1 = $i1 + 1;

        $i2 = $i2 + 4;

        goto label04;

     label10:
        $r3 = $r0.<com.speedsoftware.a.au: int[] d>;

        $i3 = $r3[$i1];

        $i0 = $i2 + 1;

        if $i3 >= $i0 goto label12;

        $b5 = 1;

     label11:
        $i1 = $i1 + $b5;

        $r3 = $r0.<com.speedsoftware.a.au: int[] e>;

        $i3 = $i1 & 255;

        $r3[$i2] = $i3;

        $i2 = $i2 + 1;

        goto label05;

     label12:
        $b5 = 0;

        goto label11;
    }

    public final byte[] i()
    {
        com.speedsoftware.a.au $r0;
        byte[] r1;

        $r0 := @this: com.speedsoftware.a.au;

        r1 = $r0.<com.speedsoftware.a.au: byte[] o>;

        return r1;
    }

    public java.lang.String toString()
    {
        com.speedsoftware.a.au $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        int $i0;

        $r0 := @this: com.speedsoftware.a.au;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SubAllocator[");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  subAllocatorSize=");

        $i0 = $r0.<com.speedsoftware.a.au: int c>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  glueCount=");

        $i0 = $r0.<com.speedsoftware.a.au: int f>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  heapStart=");

        $i0 = $r0.<com.speedsoftware.a.au: int g>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  loUnit=");

        $i0 = $r0.<com.speedsoftware.a.au: int h>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  hiUnit=");

        $i0 = $r0.<com.speedsoftware.a.au: int i>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  pText=");

        $i0 = $r0.<com.speedsoftware.a.au: int k>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  unitsStart=");

        $i0 = $r0.<com.speedsoftware.a.au: int l>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n]");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
