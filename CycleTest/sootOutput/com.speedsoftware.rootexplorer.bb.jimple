public class com.speedsoftware.rootexplorer.bb extends java.lang.Object
{
    private static final java.lang.String a;
    private static java.lang.String b;
    private static int c;
    private static int d;
    private static java.security.SecureRandom e;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        java.security.SecureRandom $r2;

        $r1 = class "com/speedsoftware/rootexplorer/bb";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.speedsoftware.rootexplorer.bb: java.lang.String a> = $r0;

        <com.speedsoftware.rootexplorer.bb: java.lang.String b> = "]";

        <com.speedsoftware.rootexplorer.bb: int c> = 256;

        <com.speedsoftware.rootexplorer.bb: int d> = 1000;

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        <com.speedsoftware.rootexplorer.bb: java.security.SecureRandom e> = $r2;

        return;
    }

    private void <init>()
    {
        com.speedsoftware.rootexplorer.bb $r0;

        $r0 := @this: com.speedsoftware.rootexplorer.bb;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        byte[] $r2;
        java.security.SecureRandom $r3;
        javax.crypto.SecretKey $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = newarray (byte)[8];

        $r3 = <com.speedsoftware.rootexplorer.bb: java.security.SecureRandom e>;

        virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r2);

        $r4 = staticinvoke <com.speedsoftware.rootexplorer.bb: javax.crypto.SecretKey a(byte[],java.lang.String)>($r2, $r0);

        $r0 = staticinvoke <com.speedsoftware.rootexplorer.bb: java.lang.String a(java.lang.String,javax.crypto.SecretKey,byte[])>($r1, $r4, $r2);

        return $r0;
    }

    private static java.lang.String a(java.lang.String, javax.crypto.SecretKey, byte[])
    {
        java.lang.String $r0;
        javax.crypto.SecretKey $r1;
        byte[] $r2, $r4, $r7;
        javax.crypto.Cipher $r3;
        int $i0;
        java.security.SecureRandom $r5;
        javax.crypto.spec.IvParameterSpec $r6;
        java.lang.Object[] $r8;
        java.security.GeneralSecurityException $r9;
        java.lang.RuntimeException $r10;
        java.io.UnsupportedEncodingException $r11;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: javax.crypto.SecretKey;

        $r2 := @parameter2: byte[];

     label01:
        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        $i0 = virtualinvoke $r3.<javax.crypto.Cipher: int getBlockSize()>();

     label02:
        $r4 = newarray (byte)[$i0];

        $r5 = <com.speedsoftware.rootexplorer.bb: java.security.SecureRandom e>;

     label03:
        virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r4);

     label04:
        $r6 = new javax.crypto.spec.IvParameterSpec;

     label05:
        specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4);

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r1, $r6);

        $r7 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r7 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7);

     label06:
        if $r2 == null goto label15;

        $r8 = newarray (java.lang.Object)[5];

     label07:
        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r2, 2);

     label08:
        $r8[0] = $r0;

        $r0 = <com.speedsoftware.rootexplorer.bb: java.lang.String b>;

        $r8[1] = $r0;

     label09:
        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r4, 2);

     label10:
        $r8[2] = $r0;

        $r0 = <com.speedsoftware.rootexplorer.bb: java.lang.String b>;

        $r8[3] = $r0;

     label11:
        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r7, 2);

     label12:
        $r8[4] = $r0;

     label13:
        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s%s%s%s", $r8);

     label14:
        return $r0;

     label15:
        $r8 = newarray (java.lang.Object)[3];

     label16:
        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r4, 2);

     label17:
        $r8[0] = $r0;

        $r0 = <com.speedsoftware.rootexplorer.bb: java.lang.String b>;

        $r8[1] = $r0;

     label18:
        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r7, 2);

     label19:
        $r8[2] = $r0;

     label20:
        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s%s", $r8);

     label21:
        return $r0;

     label22:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label23:
        $r11 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r11);

        throw $r10;

        catch java.security.GeneralSecurityException from label01 to label02 with label22;
        catch java.security.GeneralSecurityException from label03 to label04 with label22;
        catch java.security.GeneralSecurityException from label05 to label06 with label22;
        catch java.security.GeneralSecurityException from label07 to label08 with label22;
        catch java.security.GeneralSecurityException from label09 to label10 with label22;
        catch java.security.GeneralSecurityException from label11 to label12 with label22;
        catch java.security.GeneralSecurityException from label13 to label14 with label22;
        catch java.security.GeneralSecurityException from label16 to label17 with label22;
        catch java.security.GeneralSecurityException from label18 to label19 with label22;
        catch java.security.GeneralSecurityException from label20 to label21 with label22;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label23;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label23;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label23;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label23;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label23;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label23;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label23;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label23;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label23;
        catch java.io.UnsupportedEncodingException from label20 to label21 with label23;
    }

    private static java.lang.String a(byte[], javax.crypto.SecretKey, byte[])
    {
        byte[] $r0, $r2;
        javax.crypto.SecretKey $r1;
        javax.crypto.Cipher $r3;
        javax.crypto.spec.IvParameterSpec $r4;
        java.lang.String $r5;
        java.security.GeneralSecurityException $r6;
        java.lang.RuntimeException $r7;
        java.io.UnsupportedEncodingException $r8;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: javax.crypto.SecretKey;

        $r2 := @parameter2: byte[];

     label1:
        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

     label2:
        $r4 = new javax.crypto.spec.IvParameterSpec;

     label3:
        specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2);

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r1, $r4);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label4:
        $r5 = new java.lang.String;

     label5:
        specialinvoke $r5.<java.lang.String: void <init>(byte[],java.lang.String)>($r0, "UTF-8");

     label6:
        return $r5;

     label7:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label8:
        $r8 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r7;

        catch java.security.GeneralSecurityException from label1 to label2 with label7;
        catch java.security.GeneralSecurityException from label3 to label4 with label7;
        catch java.security.GeneralSecurityException from label5 to label6 with label7;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label8;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label8;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label8;
    }

    private static javax.crypto.SecretKey a(byte[], java.lang.String)
    {
        byte[] $r0;
        java.lang.String $r1;
        int $i0, $i1;
        javax.crypto.spec.PBEKeySpec $r2;
        char[] $r3;
        javax.crypto.SecretKeyFactory $r4;
        javax.crypto.SecretKey $r5;
        javax.crypto.spec.SecretKeySpec $r6;
        java.security.GeneralSecurityException $r7;
        java.lang.RuntimeException $r8;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

     label1:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

     label2:
        $r2 = new javax.crypto.spec.PBEKeySpec;

     label3:
        $r3 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

     label4:
        $i1 = <com.speedsoftware.rootexplorer.bb: int d>;

        $i0 = <com.speedsoftware.rootexplorer.bb: int c>;

     label5:
        specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r0, $i1, $i0);

        $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("PBKDF2WithHmacSHA1");

        $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2);

        $r0 = interfaceinvoke $r5.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label6:
        $r6 = new javax.crypto.spec.SecretKeySpec;

     label7:
        specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, "AES");

        staticinvoke <java.lang.System: long currentTimeMillis()>();

     label8:
        return $r6;

     label9:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch java.security.GeneralSecurityException from label1 to label2 with label9;
        catch java.security.GeneralSecurityException from label3 to label4 with label9;
        catch java.security.GeneralSecurityException from label5 to label6 with label9;
        catch java.security.GeneralSecurityException from label7 to label8 with label9;
    }

    public static java.lang.String b(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        java.lang.String[] $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        byte[] $r5, $r6, $r7;
        javax.crypto.SecretKey $r8;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = <com.speedsoftware.rootexplorer.bb: java.lang.String b>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>($r2);

        $i0 = lengthof $r3;

        if $i0 == 3 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid encypted text format");

        throw $r4;

     label1:
        $r1 = $r3[0];

        $r5 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, 2);

        $r1 = $r3[1];

        $r6 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, 2);

        $r1 = $r3[2];

        $r7 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, 2);

        $r8 = staticinvoke <com.speedsoftware.rootexplorer.bb: javax.crypto.SecretKey a(byte[],java.lang.String)>($r5, $r0);

        $r0 = staticinvoke <com.speedsoftware.rootexplorer.bb: java.lang.String a(byte[],javax.crypto.SecretKey,byte[])>($r7, $r8, $r6);

        return $r0;
    }
}
