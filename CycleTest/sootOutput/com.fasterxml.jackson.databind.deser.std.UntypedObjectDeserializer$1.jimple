class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1 extends java.lang.Object
{
    static final int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken;

    static void <clinit>()
    {
        com.fasterxml.jackson.core.JsonToken[] $r0;
        int $i0;
        int[] $r1;
        com.fasterxml.jackson.core.JsonToken $r2;
        java.lang.NoSuchFieldError $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        $r0 = staticinvoke <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken> = $r1;

     label01:
        $r1 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

     label02:
        $r1[$i0] = 1;

     label03:
        $r1 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

     label04:
        $r1[$i0] = 2;

     label05:
        $r1 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

     label06:
        $r1[$i0] = 3;

     label07:
        $r1 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

     label08:
        $r1[$i0] = 4;

     label09:
        $r1 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

     label10:
        $r1[$i0] = 5;

     label11:
        $r1 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

     label12:
        $r1[$i0] = 6;

     label13:
        $r1 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

     label14:
        $r1[$i0] = 7;

     label15:
        $r1 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

     label16:
        $r1[$i0] = 8;

     label17:
        $r1 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

     label18:
        $r1[$i0] = 9;

     label19:
        $r1 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

     label20:
        $r1[$i0] = 10;

     label21:
        $r1 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

     label22:
        $r1[$i0] = 11;

     label23:
        $r1 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

     label24:
        $r1[$i0] = 12;

        return;

     label25:
        $r3 := @caughtexception;

        return;

     label26:
        $r4 := @caughtexception;

        goto label23;

     label27:
        $r5 := @caughtexception;

        goto label21;

     label28:
        $r6 := @caughtexception;

        goto label19;

     label29:
        $r7 := @caughtexception;

        goto label17;

     label30:
        $r8 := @caughtexception;

        goto label15;

     label31:
        $r9 := @caughtexception;

        goto label13;

     label32:
        $r10 := @caughtexception;

        goto label11;

     label33:
        $r11 := @caughtexception;

        goto label09;

     label34:
        $r12 := @caughtexception;

        goto label07;

     label35:
        $r13 := @caughtexception;

        goto label05;

     label36:
        $r14 := @caughtexception;

        goto label03;

        catch java.lang.NoSuchFieldError from label01 to label02 with label36;
        catch java.lang.NoSuchFieldError from label03 to label04 with label35;
        catch java.lang.NoSuchFieldError from label05 to label06 with label34;
        catch java.lang.NoSuchFieldError from label07 to label08 with label33;
        catch java.lang.NoSuchFieldError from label09 to label10 with label32;
        catch java.lang.NoSuchFieldError from label11 to label12 with label31;
        catch java.lang.NoSuchFieldError from label13 to label14 with label30;
        catch java.lang.NoSuchFieldError from label15 to label16 with label29;
        catch java.lang.NoSuchFieldError from label17 to label18 with label28;
        catch java.lang.NoSuchFieldError from label19 to label20 with label27;
        catch java.lang.NoSuchFieldError from label21 to label22 with label26;
        catch java.lang.NoSuchFieldError from label23 to label24 with label25;
    }
}
