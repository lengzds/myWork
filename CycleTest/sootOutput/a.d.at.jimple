abstract class a.d.at extends a.d.u implements java.util.Enumeration
{
    protected int D;
    protected int E;
    protected int F;
    protected int G;
    protected int H;
    protected int I;
    protected int J;
    int K;
    byte L;
    boolean M;
    boolean N;
    byte[] O;
    int P;
    int Q;
    a.d.h[] R;
    private int S;
    private boolean T;
    private boolean U;
    private int a;
    protected int b;
    protected int c;
    protected int d;

    void <init>()
    {
        a.d.at $r0;

        $r0 := @this: a.d.at;

        specialinvoke $r0.<a.d.u: void <init>()>();

        $r0.<a.d.at: boolean M> = 1;

        $r0.<a.d.at: boolean N> = 1;

        $r0.<a.d.at: byte[] O> = null;

        return;
    }

    abstract int a(byte[], int);

    abstract int a(byte[], int, int);

    final void e()
    {
        a.d.at $r0;

        $r0 := @this: a.d.at;

        specialinvoke $r0.<a.d.u: void e()>();

        $r0.<a.d.at: int J> = 0;

        $r0.<a.d.at: boolean M> = 1;

        $r0.<a.d.at: boolean N> = 1;

        $r0.<a.d.at: boolean U> = 0;

        $r0.<a.d.at: boolean T> = 0;

        return;
    }

    public boolean hasMoreElements()
    {
        a.d.at $r0;
        int $i0;
        boolean $z0;

        $r0 := @this: a.d.at;

        $i0 = $r0.<a.d.at: int l>;

        if $i0 != 0 goto label1;

        $z0 = $r0.<a.d.at: boolean M>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    final int i(byte[], int)
    {
        a.d.at $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.at;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    final int j(byte[], int)
    {
        a.d.at $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.at;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    final int k(byte[], int)
    {
        a.d.at $r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        byte $b3;
        short $s4;
        a.e.e $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @this: a.d.at;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = staticinvoke <a.d.at: int d(byte[],int)>($r1, $i0);

        $r0.<a.d.at: int b> = $i1;

        $i1 = $r0.<a.d.at: int J>;

        if $i1 != 0 goto label1;

        $i1 = $r0.<a.d.at: int b>;

        $r0.<a.d.at: int J> = $i1;

     label1:
        $i1 = $i0 + 2;

        $i2 = staticinvoke <a.d.at: int d(byte[],int)>($r1, $i1);

        $r0.<a.d.at: int c> = $i2;

        $i1 = $i1 + 4;

        $i2 = staticinvoke <a.d.at: int d(byte[],int)>($r1, $i1);

        $r0.<a.d.at: int d> = $i2;

        $i1 = $i1 + 2;

        $i2 = staticinvoke <a.d.at: int d(byte[],int)>($r1, $i1);

        $r0.<a.d.at: int D> = $i2;

        $i1 = $i1 + 2;

        $i2 = staticinvoke <a.d.at: int d(byte[],int)>($r1, $i1);

        $r0.<a.d.at: int E> = $i2;

        $i1 = $i1 + 2;

        $i2 = staticinvoke <a.d.at: int d(byte[],int)>($r1, $i1);

        $r0.<a.d.at: int K> = $i2;

        $i1 = $i1 + 2;

        $i2 = staticinvoke <a.d.at: int d(byte[],int)>($r1, $i1);

        $r0.<a.d.at: int F> = $i2;

        $i1 = $i1 + 2;

        $i2 = staticinvoke <a.d.at: int d(byte[],int)>($r1, $i1);

        $r0.<a.d.at: int G> = $i2;

        $i1 = $i1 + 2;

        $b3 = $r1[$i1];

        $s4 = $b3 & 255;

        $r0.<a.d.at: int H> = $s4;

        $i1 = $i1 + 2;

        $i2 = $r0.<a.d.at: int H>;

        if $i2 == 0 goto label2;

        $r2 = <a.d.at: a.e.e e>;

        $i2 = <a.e.e: int a>;

        if $i2 <= 2 goto label2;

        $r2 = <a.d.at: a.e.e e>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("setupCount is not zero: ");

        $i2 = $r0.<a.d.at: int H>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<a.e.e: void println(java.lang.String)>($r4);

     label2:
        $i0 = $i1 - $i0;

        return $i0;
    }

    final int l(byte[], int)
    {
        a.d.at $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @this: a.d.at;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r0.<a.d.at: int S> = 0;

        $r0.<a.d.at: int a> = 0;

        $i1 = $r0.<a.d.at: int d>;

        if $i1 <= 0 goto label1;

        $i1 = $r0.<a.d.at: int D>;

        $i2 = $r0.<a.d.at: int i>;

        $i2 = $i0 - $i2;

        $i1 = $i1 - $i2;

        $r0.<a.d.at: int a> = $i1;

        $i0 = $i1 + $i0;

        $r2 = $r0.<a.d.at: byte[] O>;

        $i1 = $r0.<a.d.at: int I>;

        $i2 = $r0.<a.d.at: int E>;

        $i1 = $i1 + $i2;

        $i2 = $r0.<a.d.at: int d>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, $i1, $i2);

        $i1 = $r0.<a.d.at: int d>;

        $i0 = $i0 + $i1;

     label1:
        $i1 = $r0.<a.d.at: int K>;

        if $i1 <= 0 goto label2;

        $i1 = $r0.<a.d.at: int F>;

        $i2 = $r0.<a.d.at: int i>;

        $i2 = $i0 - $i2;

        $i1 = $i1 - $i2;

        $r0.<a.d.at: int S> = $i1;

        $i0 = $i1 + $i0;

        $r2 = $r0.<a.d.at: byte[] O>;

        $i1 = $r0.<a.d.at: int J>;

        $i2 = $r0.<a.d.at: int G>;

        $i1 = $i1 + $i2;

        $i2 = $r0.<a.d.at: int K>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, $i1, $i2);

     label2:
        $z0 = $r0.<a.d.at: boolean T>;

        if $z0 != 0 goto label3;

        $i0 = $r0.<a.d.at: int E>;

        $i1 = $r0.<a.d.at: int d>;

        $i0 = $i0 + $i1;

        $i1 = $r0.<a.d.at: int b>;

        if $i0 != $i1 goto label3;

        $r0.<a.d.at: boolean T> = 1;

     label3:
        $z0 = $r0.<a.d.at: boolean U>;

        if $z0 != 0 goto label4;

        $i0 = $r0.<a.d.at: int G>;

        $i1 = $r0.<a.d.at: int K>;

        $i0 = $i0 + $i1;

        $i1 = $r0.<a.d.at: int c>;

        if $i0 != $i1 goto label4;

        $r0.<a.d.at: boolean U> = 1;

     label4:
        $z0 = $r0.<a.d.at: boolean T>;

        if $z0 == 0 goto label5;

        $z0 = $r0.<a.d.at: boolean U>;

        if $z0 == 0 goto label5;

        $r0.<a.d.at: boolean M> = 0;

        $r1 = $r0.<a.d.at: byte[] O>;

        $i0 = $r0.<a.d.at: int I>;

        virtualinvoke $r0.<a.d.at: int a(byte[],int)>($r1, $i0);

        $r1 = $r0.<a.d.at: byte[] O>;

        $i0 = $r0.<a.d.at: int J>;

        $i1 = $r0.<a.d.at: int c>;

        virtualinvoke $r0.<a.d.at: int a(byte[],int,int)>($r1, $i0, $i1);

     label5:
        $i0 = $r0.<a.d.at: int a>;

        $i1 = $r0.<a.d.at: int d>;

        $i0 = $i0 + $i1;

        $i1 = $r0.<a.d.at: int S>;

        $i0 = $i0 + $i1;

        $i1 = $r0.<a.d.at: int K>;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public java.lang.Object nextElement()
    {
        a.d.at $r0;
        boolean $z0;

        $r0 := @this: a.d.at;

        $z0 = $r0.<a.d.at: boolean N>;

        if $z0 == 0 goto label1;

        $r0.<a.d.at: boolean N> = 0;

     label1:
        return $r0;
    }

    public java.lang.String toString()
    {
        a.d.at $r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder $r2;
        int $i0;

        $r0 := @this: a.d.at;

        $r1 = new java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke $r0.<a.d.u: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",totalParameterCount=");

        $i0 = $r0.<a.d.at: int b>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",totalDataCount=");

        $i0 = $r0.<a.d.at: int c>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",parameterCount=");

        $i0 = $r0.<a.d.at: int d>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",parameterOffset=");

        $i0 = $r0.<a.d.at: int D>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",parameterDisplacement=");

        $i0 = $r0.<a.d.at: int E>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dataCount=");

        $i0 = $r0.<a.d.at: int K>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dataOffset=");

        $i0 = $r0.<a.d.at: int F>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dataDisplacement=");

        $i0 = $r0.<a.d.at: int G>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",setupCount=");

        $i0 = $r0.<a.d.at: int H>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",pad=");

        $i0 = $r0.<a.d.at: int a>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",pad1=");

        $i0 = $r0.<a.d.at: int S>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>($r3);

        return $r1;
    }
}
