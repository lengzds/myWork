public abstract class com.fasterxml.jackson.databind.AbstractTypeResolver extends java.lang.Object
{

    public void <init>()
    {
        com.fasterxml.jackson.databind.AbstractTypeResolver $r0;

        $r0 := @this: com.fasterxml.jackson.databind.AbstractTypeResolver;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.fasterxml.jackson.databind.JavaType findTypeMapping(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.AbstractTypeResolver $r0;
        com.fasterxml.jackson.databind.DeserializationConfig $r1;
        com.fasterxml.jackson.databind.JavaType $r2;

        $r0 := @this: com.fasterxml.jackson.databind.AbstractTypeResolver;

        $r1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        return null;
    }

    public com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.AbstractTypeResolver $r0;
        com.fasterxml.jackson.databind.DeserializationConfig $r1;
        com.fasterxml.jackson.databind.JavaType $r2;

        $r0 := @this: com.fasterxml.jackson.databind.AbstractTypeResolver;

        $r1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        return null;
    }
}
