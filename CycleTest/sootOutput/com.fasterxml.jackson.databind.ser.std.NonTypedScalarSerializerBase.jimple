public abstract class com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer
{

    protected void <init>(java.lang.Class)
    {
        com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase $r0;
        java.lang.Class $r1;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class)>($r1);

        return;
    }

    public final void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase $r0;
        java.lang.Object $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

        return;
    }
}
