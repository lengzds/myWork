final class a.d.ay extends a.d.b
{
    private static final int c;
    private static final int d;
    private int D;
    private int E;
    private int F;
    private int G;
    private int H;
    private byte[] I;
    private long J;
    private int K;
    int b;

    static void <clinit>()
    {
        int $i0;

        $i0 = staticinvoke <a.a: int a(java.lang.String,int)>("jcifs.smb.client.WriteAndX.ReadAndX", 1);

        <a.d.ay: int c> = $i0;

        $i0 = staticinvoke <a.a: int a(java.lang.String,int)>("jcifs.smb.client.WriteAndX.Close", 1);

        <a.d.ay: int d> = $i0;

        return;
    }

    void <init>()
    {
        a.d.ay $r0;

        $r0 := @this: a.d.ay;

        specialinvoke $r0.<a.d.b: void <init>(a.d.u)>(null);

        $r0.<a.d.ay: byte g> = 47;

        return;
    }

    final int a(byte)
    {
        a.d.ay $r0;
        byte $b0;
        int i1;

        $r0 := @this: a.d.ay;

        $b0 := @parameter0: byte;

        if $b0 != 46 goto label1;

        i1 = <a.d.ay: int c>;

        return i1;

     label1:
        if $b0 != 4 goto label2;

        i1 = <a.d.ay: int d>;

        return i1;

     label2:
        return 0;
    }

    final void a(int, long, int, byte[], int, int)
    {
        a.d.ay $r0;
        int $i0, $i2, $i3, $i4;
        long $l1;
        byte[] $r1;

        $r0 := @this: a.d.ay;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i2 := @parameter2: int;

        $r1 := @parameter3: byte[];

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $r0.<a.d.ay: int D> = $i0;

        $r0.<a.d.ay: long J> = $l1;

        $r0.<a.d.ay: int E> = $i2;

        $r0.<a.d.ay: byte[] I> = $r1;

        $r0.<a.d.ay: int H> = $i3;

        $r0.<a.d.ay: int F> = $i4;

        $r0.<a.d.ay: a.d.v B> = null;

        return;
    }

    final int i(byte[], int)
    {
        a.d.ay $r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        long $l3;

        $r0 := @this: a.d.ay;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = $r0.<a.d.ay: int i>;

        $i1 = $i0 - $i1;

        $i1 = $i1 + 26;

        $r0.<a.d.ay: int G> = $i1;

        $i1 = $r0.<a.d.ay: int G>;

        $i2 = $r0.<a.d.ay: int i>;

        $i1 = $i1 - $i2;

        $i1 = $i1 % 4;

        $r0.<a.d.ay: int K> = $i1;

        $i1 = $r0.<a.d.ay: int K>;

        if $i1 != 0 goto label3;

        $i1 = 0;

     label1:
        $r0.<a.d.ay: int K> = $i1;

        $i1 = $r0.<a.d.ay: int G>;

        $i2 = $r0.<a.d.ay: int K>;

        $i1 = $i1 + $i2;

        $r0.<a.d.ay: int G> = $i1;

        $i1 = $r0.<a.d.ay: int D>;

        $l3 = (long) $i1;

        staticinvoke <a.d.ay: void a(long,byte[],int)>($l3, $r1, $i0);

        $i1 = $i0 + 2;

        $l3 = $r0.<a.d.ay: long J>;

        staticinvoke <a.d.ay: void b(long,byte[],int)>($l3, $r1, $i1);

        $i1 = $i1 + 4;

        $i2 = 0;

     label2:
        if $i2 >= 4 goto label4;

        $r1[$i1] = -1;

        $i2 = $i2 + 1;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $i1 = $r0.<a.d.ay: int K>;

        $i1 = 4 - $i1;

        goto label1;

     label4:
        $i2 = $r0.<a.d.ay: int b>;

        $l3 = (long) $i2;

        staticinvoke <a.d.ay: void a(long,byte[],int)>($l3, $r1, $i1);

        $i1 = $i1 + 2;

        $i2 = $r0.<a.d.ay: int E>;

        $l3 = (long) $i2;

        staticinvoke <a.d.ay: void a(long,byte[],int)>($l3, $r1, $i1);

        $i2 = $i1 + 2;

        $i1 = $i2 + 1;

        $r1[$i2] = 0;

        $i2 = $i1 + 1;

        $r1[$i1] = 0;

        $i1 = $r0.<a.d.ay: int F>;

        $l3 = (long) $i1;

        staticinvoke <a.d.ay: void a(long,byte[],int)>($l3, $r1, $i2);

        $i1 = $i2 + 2;

        $i2 = $r0.<a.d.ay: int G>;

        $l3 = (long) $i2;

        staticinvoke <a.d.ay: void a(long,byte[],int)>($l3, $r1, $i1);

        $i1 = $i1 + 2;

        $l3 = $r0.<a.d.ay: long J>;

        $l3 = $l3 >> 32;

        staticinvoke <a.d.ay: void b(long,byte[],int)>($l3, $r1, $i1);

        $i1 = $i1 + 4;

        $i0 = $i1 - $i0;

        return $i0;
    }

    final int j(byte[], int)
    {
        a.d.ay $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: a.d.ay;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i2 = $i0;

     label1:
        $i1 = $r0.<a.d.ay: int K>;

        $i3 = $i1 + -1;

        $r0.<a.d.ay: int K> = $i3;

        if $i1 <= 0 goto label2;

        $r1[$i2] = -18;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r2 = $r0.<a.d.ay: byte[] I>;

        $i3 = $r0.<a.d.ay: int H>;

        $i1 = $r0.<a.d.ay: int F>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, $r1, $i2, $i1);

        $i1 = $r0.<a.d.ay: int F>;

        $i2 = $i2 + $i1;

        $i0 = $i2 - $i0;

        return $i0;
    }

    final int k(byte[], int)
    {
        a.d.ay $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.ay;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    final int l(byte[], int)
    {
        a.d.ay $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.ay;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    public final java.lang.String toString()
    {
        a.d.ay $r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder $r2;
        int $i0;
        long $l1;

        $r0 := @this: a.d.ay;

        $r1 = new java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("SmbComWriteAndX[");

        $r3 = specialinvoke $r0.<a.d.b: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",fid=");

        $i0 = $r0.<a.d.ay: int D>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",offset=");

        $l1 = $r0.<a.d.ay: long J>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",writeMode=");

        $i0 = $r0.<a.d.ay: int b>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",remaining=");

        $i0 = $r0.<a.d.ay: int E>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dataLength=");

        $i0 = $r0.<a.d.ay: int F>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dataOffset=");

        $i0 = $r0.<a.d.ay: int G>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>($r3);

        return $r1;
    }
}
