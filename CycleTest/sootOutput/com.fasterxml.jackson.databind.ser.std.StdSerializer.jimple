public abstract class com.fasterxml.jackson.databind.ser.std.StdSerializer extends com.fasterxml.jackson.databind.JsonSerializer
{
    protected final java.lang.Class _handledType;

    protected void <init>(com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.ser.std.StdSerializer $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        java.lang.Class $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.StdSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        specialinvoke $r0.<com.fasterxml.jackson.databind.JsonSerializer: void <init>()>();

        $r2 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: java.lang.Class _handledType> = $r2;

        return;
    }

    protected void <init>(java.lang.Class)
    {
        com.fasterxml.jackson.databind.ser.std.StdSerializer $r0;
        java.lang.Class $r1;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.StdSerializer;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke $r0.<com.fasterxml.jackson.databind.JsonSerializer: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: java.lang.Class _handledType> = $r1;

        return;
    }

    protected void <init>(java.lang.Class, boolean)
    {
        com.fasterxml.jackson.databind.ser.std.StdSerializer $r0;
        java.lang.Class $r1;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.StdSerializer;

        $r1 := @parameter0: java.lang.Class;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<com.fasterxml.jackson.databind.JsonSerializer: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: java.lang.Class _handledType> = $r1;

        return;
    }

    public final java.lang.Class handledType()
    {
        com.fasterxml.jackson.databind.ser.std.StdSerializer $r0;
        java.lang.Class r1;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.StdSerializer;

        r1 = $r0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: java.lang.Class _handledType>;

        return r1;
    }

    protected boolean isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.StdSerializer $r0;
        com.fasterxml.jackson.databind.JsonSerializer $r1;
        java.lang.Class $r2;
        java.lang.'annotation'.Annotation $r3;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.StdSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "com/fasterxml/jackson/databind/annotation/JacksonStdImpl");

        if $r3 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public abstract void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider);

    public void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Throwable, java.lang.Object, int)
    {
        com.fasterxml.jackson.databind.ser.std.StdSerializer $r0;
        com.fasterxml.jackson.databind.SerializerProvider $r1;
        java.lang.Throwable $r2, $r4;
        java.lang.Object $r3;
        int $i0;
        boolean $z0, $z1;
        java.lang.Error $r5;
        com.fasterxml.jackson.databind.SerializationFeature $r6;
        java.io.IOException $r7;
        java.lang.RuntimeException $r8;
        com.fasterxml.jackson.databind.JsonMappingException $r9;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.StdSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 := @parameter2: java.lang.Object;

        $i0 := @parameter3: int;

     label1:
        $z0 = $r2 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r4 == null goto label2;

        $r2 = virtualinvoke $r2.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label2:
        $z0 = $r2 instanceof java.lang.Error;

        if $z0 == 0 goto label3;

        $r5 = (java.lang.Error) $r2;

        throw $r5;

     label3:
        if $r1 == null goto label4;

        $r6 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRAP_EXCEPTIONS>;

        $z0 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r6);

        if $z0 == 0 goto label7;

     label4:
        $z1 = 1;

     label5:
        $z0 = $r2 instanceof java.io.IOException;

        if $z0 == 0 goto label8;

        if $z1 == 0 goto label6;

        $z0 = $r2 instanceof com.fasterxml.jackson.databind.JsonMappingException;

        if $z0 != 0 goto label9;

     label6:
        $r7 = (java.io.IOException) $r2;

        throw $r7;

     label7:
        $z1 = 0;

        goto label5;

     label8:
        if $z1 != 0 goto label9;

        $z0 = $r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label9;

        $r8 = (java.lang.RuntimeException) $r2;

        throw $r8;

     label9:
        $r9 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int)>($r2, $r3, $i0);

        throw $r9;
    }

    public void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Throwable, java.lang.Object, java.lang.String)
    {
        com.fasterxml.jackson.databind.ser.std.StdSerializer $r0;
        com.fasterxml.jackson.databind.SerializerProvider $r1;
        java.lang.Throwable $r2, $r5;
        java.lang.Object $r3;
        java.lang.String $r4;
        boolean $z0, $z1;
        java.lang.Error $r6;
        com.fasterxml.jackson.databind.SerializationFeature $r7;
        java.io.IOException $r8;
        java.lang.RuntimeException $r9;
        com.fasterxml.jackson.databind.JsonMappingException $r10;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.StdSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 := @parameter2: java.lang.Object;

        $r4 := @parameter3: java.lang.String;

     label1:
        $z0 = $r2 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r2.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r5 == null goto label2;

        $r2 = virtualinvoke $r2.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label2:
        $z0 = $r2 instanceof java.lang.Error;

        if $z0 == 0 goto label3;

        $r6 = (java.lang.Error) $r2;

        throw $r6;

     label3:
        if $r1 == null goto label4;

        $r7 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRAP_EXCEPTIONS>;

        $z0 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r7);

        if $z0 == 0 goto label7;

     label4:
        $z1 = 1;

     label5:
        $z0 = $r2 instanceof java.io.IOException;

        if $z0 == 0 goto label8;

        if $z1 == 0 goto label6;

        $z0 = $r2 instanceof com.fasterxml.jackson.databind.JsonMappingException;

        if $z0 != 0 goto label9;

     label6:
        $r8 = (java.io.IOException) $r2;

        throw $r8;

     label7:
        $z1 = 0;

        goto label5;

     label8:
        if $z1 != 0 goto label9;

        $z0 = $r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label9;

        $r9 = (java.lang.RuntimeException) $r2;

        throw $r9;

     label9:
        $r10 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)>($r2, $r3, $r4);

        throw $r10;
    }
}
