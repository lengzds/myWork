public class com.fasterxml.jackson.databind.deser.std.MapDeserializer extends com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase implements com.fasterxml.jackson.databind.deser.ContextualDeserializer, com.fasterxml.jackson.databind.deser.ResolvableDeserializer
{
    protected com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer;
    protected final boolean _hasDefaultCreator;
    protected java.util.HashSet _ignorableProperties;
    protected final com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer;
    protected final com.fasterxml.jackson.databind.JavaType _mapType;
    protected com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator;
    protected boolean _standardStringKey;
    protected final com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer;
    protected final com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator;
    protected final com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer;

    public void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.deser.ValueInstantiator, com.fasterxml.jackson.databind.KeyDeserializer, com.fasterxml.jackson.databind.JsonDeserializer, com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r2;
        com.fasterxml.jackson.databind.KeyDeserializer $r3;
        com.fasterxml.jackson.databind.JsonDeserializer $r4;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r5;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: com.fasterxml.jackson.databind.deser.ValueInstantiator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.KeyDeserializer;

        $r4 := @parameter3: com.fasterxml.jackson.databind.JsonDeserializer;

        $r5 := @parameter4: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(java.lang.Class)>(class "java/util/Map");

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _mapType> = $r1;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer> = $r3;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer> = $r4;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer> = $r5;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator> = $r2;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateUsingDefault()>();

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _hasDefaultCreator> = $z0;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer> = null;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator> = null;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)>($r1, $r3);

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _standardStringKey> = $z0;

        return;
    }

    protected void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer, com.fasterxml.jackson.databind.KeyDeserializer, com.fasterxml.jackson.databind.JsonDeserializer, com.fasterxml.jackson.databind.jsontype.TypeDeserializer, java.util.HashSet)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0, $r1;
        com.fasterxml.jackson.databind.KeyDeserializer $r2;
        com.fasterxml.jackson.databind.JsonDeserializer $r3;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r4;
        java.util.HashSet $r5;
        boolean $z0;
        java.lang.Class $r6;
        com.fasterxml.jackson.databind.JavaType $r7;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r8;
        com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator $r9;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r2 := @parameter1: com.fasterxml.jackson.databind.KeyDeserializer;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;

        $r4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        $r5 := @parameter4: java.util.HashSet;

        $r6 = $r1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Class _valueClass>;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(java.lang.Class)>($r6);

        $r7 = $r1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _mapType>;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _mapType> = $r7;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer> = $r2;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer> = $r3;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer> = $r4;

        $r8 = $r1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator> = $r8;

        $r9 = $r1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator> = $r9;

        $r3 = $r1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer> = $r3;

        $z0 = $r1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _hasDefaultCreator>;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _hasDefaultCreator> = $z0;

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties> = $r5;

        $r7 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _mapType>;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)>($r7, $r2);

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _standardStringKey> = $z0;

        return;
    }

    public java.util.Map _deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r3;
        com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator $r4;
        com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer $r5;
        com.fasterxml.jackson.core.JsonToken $r6, $r7, $r8;
        com.fasterxml.jackson.databind.JsonDeserializer $r9;
        java.lang.String $r10;
        java.util.HashSet $r11;
        boolean $z0;
        com.fasterxml.jackson.databind.deser.SettableBeanProperty $r12;
        java.lang.Object $r13, $r19;
        int $i0;
        java.util.Map $r14;
        java.lang.Exception $r15, $r20;
        com.fasterxml.jackson.databind.JavaType $r16;
        java.lang.Class $r17;
        com.fasterxml.jackson.databind.KeyDeserializer $r18;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r7 = $r6;

        $r8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r6 != $r8 goto label01;

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

     label01:
        $r9 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;

     label02:
        $r6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r7 != $r6 goto label12;

        $r10 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r11 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties>;

        if $r11 == null goto label04;

        $r11 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties>;

        $z0 = virtualinvoke $r11.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        if $z0 == 0 goto label04;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

     label03:
        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label02;

     label04:
        $r12 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.SettableBeanProperty findCreatorProperty(java.lang.String)>($r10);

        if $r12 == null goto label08;

        $r13 = virtualinvoke $r12.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $i0 = virtualinvoke $r12.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: int getPropertyIndex()>();

        $z0 = virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: boolean assignParameter(int,java.lang.Object)>($i0, $r13);

        if $z0 == 0 goto label03;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

     label05:
        $r13 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)>($r2, $r5);

        $r14 = (java.util.Map) $r13;

     label06:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void _readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>($r1, $r2, $r14);

        return $r14;

     label07:
        $r15 := @caughtexception;

        $r16 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _mapType>;

        $r17 = virtualinvoke $r16.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object)>($r15, $r17);

        return null;

     label08:
        $r10 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        $r18 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;

        $r13 = virtualinvoke $r18.<com.fasterxml.jackson.databind.KeyDeserializer: java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r10, $r2);

        $r6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        if $r7 != $r6 goto label10;

        $r19 = null;

     label09:
        virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: void bufferMapProperty(java.lang.Object,java.lang.Object)>($r13, $r19);

        goto label03;

     label10:
        if $r3 != null goto label11;

        $r19 = virtualinvoke $r9.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        goto label09;

     label11:
        $r19 = virtualinvoke $r9.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>($r1, $r2, $r3);

        goto label09;

     label12:
        $r13 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)>($r2, $r5);

        $r14 = (java.util.Map) $r13;

     label13:
        return $r14;

     label14:
        $r20 := @caughtexception;

        $r16 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _mapType>;

        $r17 = virtualinvoke $r16.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object)>($r20, $r17);

        return null;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    protected final boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.KeyDeserializer)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.KeyDeserializer $r2;
        java.lang.Class $r3;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: com.fasterxml.jackson.databind.KeyDeserializer;

        if $r2 != null goto label1;

        return 1;

     label1:
        $r1 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getKeyType()>();

        if $r1 == null goto label4;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        if $r3 == class "java/lang/String" goto label2;

        if $r3 != class "java/lang/Object" goto label3;

     label2:
        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)>($r2);

        if $z0 != 0 goto label4;

     label3:
        return 0;

     label4:
        return 1;
    }

    protected final void _readAndBind(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.util.Map)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.util.Map $r3;
        com.fasterxml.jackson.databind.JsonDeserializer $r4;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r5;
        com.fasterxml.jackson.core.JsonToken $r6, $r7, $r8;
        com.fasterxml.jackson.databind.KeyDeserializer $r9;
        java.lang.String $r10;
        java.lang.Object $r11, $r13;
        java.util.HashSet $r12;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: java.util.Map;

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r7 = $r6;

        $r8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r6 != $r8 goto label1;

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

     label1:
        $r9 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;

        $r5 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;

     label2:
        $r6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r7 != $r6 goto label8;

        $r10 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        $r11 = virtualinvoke $r9.<com.fasterxml.jackson.databind.KeyDeserializer: java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r10, $r2);

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r12 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties>;

        if $r12 == null goto label4;

        $r12 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties>;

        $z0 = virtualinvoke $r12.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        if $z0 == 0 goto label4;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

     label3:
        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label2;

     label4:
        $r6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        if $r7 != $r6 goto label6;

        $r13 = null;

     label5:
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r13);

        goto label3;

     label6:
        if $r5 != null goto label7;

        $r13 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        goto label5;

     label7:
        $r13 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>($r1, $r2, $r5);

        goto label5;

     label8:
        return;
    }

    protected final void _readAndBindStringMap(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.util.Map)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.util.Map $r3;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r4;
        com.fasterxml.jackson.core.JsonToken $r5, $r6, $r7;
        com.fasterxml.jackson.databind.JsonDeserializer $r8;
        java.lang.String $r9;
        java.util.HashSet $r10;
        boolean $z0;
        java.lang.Object $r11;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: java.util.Map;

        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r6 = $r5;

        $r7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r5 != $r7 goto label1;

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

     label1:
        $r8 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;

     label2:
        $r5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r6 != $r5 goto label8;

        $r9 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r10 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties>;

        if $r10 == null goto label4;

        $r10 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties>;

        $z0 = virtualinvoke $r10.<java.util.HashSet: boolean contains(java.lang.Object)>($r9);

        if $z0 == 0 goto label4;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

     label3:
        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label2;

     label4:
        $r5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        if $r6 != $r5 goto label6;

        $r11 = null;

     label5:
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11);

        goto label3;

     label6:
        if $r4 != null goto label7;

        $r11 = virtualinvoke $r8.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        goto label5;

     label7:
        $r11 = virtualinvoke $r8.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>($r1, $r2, $r4);

        goto label5;

     label8:
        return;
    }

    public com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        com.fasterxml.jackson.databind.DeserializationContext $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        int $i0, $i1;
        java.lang.String $r3;
        com.fasterxml.jackson.databind.KeyDeserializer $r4;
        com.fasterxml.jackson.databind.JavaType $r5;
        com.fasterxml.jackson.databind.JsonDeserializer $r6;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r7;
        java.util.HashSet $r8, $r12;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r9;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r10;
        java.lang.String[] $r11;
        boolean $z0;
        com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer $r13;
        com.fasterxml.jackson.databind.deser.ContextualDeserializer $r14;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;

        if $r4 != null goto label06;

        $r5 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _mapType>;

        $r5 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getKeyType()>();

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r5, $r2);

     label01:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;

        if $r6 != null goto label07;

        $r5 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _mapType>;

        $r5 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r5, $r2);

     label02:
        $r7 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;

        if $r7 == null goto label03;

        $r7 = virtualinvoke $r7.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty)>($r2);

     label03:
        $r8 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties>;

        $r9 = virtualinvoke $r1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        if $r9 == null goto label09;

        if $r2 == null goto label09;

        $r10 = interfaceinvoke $r2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();

        $r11 = virtualinvoke $r9.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)>($r10);

        if $r11 == null goto label09;

        if $r8 != null goto label08;

        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

     label04:
        $i0 = lengthof $r11;

        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label10;

        $r3 = $r11[$i1];

        virtualinvoke $r12.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label05;

     label06:
        $z0 = $r4 instanceof com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer;

        if $z0 == 0 goto label11;

        $r13 = (com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer) $r4;

        $r4 = interfaceinvoke $r13.<com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer: com.fasterxml.jackson.databind.KeyDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        goto label01;

     label07:
        $z0 = $r6 instanceof com.fasterxml.jackson.databind.deser.ContextualDeserializer;

        if $z0 == 0 goto label02;

        $r14 = (com.fasterxml.jackson.databind.deser.ContextualDeserializer) $r6;

        $r6 = interfaceinvoke $r14.<com.fasterxml.jackson.databind.deser.ContextualDeserializer: com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        goto label02;

     label08:
        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>(java.util.Collection)>($r8);

        goto label04;

     label09:
        $r12 = $r8;

     label10:
        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,java.util.HashSet)>($r4, $r7, $r6, $r12);

        return $r0;

     label11:
        goto label01;
    }

    public volatile java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.util.Map $r3;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r3;
    }

    public volatile java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.util.Map $r3;
        java.lang.Object $r4;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r4 := @parameter2: java.lang.Object;

        $r3 = (java.util.Map) $r4;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>($r1, $r2, $r3);

        return $r3;
    }

    public java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator $r3;
        java.util.Map $r4;
        com.fasterxml.jackson.databind.JsonDeserializer $r5;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r6;
        java.lang.Object $r7;
        boolean $z0;
        java.lang.Class $r8;
        com.fasterxml.jackson.databind.JsonMappingException $r9;
        com.fasterxml.jackson.core.JsonToken $r10, $r11;
        java.lang.String $r12;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Map _deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r4;

     label1:
        $r5 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        if $r5 == null goto label2;

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r5 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        $r7 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r7 = virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r7);

        $r4 = (java.util.Map) $r7;

        return $r4;

     label2:
        $z0 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _hasDefaultCreator>;

        if $z0 != 0 goto label3;

        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Class getMapClass()>();

        $r9 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.String)>($r8, "No default constructor found");

        throw $r9;

     label3:
        $r10 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r10 == $r11 goto label5;

        $r11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r10 == $r11 goto label5;

        $r11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if $r10 == $r11 goto label5;

        $r11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r10 != $r11 goto label4;

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r12 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        $r7 = virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>($r2, $r12);

        $r4 = (java.util.Map) $r7;

        return $r4;

     label4:
        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Class getMapClass()>();

        $r9 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class)>($r8);

        throw $r9;

     label5:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r7 = virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)>($r2);

        $r4 = (java.util.Map) $r7;

        $z0 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _standardStringKey>;

        if $z0 == 0 goto label6;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void _readAndBindStringMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>($r1, $r2, $r4);

        return $r4;

     label6:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void _readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>($r1, $r2, $r4);

        return $r4;
    }

    public java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.util.Map)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.util.Map $r3;
        com.fasterxml.jackson.core.JsonToken $r4, $r5;
        java.lang.Class $r6;
        com.fasterxml.jackson.databind.JsonMappingException $r7;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: java.util.Map;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r4 == $r5 goto label1;

        $r5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r4 == $r5 goto label1;

        $r6 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Class getMapClass()>();

        $r7 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class)>($r6);

        throw $r7;

     label1:
        $z0 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _standardStringKey>;

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void _readAndBindStringMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>($r1, $r2, $r3);

        return $r3;

     label2:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void _readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>($r1, $r2, $r3);

        return $r3;
    }

    public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r3;
        java.lang.Object $r4;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r4;
    }

    public com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer()
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        com.fasterxml.jackson.databind.JsonDeserializer r1;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        r1 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;

        return r1;
    }

    public final java.lang.Class getMapClass()
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        java.lang.Class $r1;
        com.fasterxml.jackson.databind.JavaType $r2;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r2 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _mapType>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        return $r1;
    }

    public void resolve(com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        com.fasterxml.jackson.databind.DeserializationContext $r1;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r2;
        boolean $z0;
        com.fasterxml.jackson.databind.DeserializationConfig $r3;
        com.fasterxml.jackson.databind.JavaType $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.Class $r7;
        java.lang.String $r8;
        com.fasterxml.jackson.databind.JsonDeserializer $r9;
        com.fasterxml.jackson.databind.deser.SettableBeanProperty[] $r10;
        com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator $r11;
        com.fasterxml.jackson.databind.KeyDeserializer $r12;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateUsingDelegate()>();

        if $z0 == 0 goto label2;

        $r2 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();

        $r4 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.ValueInstantiator: com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig)>($r3);

        if $r4 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid delegate-creator definition for ");

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _mapType>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": value instantiator (");

        $r2 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r7 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") returned true for \'canCreateUsingDelegate()\', but null for \'getDelegateType()\'");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r5;

     label1:
        $r9 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r4, null);

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer> = $r9;

     label2:
        $r2 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromObjectWith()>();

        if $z0 == 0 goto label3;

        $r2 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();

        $r10 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.ValueInstantiator: com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)>($r3);

        $r2 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r11 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[])>($r1, $r2, $r10);

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator> = $r11;

     label3:
        $r4 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _mapType>;

        $r12 = $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)>($r4, $r12);

        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _standardStringKey> = $z0;

        return;
    }

    public void setIgnorableProperties(java.lang.String[])
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        java.lang.String[] $r1;
        java.util.HashSet $r2;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: java.lang.String[];

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label3;

     label1:
        $r2 = null;

     label2:
        $r0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties> = $r2;

        return;

     label3:
        $r2 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.util.HashSet arrayToSet(java.lang.Object[])>($r1);

        goto label2;
    }

    protected com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer, com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.JsonDeserializer, java.util.HashSet)
    {
        com.fasterxml.jackson.databind.KeyDeserializer $r0, $r5;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r1, $r7;
        com.fasterxml.jackson.databind.JsonDeserializer $r2, $r6;
        java.util.HashSet $r3, $r8;
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r4, $r9;

        $r4 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r0 := @parameter0: com.fasterxml.jackson.databind.KeyDeserializer;

        $r1 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        $r2 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;

        $r3 := @parameter3: java.util.HashSet;

        $r5 = $r4.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;

        if $r5 != $r0 goto label1;

        $r6 = $r4.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;

        if $r6 != $r2 goto label1;

        $r7 = $r4.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;

        if $r7 != $r1 goto label1;

        $r8 = $r4.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties>;

        if $r8 != $r3 goto label1;

        return $r4;

     label1:
        $r9 = new com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        specialinvoke $r9.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,java.util.HashSet)>($r4, $r0, $r2, $r1, $r3);

        return $r9;
    }

    protected void wrapAndThrow(java.lang.Throwable, java.lang.Object)
    {
        com.fasterxml.jackson.databind.deser.std.MapDeserializer $r0;
        java.lang.Throwable $r1, $r3;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.Error $r4;
        java.io.IOException $r5;
        com.fasterxml.jackson.databind.JsonMappingException $r6;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.Object;

     label1:
        $z0 = $r1 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r1.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r3 == null goto label2;

        $r1 = virtualinvoke $r1.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label2:
        $z0 = $r1 instanceof java.lang.Error;

        if $z0 == 0 goto label3;

        $r4 = (java.lang.Error) $r1;

        throw $r4;

     label3:
        $z0 = $r1 instanceof java.io.IOException;

        if $z0 == 0 goto label4;

        $z0 = $r1 instanceof com.fasterxml.jackson.databind.JsonMappingException;

        if $z0 != 0 goto label4;

        $r5 = (java.io.IOException) $r1;

        throw $r5;

     label4:
        $r6 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)>($r1, $r2, null);

        throw $r6;
    }
}
