public final class com.speedsoftware.a.as extends com.speedsoftware.a.ac
{

    public void <init>(byte[])
    {
        com.speedsoftware.a.as $r0;
        byte[] $r1;

        $r0 := @this: com.speedsoftware.a.as;

        $r1 := @parameter0: byte[];

        specialinvoke $r0.<com.speedsoftware.a.ac: void <init>(byte[])>($r1);

        return;
    }

    public static void a(com.speedsoftware.a.as, com.speedsoftware.a.as)
    {
        com.speedsoftware.a.as $r0, $r1;
        byte[] $r2, $r3;
        byte $b0, $b4;
        int $i1, $i2, $i3;

        $r0 := @parameter0: com.speedsoftware.a.as;

        $r1 := @parameter1: com.speedsoftware.a.as;

        $r2 = $r0.<com.speedsoftware.a.as: byte[] c>;

        $r3 = $r1.<com.speedsoftware.a.as: byte[] c>;

        $i1 = 0;

        $i2 = $r0.<com.speedsoftware.a.as: int d>;

        $i3 = $r1.<com.speedsoftware.a.as: int d>;

     label1:
        if $i1 < 6 goto label2;

        return;

     label2:
        $b4 = $r2[$i2];

        $b0 = $r3[$i3];

        $r2[$i2] = $b0;

        $r3[$i3] = $b4;

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        $i3 = $i3 + 1;

        goto label1;
    }

    public final int a()
    {
        com.speedsoftware.a.as $r0;
        int $i0;
        byte[] $r1;
        byte $b1;
        short $s2;

        $r0 := @this: com.speedsoftware.a.as;

        $r1 = $r0.<com.speedsoftware.a.as: byte[] c>;

        $i0 = $r0.<com.speedsoftware.a.as: int d>;

        $b1 = $r1[$i0];

        $s2 = $b1 & 255;

        return $s2;
    }

    public final com.speedsoftware.a.as a(byte[])
    {
        com.speedsoftware.a.as $r0;
        byte[] $r1;

        $r0 := @this: com.speedsoftware.a.as;

        $r1 := @parameter0: byte[];

        $r0.<com.speedsoftware.a.as: byte[] c> = $r1;

        $r0.<com.speedsoftware.a.as: int d> = 0;

        return $r0;
    }

    public final void a(int)
    {
        com.speedsoftware.a.as $r0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2;

        $r0 := @this: com.speedsoftware.a.as;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.speedsoftware.a.as: byte[] c>;

        $i1 = $r0.<com.speedsoftware.a.as: int d>;

        $b2 = (byte) $i0;

        $r1[$i1] = $b2;

        return;
    }

    public final void a(com.speedsoftware.a.ab)
    {
        com.speedsoftware.a.as $r0;
        com.speedsoftware.a.ab $r1;
        int $i0;

        $r0 := @this: com.speedsoftware.a.as;

        $r1 := @parameter0: com.speedsoftware.a.ab;

        $i0 = virtualinvoke $r1.<com.speedsoftware.a.ab: int e()>();

        virtualinvoke $r0.<com.speedsoftware.a.as: void e(int)>($i0);

        return;
    }

    public final void a(com.speedsoftware.a.as)
    {
        com.speedsoftware.a.as $r0, $r1;
        byte[] $r2, $r3;
        int $i0, $i1;

        $r0 := @this: com.speedsoftware.a.as;

        $r1 := @parameter0: com.speedsoftware.a.as;

        $r2 = $r1.<com.speedsoftware.a.as: byte[] c>;

        $i0 = $r1.<com.speedsoftware.a.as: int d>;

        $r3 = $r0.<com.speedsoftware.a.as: byte[] c>;

        $i1 = $r0.<com.speedsoftware.a.as: int d>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r3, $i1, 6);

        return;
    }

    public final void a(com.speedsoftware.a.at)
    {
        com.speedsoftware.a.as $r0;
        com.speedsoftware.a.at $r1;
        int $i0;

        $r0 := @this: com.speedsoftware.a.as;

        $r1 := @parameter0: com.speedsoftware.a.at;

        $i0 = virtualinvoke $r1.<com.speedsoftware.a.at: int a()>();

        virtualinvoke $r0.<com.speedsoftware.a.as: void a(int)>($i0);

        $i0 = virtualinvoke $r1.<com.speedsoftware.a.at: int b()>();

        virtualinvoke $r0.<com.speedsoftware.a.as: void b(int)>($i0);

        $i0 = virtualinvoke $r1.<com.speedsoftware.a.at: int c()>();

        virtualinvoke $r0.<com.speedsoftware.a.as: void e(int)>($i0);

        return;
    }

    public final int b()
    {
        com.speedsoftware.a.as $r0;
        byte[] $r1;
        int $i0;
        byte $b1;
        short $s2;

        $r0 := @this: com.speedsoftware.a.as;

        $r1 = $r0.<com.speedsoftware.a.as: byte[] c>;

        $i0 = $r0.<com.speedsoftware.a.as: int d>;

        $i0 = $i0 + 1;

        $b1 = $r1[$i0];

        $s2 = $b1 & 255;

        return $s2;
    }

    public final void b(int)
    {
        com.speedsoftware.a.as $r0;
        int $i0, $i2;
        byte[] $r1;
        byte $b1;

        $r0 := @this: com.speedsoftware.a.as;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.speedsoftware.a.as: byte[] c>;

        $i2 = $r0.<com.speedsoftware.a.as: int d>;

        $i2 = $i2 + 1;

        $b1 = (byte) $i0;

        $r1[$i2] = $b1;

        return;
    }

    public final int c()
    {
        com.speedsoftware.a.as $r0;
        int $i0;
        byte[] $r1;

        $r0 := @this: com.speedsoftware.a.as;

        $r1 = $r0.<com.speedsoftware.a.as: byte[] c>;

        $i0 = $r0.<com.speedsoftware.a.as: int d>;

        $i0 = $i0 + 2;

        $i0 = staticinvoke <com.speedsoftware.a.am: int b(byte[],int)>($r1, $i0);

        return $i0;
    }

    public final com.speedsoftware.a.as d()
    {
        com.speedsoftware.a.as $r0;
        int $i0;

        $r0 := @this: com.speedsoftware.a.as;

        $i0 = $r0.<com.speedsoftware.a.as: int d>;

        $i0 = $i0 + -6;

        virtualinvoke $r0.<com.speedsoftware.a.as: void c(int)>($i0);

        return $r0;
    }

    public final void d(int)
    {
        com.speedsoftware.a.as $r0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2;

        $r0 := @this: com.speedsoftware.a.as;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.speedsoftware.a.as: byte[] c>;

        $i1 = $r0.<com.speedsoftware.a.as: int d>;

        $i1 = $i1 + 1;

        $b2 = $r1[$i1];

        $i0 = $b2 + $i0;

        $b2 = (byte) $i0;

        $r1[$i1] = $b2;

        return;
    }

    public final void e(int)
    {
        com.speedsoftware.a.as $r0;
        int $i0, $i1;
        byte[] $r1;

        $r0 := @this: com.speedsoftware.a.as;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.speedsoftware.a.as: byte[] c>;

        $i1 = $r0.<com.speedsoftware.a.as: int d>;

        $i1 = $i1 + 2;

        staticinvoke <com.speedsoftware.a.am: void a(byte[],int,int)>($r1, $i1, $i0);

        return;
    }

    public final com.speedsoftware.a.as f()
    {
        com.speedsoftware.a.as $r0;
        int $i0;

        $r0 := @this: com.speedsoftware.a.as;

        $i0 = $r0.<com.speedsoftware.a.as: int d>;

        $i0 = $i0 + 6;

        virtualinvoke $r0.<com.speedsoftware.a.as: void c(int)>($i0);

        return $r0;
    }

    public final java.lang.String toString()
    {
        com.speedsoftware.a.as $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: com.speedsoftware.a.as;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("State[");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  pos=");

        $i0 = $r0.<com.speedsoftware.a.as: int d>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  size=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  symbol=");

        $i0 = virtualinvoke $r0.<com.speedsoftware.a.as: int a()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  freq=");

        $i0 = virtualinvoke $r0.<com.speedsoftware.a.as: int b()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  successor=");

        $i0 = virtualinvoke $r0.<com.speedsoftware.a.as: int c()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
