public abstract class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase extends com.fasterxml.jackson.databind.ser.std.StdSerializer implements com.fasterxml.jackson.databind.ser.ContextualSerializer, com.fasterxml.jackson.databind.ser.ResolvableSerializer
{
    protected static final com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPS;
    protected final com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter;
    protected final com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps;
    protected final com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter;
    protected final java.lang.Object _propertyFilterId;
    protected final com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props;
    protected final com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r0;

        $r0 = newarray (com.fasterxml.jackson.databind.ser.BeanPropertyWriter)[0];

        <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPS> = $r0;

        return;
    }

    protected void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.ser.BeanSerializerBuilder, com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
    {
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder $r2;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r3, $r4;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r5;
        com.fasterxml.jackson.databind.ser.AnyGetterWriter $r6;
        java.lang.Object $r7;
        com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter $r8;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;

        $r3 := @parameter2: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];

        $r4 := @parameter3: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(com.fasterxml.jackson.databind.JavaType)>($r1);

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props> = $r3;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps> = $r4;

        if $r2 != null goto label1;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId> = null;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter> = null;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Object _propertyFilterId> = null;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter> = null;

        return;

     label1:
        $r5 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.introspect.AnnotatedMember getTypeId()>();

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId> = $r5;

        $r6 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.AnyGetterWriter getAnyGetter()>();

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter> = $r6;

        $r7 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.lang.Object getFilterId()>();

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Object _propertyFilterId> = $r7;

        $r8 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter getObjectIdWriter()>();

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter> = $r8;

        return;
    }

    protected void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
    {
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r0, $r1;
        com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter $r2;
        java.lang.Class $r3;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r4;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r5;
        com.fasterxml.jackson.databind.ser.AnyGetterWriter $r6;
        java.lang.Object $r7;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r2 := @parameter1: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter;

        $r3 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Class _handledType>;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class)>($r3);

        $r4 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props> = $r4;

        $r4 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps> = $r4;

        $r5 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId>;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId> = $r5;

        $r6 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter>;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter> = $r6;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter> = $r2;

        $r7 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Object _propertyFilterId>;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Object _propertyFilterId> = $r7;

        return;
    }

    protected void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, com.fasterxml.jackson.databind.util.NameTransformer)
    {
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r0, $r1;
        com.fasterxml.jackson.databind.util.NameTransformer $r2;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r3, $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r2 := @parameter1: com.fasterxml.jackson.databind.util.NameTransformer;

        $r3 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

        $r3 = staticinvoke <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] rename(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.util.NameTransformer)>($r3, $r2);

        $r4 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        $r4 = staticinvoke <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] rename(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.util.NameTransformer)>($r4, $r2);

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])>($r1, $r3, $r4);

        return;
    }

    public void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
    {
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r0, $r1;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r2, $r3;
        java.lang.Class $r4;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r5;
        com.fasterxml.jackson.databind.ser.AnyGetterWriter $r6;
        com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter $r7;
        java.lang.Object $r8;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r2 := @parameter1: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];

        $r3 := @parameter2: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];

        $r4 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Class _handledType>;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class)>($r4);

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props> = $r2;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps> = $r3;

        $r5 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId>;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId> = $r5;

        $r6 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter>;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter> = $r6;

        $r7 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter> = $r7;

        $r8 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Object _propertyFilterId>;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Object _propertyFilterId> = $r8;

        return;
    }

    protected void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, java.lang.String[])
    {
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r0, $r1;
        java.lang.String[] $r2;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r3, $r4, $r6;
        int $i0, $i1;
        java.util.ArrayList $r5, $r9;
        java.lang.Class $r7;
        java.util.HashSet $r8;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r10;
        java.lang.String $r11;
        boolean $z0;
        java.lang.Object[] $r12;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r13;
        com.fasterxml.jackson.databind.ser.AnyGetterWriter $r14;
        com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter $r15;
        java.lang.Object $r16;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r2 := @parameter1: java.lang.String[];

        $r6 = null;

        $r7 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Class _handledType>;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class)>($r7);

        $r8 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.util.HashSet arrayToSet(java.lang.Object[])>($r2);

        $r3 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

        $r4 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        $i0 = lengthof $r3;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0);

        if $r4 != null goto label4;

        $r9 = null;

     label1:
        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $r10 = $r3[$i1];

        $r11 = virtualinvoke $r10.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();

        $z0 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        if $z0 != 0 goto label3;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        if $r4 == null goto label3;

        $r10 = $r4[$i1];

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0);

        goto label1;

     label5:
        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r3 = newarray (com.fasterxml.jackson.databind.ser.BeanPropertyWriter)[$i0];

        $r12 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) $r12;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props> = $r3;

        if $r9 != null goto label7;

     label6:
        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps> = $r6;

        $r13 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId>;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId> = $r13;

        $r14 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter>;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter> = $r14;

        $r15 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter> = $r15;

        $r16 = $r1.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Object _propertyFilterId>;

        $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Object _propertyFilterId> = $r16;

        return;

     label7:
        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $r6 = newarray (com.fasterxml.jackson.databind.ser.BeanPropertyWriter)[$i0];

        $r12 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r6 = (com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) $r12;

        goto label6;
    }

    private final java.lang.String _customTypeId(java.lang.Object)
    {
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r0;
        java.lang.Object $r1;
        boolean $z0;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r2;
        java.lang.String $r3;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.Object getValue(java.lang.Object)>($r1);

        if $r1 != null goto label1;

        return "";

     label1:
        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r3 = (java.lang.String) $r1;

        return $r3;

     label2:
        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    private final void _serializeWithObjectId(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r0;
        java.lang.Object $r1, $r9;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r4;
        com.fasterxml.jackson.core.io.SerializedString $r5;
        com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter $r6;
        com.fasterxml.jackson.'annotation'.ObjectIdGenerator $r7;
        com.fasterxml.jackson.databind.ser.impl.WritableObjectId $r8;
        com.fasterxml.jackson.databind.JsonSerializer $r10;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r11;
        java.lang.String $r12;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r6 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;

        $r7 = $r6.<com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter: com.fasterxml.jackson.annotation.ObjectIdGenerator generator>;

        $r8 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.'annotation'.ObjectIdGenerator)>($r1, $r7);

        $r9 = $r8.<com.fasterxml.jackson.databind.ser.impl.WritableObjectId: java.lang.Object id>;

        if $r9 == null goto label1;

        $r10 = $r8.<com.fasterxml.jackson.databind.ser.impl.WritableObjectId: com.fasterxml.jackson.databind.JsonSerializer serializer>;

        virtualinvoke $r10.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r9, $r2, $r3);

        return;

     label1:
        $r10 = $r6.<com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter: com.fasterxml.jackson.databind.JsonSerializer serializer>;

        $r8.<com.fasterxml.jackson.databind.ser.impl.WritableObjectId: com.fasterxml.jackson.databind.JsonSerializer serializer> = $r10;

        $r7 = $r8.<com.fasterxml.jackson.databind.ser.impl.WritableObjectId: com.fasterxml.jackson.annotation.ObjectIdGenerator generator>;

        $r9 = virtualinvoke $r7.<com.fasterxml.jackson.'annotation'.ObjectIdGenerator: java.lang.Object generateId(java.lang.Object)>($r1);

        $r8.<com.fasterxml.jackson.databind.ser.impl.WritableObjectId: java.lang.Object id> = $r9;

        $r11 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId>;

        if $r11 != null goto label6;

        $r12 = null;

     label2:
        if $r12 != null goto label7;

        virtualinvoke $r4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>($r1, $r2);

     label3:
        $r5 = $r6.<com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter: com.fasterxml.jackson.core.io.SerializedString propertyName>;

        if $r5 == null goto label4;

        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(com.fasterxml.jackson.core.SerializableString)>($r5);

        $r10 = $r6.<com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter: com.fasterxml.jackson.databind.JsonSerializer serializer>;

        virtualinvoke $r10.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r9, $r2, $r3);

     label4:
        $r9 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Object _propertyFilterId>;

        if $r9 == null goto label8;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

     label5:
        if $r12 != null goto label9;

        virtualinvoke $r4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>($r1, $r2);

        return;

     label6:
        $r12 = specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.String _customTypeId(java.lang.Object)>($r1);

        goto label2;

     label7:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)>($r1, $r2, $r12);

        goto label3;

     label8:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

        goto label5;

     label9:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)>($r1, $r2, $r12);

        return;
    }

    private static final com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] rename(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], com.fasterxml.jackson.databind.util.NameTransformer)
    {
        com.fasterxml.jackson.databind.util.NameTransformer $r0, $r3;
        int $i0, $i1;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r1;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r2, $r4;

        $r2 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];

        $r0 := @parameter1: com.fasterxml.jackson.databind.util.NameTransformer;

        if $r2 == null goto label5;

        $i0 = lengthof $r2;

        if $i0 == 0 goto label5;

        if $r0 == null goto label5;

        $r3 = <com.fasterxml.jackson.databind.util.NameTransformer: com.fasterxml.jackson.databind.util.NameTransformer NOP>;

        if $r0 != $r3 goto label1;

        return $r2;

     label1:
        $i0 = lengthof $r2;

        $r4 = newarray (com.fasterxml.jackson.databind.ser.BeanPropertyWriter)[$i0];

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r1 = $r2[$i1];

        if $r1 == null goto label3;

        $r1 = virtualinvoke $r1.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer)>($r0);

        $r4[$i1] = $r1;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return $r4;

     label5:
        return $r2;
    }

    public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.BeanProperty $r1;
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r2;
        java.lang.String[] $r3;
        com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter $r4, $r22;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r5;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r6;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo $r7;
        java.lang.Class $r8;
        com.fasterxml.jackson.databind.JavaType $r9;
        com.fasterxml.jackson.databind.type.TypeFactory $r10;
        com.fasterxml.jackson.databind.JavaType[] $r11;
        java.lang.String $r12, $r16;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r13, $r18;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r14;
        java.lang.StringBuilder $r15;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r17, $r19;
        boolean $z0;
        com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator $r20;
        com.fasterxml.jackson.databind.JsonSerializer $r21;
        com.fasterxml.jackson.'annotation'.ObjectIdGenerator $r23;

        $r2 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r0 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 = null;

        $r4 = $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;

        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        if $r1 == null goto label10;

        if $r5 == null goto label10;

        $r6 = interfaceinvoke $r1.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();

        $r3 = virtualinvoke $r5.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)>($r6);

        $r7 = virtualinvoke $r5.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated)>($r6);

        if $r7 == null goto label09;

        $r8 = virtualinvoke $r7.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: java.lang.Class getGeneratorType()>();

        $r9 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>($r8);

        $r10 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r11 = virtualinvoke $r10.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r9, class "com/fasterxml/jackson/annotation/ObjectIdGenerator");

        $r9 = $r11[0];

        if $r8 != class "com/fasterxml/jackson/annotation/ObjectIdGenerators$PropertyGenerator" goto label07;

        $r12 = virtualinvoke $r7.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: java.lang.String getPropertyName()>();

        $r13 = $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

        $i0 = lengthof $r13;

        $i1 = 0;

     label01:
        if $i1 != $i0 goto label02;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid Object Id definition for ");

        $r8 = $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Class _handledType>;

        $r16 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": can not find property with name \'");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r14;

     label02:
        $r13 = $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

        $r17 = $r13[$i1];

        $r16 = virtualinvoke $r17.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z0 == 0 goto label06;

        if $i1 <= 0 goto label03;

        $r13 = $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

        $r18 = $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, $r18, 1, $i1);

        $r13 = $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

        $r13[0] = $r17;

        $r13 = $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        if $r13 == null goto label03;

        $r13 = $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        $r19 = $r13[$i1];

        $r13 = $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        $r18 = $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, $r18, 1, $i1);

        $r13 = $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        $r13[0] = $r19;

     label03:
        $r9 = virtualinvoke $r17.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.JavaType getType()>();

        $r20 = new com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator;

        specialinvoke $r20.<com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: void <init>(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>($r7, $r17);

        $r4 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter construct(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.'annotation'.ObjectIdGenerator)>($r9, null, $r20);

     label04:
        if $r4 == null goto label08;

        $r9 = $r4.<com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter: com.fasterxml.jackson.databind.JavaType idType>;

        $r21 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r9, $r1);

        $r4 = virtualinvoke $r4.<com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter withSerializer(com.fasterxml.jackson.databind.JsonSerializer)>($r21);

        $r22 = $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;

        if $r4 == $r22 goto label08;

        $r2 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>($r4);

     label05:
        if $r3 == null goto label11;

        $i0 = lengthof $r3;

        if $i0 == 0 goto label11;

        $r2 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.lang.String[])>($r3);

        return $r2;

     label06:
        $i1 = $i1 + 1;

        goto label01;

     label07:
        $r23 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.'annotation'.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)>($r6, $r7);

        $r12 = virtualinvoke $r7.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: java.lang.String getPropertyName()>();

        $r4 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter construct(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.'annotation'.ObjectIdGenerator)>($r9, $r12, $r23);

        goto label04;

     label08:
        goto label05;

     label09:
        goto label04;

     label10:
        goto label04;

     label11:
        return $r2;
    }

    protected com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r0;
        com.fasterxml.jackson.databind.SerializerProvider $r1;
        java.lang.Object $r2;
        com.fasterxml.jackson.databind.ser.FilterProvider $r3;
        com.fasterxml.jackson.databind.JsonMappingException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        com.fasterxml.jackson.databind.ser.BeanPropertyFilter $r7;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Object _propertyFilterId>;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider()>();

        if $r3 != null goto label1;

        $r4 = new com.fasterxml.jackson.databind.JsonMappingException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can not resolve BeanPropertyFilter with id \'");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'; no FilterProvider configured");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        $r7 = virtualinvoke $r3.<com.fasterxml.jackson.databind.ser.FilterProvider: com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(java.lang.Object)>($r2);

        return $r7;
    }

    public void resolve(com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r0;
        com.fasterxml.jackson.databind.SerializerProvider $r1;
        int $i0, $i1, $i2, $i3;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r2, $r5;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r3;
        boolean $z0;
        com.fasterxml.jackson.databind.JsonSerializer $r4, $r9;
        com.fasterxml.jackson.databind.JavaType $r6, $r7;
        java.lang.reflect.Type $r8;
        java.lang.Object $r10;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r11;
        com.fasterxml.jackson.databind.ser.ContainerSerializer $r12;
        com.fasterxml.jackson.databind.ser.AnyGetterWriter $r13;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r3 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        if $r3 != null goto label06;

        $i1 = 0;

     label01:
        $r3 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

        $i0 = lengthof $r3;

        $i2 = 0;

     label02:
        if $i2 >= $i0 goto label09;

        $r3 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

        $r2 = $r3[$i2];

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: boolean willSuppressNulls()>();

        if $z0 != 0 goto label03;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: boolean hasNullSerializer()>();

        if $z0 != 0 goto label03;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findNullValueSerializer(com.fasterxml.jackson.databind.BeanProperty)>($r2);

        if $r4 == null goto label03;

        virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)>($r4);

        if $i2 >= $i1 goto label03;

        $r3 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        $r5 = $r3[$i2];

        if $r5 == null goto label03;

        virtualinvoke $r5.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)>($r4);

     label03:
        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: boolean hasSerializer()>();

        if $z0 != 0 goto label05;

        $r6 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.JavaType getSerializationType()>();

        $r7 = $r6;

        if $r6 != null goto label07;

        $r8 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.reflect.Type getGenericPropertyType()>();

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>($r8);

        $r7 = $r6;

        $z0 = virtualinvoke $r6.<com.fasterxml.jackson.databind.JavaType: boolean isFinal()>();

        if $z0 != 0 goto label07;

        $z0 = virtualinvoke $r6.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z0 != 0 goto label04;

        $i3 = virtualinvoke $r6.<com.fasterxml.jackson.databind.JavaType: int containedTypeCount()>();

        if $i3 <= 0 goto label05;

     label04:
        virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType)>($r6);

     label05:
        $i2 = $i2 + 1;

        goto label02;

     label06:
        $r3 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        $i1 = lengthof $r3;

        goto label01;

     label07:
        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r7, $r2);

        $r9 = $r4;

        $z0 = virtualinvoke $r7.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z0 == 0 goto label08;

        $r7 = virtualinvoke $r7.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();

        $r10 = virtualinvoke $r7.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getTypeHandler()>();

        $r11 = (com.fasterxml.jackson.databind.jsontype.TypeSerializer) $r10;

        if $r11 == null goto label08;

        $z0 = $r4 instanceof com.fasterxml.jackson.databind.ser.ContainerSerializer;

        if $z0 == 0 goto label08;

        $r12 = (com.fasterxml.jackson.databind.ser.ContainerSerializer) $r4;

        $r9 = virtualinvoke $r12.<com.fasterxml.jackson.databind.ser.ContainerSerializer: com.fasterxml.jackson.databind.ser.ContainerSerializer withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r11);

     label08:
        virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)>($r9);

        if $i2 >= $i1 goto label05;

        $r3 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        $r2 = $r3[$i2];

        if $r2 == null goto label05;

        virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)>($r9);

        goto label05;

     label09:
        $r13 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter>;

        if $r13 == null goto label10;

        $r13 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter>;

        virtualinvoke $r13.<com.fasterxml.jackson.databind.ser.AnyGetterWriter: void resolve(com.fasterxml.jackson.databind.SerializerProvider)>($r1);

     label10:
        return;
    }

    protected void serializeFields(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r0;
        java.lang.Object $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r4;
        java.lang.Class $r5;
        int $i0, $i1;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r6;
        com.fasterxml.jackson.databind.ser.AnyGetterWriter $r7;
        java.lang.Exception $r8;
        java.lang.String $r9;
        java.lang.StackOverflowError $r10;
        com.fasterxml.jackson.databind.JsonMappingException $r11;
        com.fasterxml.jackson.databind.JsonMappingException$Reference $r12;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        if $r4 == null goto label08;

        $r5 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class getSerializationView()>();

        if $r5 == null goto label08;

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

     label01:
        $i0 = 0;

     label02:
        $i1 = lengthof $r4;

     label03:
        if $i0 >= $i1 goto label09;

     label04:
        $r6 = $r4[$i0];

     label05:
        if $r6 == null goto label07;

     label06:
        virtualinvoke $r6.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

     label07:
        $i0 = $i0 + 1;

        goto label03;

     label08:
        $r4 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

        goto label01;

     label09:
        $r7 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter>;

     label10:
        if $r7 == null goto label20;

     label11:
        $r7 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter>;

     label12:
        virtualinvoke $r7.<com.fasterxml.jackson.databind.ser.AnyGetterWriter: void getAndSerialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

     label13:
        return;

     label14:
        $r8 := @caughtexception;

        $i1 = lengthof $r4;

        if $i0 != $i1 goto label16;

        $r9 = "[anySetter]";

     label15:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>($r3, $r8, $r1, $r9);

        return;

     label16:
        $r6 = $r4[$i0];

        $r9 = virtualinvoke $r6.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();

        goto label15;

     label17:
        $r10 := @caughtexception;

        $r11 = new com.fasterxml.jackson.databind.JsonMappingException;

        specialinvoke $r11.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>("Infinite recursion (StackOverflowError)");

        $i1 = lengthof $r4;

        if $i0 != $i1 goto label19;

        $r9 = "[anySetter]";

     label18:
        $r12 = new com.fasterxml.jackson.databind.JsonMappingException$Reference;

        specialinvoke $r12.<com.fasterxml.jackson.databind.JsonMappingException$Reference: void <init>(java.lang.Object,java.lang.String)>($r1, $r9);

        virtualinvoke $r11.<com.fasterxml.jackson.databind.JsonMappingException: void prependPath(com.fasterxml.jackson.databind.JsonMappingException$Reference)>($r12);

        throw $r11;

     label19:
        $r6 = $r4[$i0];

        $r9 = virtualinvoke $r6.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();

        goto label18;

     label20:
        return;

        catch java.lang.Exception from label02 to label03 with label14;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.StackOverflowError from label06 to label07 with label17;
        catch java.lang.Exception from label09 to label10 with label14;
        catch java.lang.Exception from label11 to label13 with label14;
        catch java.lang.StackOverflowError from label12 to label13 with label17;
    }

    protected void serializeFieldsFiltered(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r0;
        java.lang.Object $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r4;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r5;
        java.lang.Class $r6;
        com.fasterxml.jackson.databind.ser.BeanPropertyFilter $r7;
        int $i0, $i1;
        com.fasterxml.jackson.databind.ser.AnyGetterWriter $r8;
        java.lang.Exception $r9;
        java.lang.String $r10;
        java.lang.StackOverflowError $r11;
        com.fasterxml.jackson.databind.JsonMappingException $r12;
        com.fasterxml.jackson.databind.JsonMappingException$Reference $r13;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        if $r5 == null goto label02;

        $r6 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class getSerializationView()>();

        if $r6 == null goto label02;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

     label01:
        $r7 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(com.fasterxml.jackson.databind.SerializerProvider)>($r3);

        if $r7 != null goto label03;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

        return;

     label02:
        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

        goto label01;

     label03:
        $i0 = 0;

     label04:
        $i1 = lengthof $r5;

     label05:
        if $i0 >= $i1 goto label10;

     label06:
        $r4 = $r5[$i0];

     label07:
        if $r4 == null goto label09;

     label08:
        interfaceinvoke $r7.<com.fasterxml.jackson.databind.ser.BeanPropertyFilter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>($r1, $r2, $r3, $r4);

     label09:
        $i0 = $i0 + 1;

        goto label05;

     label10:
        $r8 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter>;

     label11:
        if $r8 == null goto label21;

     label12:
        $r8 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter>;

     label13:
        virtualinvoke $r8.<com.fasterxml.jackson.databind.ser.AnyGetterWriter: void getAndSerialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

     label14:
        return;

     label15:
        $r9 := @caughtexception;

        $i1 = lengthof $r5;

        if $i0 != $i1 goto label17;

        $r10 = "[anySetter]";

     label16:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>($r3, $r9, $r1, $r10);

        return;

     label17:
        $r4 = $r5[$i0];

        $r10 = virtualinvoke $r4.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();

        goto label16;

     label18:
        $r11 := @caughtexception;

        $r12 = new com.fasterxml.jackson.databind.JsonMappingException;

        specialinvoke $r12.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>("Infinite recursion (StackOverflowError)");

        $i1 = lengthof $r5;

        if $i0 != $i1 goto label20;

        $r10 = "[anySetter]";

     label19:
        $r13 = new com.fasterxml.jackson.databind.JsonMappingException$Reference;

        specialinvoke $r13.<com.fasterxml.jackson.databind.JsonMappingException$Reference: void <init>(java.lang.Object,java.lang.String)>($r1, $r10);

        virtualinvoke $r12.<com.fasterxml.jackson.databind.JsonMappingException: void prependPath(com.fasterxml.jackson.databind.JsonMappingException$Reference)>($r13);

        throw $r12;

     label20:
        $r4 = $r5[$i0];

        $r10 = virtualinvoke $r4.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();

        goto label19;

     label21:
        return;

        catch java.lang.Exception from label04 to label05 with label15;
        catch java.lang.Exception from label06 to label07 with label15;
        catch java.lang.Exception from label08 to label09 with label15;
        catch java.lang.Exception from label10 to label11 with label15;
        catch java.lang.Exception from label12 to label14 with label15;
        catch java.lang.StackOverflowError from label08 to label09 with label18;
        catch java.lang.StackOverflowError from label13 to label14 with label18;
    }

    public void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r0;
        java.lang.Object $r1, $r5;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r4;
        java.lang.String $r6;
        com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter $r7;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r8;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r7 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;

        if $r7 == null goto label1;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r1, $r2, $r3, $r4);

        return;

     label1:
        $r8 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId>;

        if $r8 != null goto label5;

        $r6 = null;

     label2:
        if $r6 != null goto label6;

        virtualinvoke $r4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>($r1, $r2);

     label3:
        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.Object _propertyFilterId>;

        if $r5 == null goto label7;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

     label4:
        if $r6 != null goto label8;

        virtualinvoke $r4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>($r1, $r2);

        return;

     label5:
        $r6 = specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: java.lang.String _customTypeId(java.lang.Object)>($r1);

        goto label2;

     label6:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)>($r1, $r2, $r6);

        goto label3;

     label7:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

        goto label4;

     label8:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)>($r1, $r2, $r6);

        return;
    }

    public boolean usesObjectId()
    {
        com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r0;
        com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter $r1;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r1 = $r0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    protected abstract com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.lang.String[]);

    protected abstract com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter);
}
