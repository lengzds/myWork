public final class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer extends java.lang.Object
{
    private int _collCount;
    private int _collEnd;
    private com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList;
    private boolean _collListShared;
    private int _count;
    final boolean _intern;
    private int[] _mainHash;
    private int _mainHashMask;
    private boolean _mainHashShared;
    private com.fasterxml.jackson.core.sym.Name[] _mainNames;
    private boolean _mainNamesShared;
    private transient boolean _needRehash;
    final com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer _parent;

    private void <init>(int, boolean)
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        boolean $z0;
        int $i0, $i1, $i2;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i1 = 16;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer _parent> = null;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _intern> = $z0;

        if $i0 >= 16 goto label2;

        $i0 = 16;

     label1:
        specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void initTables(int)>($i0);

        return;

     label2:
        $i2 = $i0 + -1;

        $i2 = $i2 & $i0;

        if $i2 == 0 goto label1;

     label3:
        if $i1 >= $i0 goto label4;

        $i1 = $i1 + $i1;

        goto label3;

     label4:
        $i0 = $i1;

        goto label1;
    }

    private void <init>(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer, boolean)
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0, $r1;
        boolean $z0;
        int $i0;
        int[] $r2;
        com.fasterxml.jackson.core.sym.Name[] $r3;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] $r4;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $r1 := @parameter0: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer _parent> = $r1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _intern> = $z0;

        $i0 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count> = $i0;

        $i0 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _mainHashMask>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _mainHashMask> = $i0;

        $r2 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash> = $r2;

        $r3 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames> = $r3;

        $r4 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList> = $r4;

        $i0 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collCount>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collCount> = $i0;

        $i0 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd> = $i0;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _needRehash> = 0;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainHashShared> = 1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainNamesShared> = 1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _collListShared> = 1;

        return;
    }

    private void _addSymbol(int, com.fasterxml.jackson.core.sym.Name)
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        int $i0, $i1, $i2, $i3;
        com.fasterxml.jackson.core.sym.Name $r1, $r3;
        boolean $z0;
        com.fasterxml.jackson.core.sym.Name[] $r2;
        int[] $r4;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] $r5, $r7;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket $r6, $r8;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.fasterxml.jackson.core.sym.Name;

        $z0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainHashShared>;

        if $z0 == 0 goto label01;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void unshareMain()>();

     label01:
        $z0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _needRehash>;

        if $z0 == 0 goto label02;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void rehash()>();

     label02:
        $i2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count>;

        $i2 = $i2 + 1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count> = $i2;

        $i2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _mainHashMask>;

        $i2 = $i0 & $i2;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        $r3 = $r2[$i2];

        if $r3 != null goto label05;

        $r4 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $i0 = $i0 << 8;

        $r4[$i2] = $i0;

        $z0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainNamesShared>;

        if $z0 == 0 goto label03;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void unshareNames()>();

     label03:
        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        $r2[$i2] = $r1;

     label04:
        $r4 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $i0 = lengthof $r4;

        $i2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count>;

        $i1 = $i0 >> 1;

        if $i2 <= $i1 goto label12;

        $i2 = $i0 >> 2;

        $i1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count>;

        $i0 = $i0 - $i2;

        if $i1 <= $i0 goto label11;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _needRehash> = 1;

        return;

     label05:
        $z0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _collListShared>;

        if $z0 == 0 goto label06;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void unshareCollision()>();

     label06:
        $i0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collCount>;

        $i0 = $i0 + 1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collCount> = $i0;

        $r4 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $i0 = $r4[$i2];

        $i1 = $i0 & 255;

        if $i1 != 0 goto label10;

        $i1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd>;

        if $i1 > 254 goto label09;

        $i1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd>;

        $i3 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd>;

        $i3 = $i3 + 1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd> = $i3;

        $r5 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $i3 = lengthof $r5;

        if $i1 < $i3 goto label07;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void expandCollision()>();

     label07:
        $r4 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $i3 = $i0 & -256;

        $i0 = $i1 + 1;

        $i0 = $i3 | $i0;

        $r4[$i2] = $i0;

     label08:
        $r5 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $r6 = new com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket;

        $r7 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $r8 = $r7[$i1];

        specialinvoke $r6.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: void <init>(com.fasterxml.jackson.core.sym.Name,com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)>($r1, $r8);

        $r5[$i1] = $r6;

        goto label04;

     label09:
        $i1 = specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int findBestBucket()>();

        goto label07;

     label10:
        $i1 = $i1 + -1;

        goto label08;

     label11:
        $i0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collCount>;

        if $i0 < $i2 goto label12;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _needRehash> = 1;

     label12:
        return;
    }

    public static final int calcHash(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = $i0 >>> 16;

        $i1 = $i1 ^ $i0;

        $i0 = $i1 >>> 8;

        $i0 = $i1 ^ $i0;

        return $i0;
    }

    public static final int calcHash(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i0 * 31;

        $i0 = $i0 + $i1;

        $i1 = $i0 >>> 16;

        $i0 = $i0 ^ $i1;

        $i1 = $i0 >>> 8;

        $i0 = $i0 ^ $i1;

        return $i0;
    }

    public static final int calcHash(int[], int)
    {
        int[] $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 = $r0[0];

        $i2 = 1;

     label1:
        if $i2 >= $i0 goto label2;

        $i3 = $i1 * 31;

        $i1 = $r0[$i2];

        $i1 = $i3 + $i1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $i0 = $i1 >>> 16;

        $i0 = $i0 ^ $i1;

        $i2 = $i0 >>> 8;

        $i0 = $i0 ^ $i2;

        return $i0;
    }

    private static com.fasterxml.jackson.core.sym.Name constructName(int, java.lang.String, int[], int)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0;
        int[] $r1, $r2;
        com.fasterxml.jackson.core.sym.Name1 $r3;
        com.fasterxml.jackson.core.sym.Name2 $r4;
        com.fasterxml.jackson.core.sym.Name3 $r5;
        com.fasterxml.jackson.core.sym.NameN $r6;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: int[];

        $i1 := @parameter3: int;

        if $i1 >= 4 goto label1;

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        $r2 = newarray (int)[$i1];

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label6;

        $i3 = $r1[$i2];

        $r2[$i2] = $i3;

        $i2 = $i2 + 1;

        goto label2;

     label3:
        $r3 = new com.fasterxml.jackson.core.sym.Name1;

        $i1 = $r1[0];

        specialinvoke $r3.<com.fasterxml.jackson.core.sym.Name1: void <init>(java.lang.String,int,int)>($r0, $i0, $i1);

        return $r3;

     label4:
        $r4 = new com.fasterxml.jackson.core.sym.Name2;

        $i1 = $r1[0];

        $i2 = $r1[1];

        specialinvoke $r4.<com.fasterxml.jackson.core.sym.Name2: void <init>(java.lang.String,int,int,int)>($r0, $i0, $i1, $i2);

        return $r4;

     label5:
        $r5 = new com.fasterxml.jackson.core.sym.Name3;

        $i1 = $r1[0];

        $i2 = $r1[1];

        $i3 = $r1[2];

        specialinvoke $r5.<com.fasterxml.jackson.core.sym.Name3: void <init>(java.lang.String,int,int,int,int)>($r0, $i0, $i1, $i2, $i3);

        return $r5;

     label6:
        $r6 = new com.fasterxml.jackson.core.sym.NameN;

        specialinvoke $r6.<com.fasterxml.jackson.core.sym.NameN: void <init>(java.lang.String,int,int[],int)>($r0, $i0, $r2, $i1);

        return $r6;
    }

    public static com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer createRoot()
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;

        $r0 = new com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void <init>(int,boolean)>(64, 1);

        return $r0;
    }

    private void expandCollision()
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] $r1, $r2;
        int $i0, $i1;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $i0 = lengthof $r1;

        $i1 = $i0 + $i0;

        $r2 = newarray (com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)[$i1];

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList> = $r2;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }

    private int findBestBucket()
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket $r2;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $i2 = 2147483647;

        $i3 = -1;

        $i4 = 0;

        $i0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd>;

     label1:
        if $i4 >= $i0 goto label4;

        $r2 = $r1[$i4];

        $i1 = virtualinvoke $r2.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: int length()>();

        $i5 = $i1;

        if $i1 >= $i2 goto label5;

        if $i1 != 1 goto label2;

        return $i4;

     label2:
        $i3 = $i4;

     label3:
        $i4 = $i4 + 1;

        $i2 = $i5;

        goto label1;

     label4:
        return $i3;

     label5:
        $i5 = $i2;

        goto label3;
    }

    public static com.fasterxml.jackson.core.sym.Name getEmptyName()
    {
        com.fasterxml.jackson.core.sym.Name1 $r0;

        $r0 = staticinvoke <com.fasterxml.jackson.core.sym.Name1: com.fasterxml.jackson.core.sym.Name1 getEmptyName()>();

        return $r0;
    }

    private void initTables(int)
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        int $i0;
        int[] $r1;
        com.fasterxml.jackson.core.sym.Name[] $r2;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $i0 := @parameter0: int;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count> = 0;

        $r1 = newarray (int)[$i0];

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash> = $r1;

        $r2 = newarray (com.fasterxml.jackson.core.sym.Name)[$i0];

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames> = $r2;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainHashShared> = 0;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainNamesShared> = 0;

        $i0 = $i0 + -1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _mainHashMask> = $i0;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _collListShared> = 1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList> = null;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd> = 0;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _needRehash> = 0;

        return;
    }

    private void markAsShared()
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainHashShared> = 1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainNamesShared> = 1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _collListShared> = 1;

        return;
    }

    private void mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0, $r1;
        int $i0, $i1;
        java.lang.Throwable $r2;
        int[] $r3;
        com.fasterxml.jackson.core.sym.Name[] $r4;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] $r5;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $r1 := @parameter0: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        entermonitor $r0;

     label1:
        $i0 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count>;

        $i1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count>;

     label2:
        if $i0 > $i1 goto label4;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $i0 = virtualinvoke $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int size()>();

        if $i0 <= 6000 goto label7;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void initTables(int)>(64);

     label5:
        goto label3;

     label6:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

     label7:
        $i0 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count> = $i0;

        $r3 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash> = $r3;

        $r4 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames> = $r4;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainHashShared> = 1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainNamesShared> = 1;

        $i0 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _mainHashMask>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _mainHashMask> = $i0;

        $r5 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList> = $r5;

        $i0 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collCount>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collCount> = $i0;

        $i0 = $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd>;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd> = $i0;

     label8:
        goto label3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void nukeSymbols()
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        int[] $r1;
        com.fasterxml.jackson.core.sym.Name[] $r2;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] $r3;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count> = 0;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r1, 0);

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r2, null);

        $r3 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r3, null);

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collCount> = 0;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd> = 0;

        return;
    }

    private void rehash()
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r1;
        com.fasterxml.jackson.core.sym.Name[] $r2, $r3;
        com.fasterxml.jackson.core.sym.Name $r4, $r8;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] $r5, $r6, $r10;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket $r7, $r9, $r11;
        java.lang.RuntimeException $r12;
        java.lang.StringBuilder $r13;
        java.lang.String $r14;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $i1 = 0;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _needRehash> = 0;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainNamesShared> = 0;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $i2 = lengthof $r1;

        $i3 = $i2 + $i2;

        if $i3 <= 65536 goto label01;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void nukeSymbols()>();

        return;

     label01:
        $r1 = newarray (int)[$i3];

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash> = $r1;

        $i4 = $i3 + -1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _mainHashMask> = $i4;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        $r3 = newarray (com.fasterxml.jackson.core.sym.Name)[$i3];

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames> = $r3;

        $i4 = 0;

        $i3 = 0;

     label02:
        if $i4 >= $i2 goto label04;

        $r4 = $r2[$i4];

        if $r4 == null goto label03;

        $i3 = $i3 + 1;

        $i0 = virtualinvoke $r4.<com.fasterxml.jackson.core.sym.Name: int hashCode()>();

        $i5 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _mainHashMask>;

        $i5 = $i5 & $i0;

        $r3 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        $r3[$i5] = $r4;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $i0 = $i0 << 8;

        $r1[$i5] = $i0;

     label03:
        $i4 = $i4 + 1;

        goto label02;

     label04:
        $i2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd>;

        if $i2 == 0 goto label15;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collCount> = 0;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd> = 0;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _collListShared> = 0;

        $r5 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $i4 = lengthof $r5;

        $r6 = newarray (com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)[$i4];

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList> = $r6;

     label05:
        if $i1 >= $i2 goto label14;

        $r7 = $r5[$i1];

     label06:
        if $r7 == null goto label13;

        $i3 = $i3 + 1;

        $r4 = $r7.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.Name _name>;

        $i5 = virtualinvoke $r4.<com.fasterxml.jackson.core.sym.Name: int hashCode()>();

        $i4 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _mainHashMask>;

        $i4 = $i4 & $i5;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $i0 = $r1[$i4];

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        $r8 = $r2[$i4];

        if $r8 != null goto label08;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $i0 = $i5 << 8;

        $r1[$i4] = $i0;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        $r2[$i4] = $r4;

     label07:
        $r7 = $r7.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket _next>;

        goto label06;

     label08:
        $i5 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collCount>;

        $i5 = $i5 + 1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collCount> = $i5;

        $i5 = $i0 & 255;

        if $i5 != 0 goto label12;

        $i5 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd>;

        if $i5 > 254 goto label11;

        $i5 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd>;

        $i6 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd>;

        $i6 = $i6 + 1;

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _collEnd> = $i6;

        $r6 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $i6 = lengthof $r6;

        if $i5 < $i6 goto label09;

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void expandCollision()>();

     label09:
        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $i6 = $i0 & -256;

        $i0 = $i5 + 1;

        $i0 = $i6 | $i0;

        $r1[$i4] = $i0;

     label10:
        $r6 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $r9 = new com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket;

        $r10 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $r11 = $r10[$i5];

        specialinvoke $r9.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: void <init>(com.fasterxml.jackson.core.sym.Name,com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)>($r4, $r11);

        $r6[$i5] = $r9;

        goto label07;

     label11:
        $i5 = specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int findBestBucket()>();

        goto label09;

     label12:
        $i5 = $i5 + -1;

        goto label10;

     label13:
        $i1 = $i1 + 1;

        goto label05;

     label14:
        $i1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count>;

        if $i3 == $i1 goto label15;

        $r12 = new java.lang.RuntimeException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Internal error: count after rehash ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; should be ");

        $i1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r12;

     label15:
        return;
    }

    private void unshareCollision()
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        int $i0;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] $r1, $r2;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        if $r1 != null goto label2;

        $r1 = newarray (com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)[32];

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList> = $r1;

     label1:
        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _collListShared> = 0;

        return;

     label2:
        $i0 = lengthof $r1;

        $r2 = newarray (com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket)[$i0];

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList> = $r2;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        goto label1;
    }

    private void unshareMain()
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        int[] $r1, $r2;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $i0 = lengthof $r2;

        $r2 = newarray (int)[$i0];

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash> = $r2;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainHashShared> = 0;

        return;
    }

    private void unshareNames()
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        com.fasterxml.jackson.core.sym.Name[] $r1, $r2;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        $i0 = lengthof $r1;

        $r2 = newarray (com.fasterxml.jackson.core.sym.Name)[$i0];

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames> = $r2;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainNamesShared> = 0;

        return;
    }

    public final com.fasterxml.jackson.core.sym.Name addName(java.lang.String, int[], int)
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        int[] $r1;
        int $i0, $i1;
        java.lang.String $r2;
        boolean $z0;
        com.fasterxml.jackson.core.util.InternCache $r3;
        com.fasterxml.jackson.core.sym.Name $r4;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $z0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _intern>;

        if $z0 == 0 goto label1;

        $r3 = <com.fasterxml.jackson.core.util.InternCache: com.fasterxml.jackson.core.util.InternCache instance>;

        $r2 = virtualinvoke $r3.<com.fasterxml.jackson.core.util.InternCache: java.lang.String intern(java.lang.String)>($r2);

     label1:
        $i1 = staticinvoke <com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int calcHash(int[],int)>($r1, $i0);

        $r4 = staticinvoke <com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name constructName(int,java.lang.String,int[],int)>($i1, $r2, $r1, $i0);

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void _addSymbol(int,com.fasterxml.jackson.core.sym.Name)>($i1, $r4);

        return $r4;
    }

    public final com.fasterxml.jackson.core.sym.Name findName(int)
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r1;
        com.fasterxml.jackson.core.sym.Name[] $r2;
        com.fasterxml.jackson.core.sym.Name $r3;
        boolean $z0;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] $r4;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket $r5;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int calcHash(int)>($i0);

        $i2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _mainHashMask>;

        $i2 = $i2 & $i1;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $i3 = $r1[$i2];

        $i4 = $i3 >> 8;

        $i4 = $i4 ^ $i1;

        $i4 = $i4 << 8;

        if $i4 != 0 goto label2;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        $r3 = $r2[$i2];

        if $r3 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.core.sym.Name: boolean equals(int)>($i0);

        if $z0 == 0 goto label3;

        return $r3;

     label2:
        if $i3 == 0 goto label4;

     label3:
        $i2 = $i3 & 255;

        if $i2 <= 0 goto label4;

        $i2 = $i2 + -1;

        $r4 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $r5 = $r4[$i2];

        if $r5 == null goto label4;

        $r3 = virtualinvoke $r5.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.Name find(int,int,int)>($i1, $i0, 0);

        return $r3;

     label4:
        return null;
    }

    public final com.fasterxml.jackson.core.sym.Name findName(int, int)
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;
        com.fasterxml.jackson.core.sym.Name[] $r2;
        com.fasterxml.jackson.core.sym.Name $r3;
        boolean $z0;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] $r4;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket $r5;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int calcHash(int,int)>($i0, $i1);

        $i3 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _mainHashMask>;

        $i3 = $i3 & $i2;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $i4 = $r1[$i3];

        $i5 = $i4 >> 8;

        $i5 = $i5 ^ $i2;

        $i5 = $i5 << 8;

        if $i5 != 0 goto label2;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        $r3 = $r2[$i3];

        if $r3 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.core.sym.Name: boolean equals(int,int)>($i0, $i1);

        if $z0 == 0 goto label3;

        return $r3;

     label2:
        if $i4 == 0 goto label4;

     label3:
        $i3 = $i4 & 255;

        if $i3 <= 0 goto label4;

        $i3 = $i3 + -1;

        $r4 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $r5 = $r4[$i3];

        if $r5 == null goto label4;

        $r3 = virtualinvoke $r5.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.Name find(int,int,int)>($i2, $i0, $i1);

        return $r3;

     label4:
        return null;
    }

    public final com.fasterxml.jackson.core.sym.Name findName(int[], int)
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        com.fasterxml.jackson.core.sym.Name[] $r3;
        com.fasterxml.jackson.core.sym.Name $r4;
        boolean $z0;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] $r5;
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket $r6;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int calcHash(int[],int)>($r1, $i0);

        $i2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _mainHashMask>;

        $i2 = $i2 & $i1;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int[] _mainHash>;

        $i3 = $r2[$i2];

        $i4 = $i3 >> 8;

        $i4 = $i4 ^ $i1;

        $i4 = $i4 << 8;

        if $i4 != 0 goto label1;

        $r3 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.Name[] _mainNames>;

        $r4 = $r3[$i2];

        if $r4 == null goto label4;

        $z0 = virtualinvoke $r4.<com.fasterxml.jackson.core.sym.Name: boolean equals(int[],int)>($r1, $i0);

        if $z0 == 0 goto label2;

        return $r4;

     label1:
        if $i3 != 0 goto label2;

        return null;

     label2:
        $i2 = $i3 & 255;

        if $i2 <= 0 goto label3;

        $i2 = $i2 + -1;

        $r5 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList>;

        $r6 = $r5[$i2];

        if $r6 == null goto label3;

        $r4 = virtualinvoke $r6.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.Name find(int,int[],int)>($i1, $r1, $i0);

        return $r4;

     label3:
        return null;

     label4:
        return $r4;
    }

    public final com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer makeChild(boolean, boolean)
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0, $r1;
        boolean $z0, $z1;
        java.lang.Throwable $r2;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        entermonitor $r0;

     label1:
        $r1 = new com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        specialinvoke $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void <init>(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer,boolean)>($r0, $z1);

     label2:
        exitmonitor $r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final boolean maybeDirty()
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $z0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean _mainHashShared>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final void release()
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0, $r1;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: boolean maybeDirty()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer _parent>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer _parent>;

        specialinvoke $r1.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer)>($r0);

        specialinvoke $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void markAsShared()>();

     label1:
        return;
    }

    public final int size()
    {
        com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer $r0;
        int i0;

        $r0 := @this: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;

        i0 = $r0.<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: int _count>;

        return i0;
    }
}
