public final enum class com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility extends java.lang.Enum
{
    private static final com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] $VALUES;
    public static final enum com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility ANY;
    public static final enum com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility DEFAULT;
    public static final enum com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NONE;
    public static final enum com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NON_PRIVATE;
    public static final enum com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC;
    public static final enum com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PUBLIC_ONLY;

    static void <clinit>()
    {
        com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility $r0;
        com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] $r1;

        $r0 = new com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;

        specialinvoke $r0.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: void <init>(java.lang.String,int)>("ANY", 0);

        <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility ANY> = $r0;

        $r0 = new com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;

        specialinvoke $r0.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: void <init>(java.lang.String,int)>("NON_PRIVATE", 1);

        <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NON_PRIVATE> = $r0;

        $r0 = new com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;

        specialinvoke $r0.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: void <init>(java.lang.String,int)>("PROTECTED_AND_PUBLIC", 2);

        <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC> = $r0;

        $r0 = new com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;

        specialinvoke $r0.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: void <init>(java.lang.String,int)>("PUBLIC_ONLY", 3);

        <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PUBLIC_ONLY> = $r0;

        $r0 = new com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;

        specialinvoke $r0.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: void <init>(java.lang.String,int)>("NONE", 4);

        <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NONE> = $r0;

        $r0 = new com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;

        specialinvoke $r0.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: void <init>(java.lang.String,int)>("DEFAULT", 5);

        <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility DEFAULT> = $r0;

        $r1 = newarray (com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility)[6];

        $r0 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility ANY>;

        $r1[0] = $r0;

        $r0 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NON_PRIVATE>;

        $r1[1] = $r0;

        $r0 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC>;

        $r1[2] = $r0;

        $r0 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PUBLIC_ONLY>;

        $r1[3] = $r0;

        $r0 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NONE>;

        $r1[4] = $r0;

        $r0 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility DEFAULT>;

        $r1[5] = $r0;

        <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] $VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/fasterxml/jackson/annotation/JsonAutoDetect$Visibility", $r0);

        $r2 = (com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility) $r1;

        return $r2;
    }

    public static com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] values()
    {
        java.lang.Object $r0;
        com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] $r1;

        $r1 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[]) $r0;

        return $r1;
    }

    public final boolean isVisible(java.lang.reflect.Member)
    {
        com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility $r0;
        java.lang.reflect.Member $r1;
        boolean $z0;
        int[] $r2;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;

        $r1 := @parameter0: java.lang.reflect.Member;

        $z0 = 1;

        $r2 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonAutoDetect$Visibility>;

        $i0 = virtualinvoke $r0.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label1;
        };

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;

     label4:
        $i0 = interfaceinvoke $r1.<java.lang.reflect.Member: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPrivate(int)>($i0);

        if $z0 == 0 goto label7;

        return 0;

     label5:
        $i0 = interfaceinvoke $r1.<java.lang.reflect.Member: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isProtected(int)>($i0);

        if $z0 != 0 goto label7;

     label6:
        $i0 = interfaceinvoke $r1.<java.lang.reflect.Member: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        return $z0;

     label7:
        return 1;
    }
}
