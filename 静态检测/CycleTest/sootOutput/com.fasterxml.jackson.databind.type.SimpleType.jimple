public final class com.fasterxml.jackson.databind.type.SimpleType extends com.fasterxml.jackson.databind.type.TypeBase
{
    protected final java.lang.String[] _typeNames;
    protected final com.fasterxml.jackson.databind.JavaType[] _typeParameters;

    protected void <init>(java.lang.Class)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        java.lang.Class $r1;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke $r0.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object)>($r1, null, null, null, null);

        return;
    }

    protected void <init>(java.lang.Class, java.lang.String[], com.fasterxml.jackson.databind.JavaType[], java.lang.Object, java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        java.lang.Class $r1;
        java.lang.String[] $r2;
        com.fasterxml.jackson.databind.JavaType[] $r3;
        java.lang.Object $r4, $r5;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: com.fasterxml.jackson.databind.JavaType[];

        $r4 := @parameter3: java.lang.Object;

        $r5 := @parameter4: java.lang.Object;

        specialinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBase: void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object)>($r1, 0, $r4, $r5);

        if $r2 == null goto label1;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label2;

     label1:
        $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.String[] _typeNames> = null;

        $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters> = null;

        return;

     label2:
        $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.String[] _typeNames> = $r2;

        $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters> = $r3;

        return;
    }

    public static com.fasterxml.jackson.databind.type.SimpleType constructUnsafe(java.lang.Class)
    {
        java.lang.Class $r0;
        com.fasterxml.jackson.databind.type.SimpleType $r1;

        $r0 := @parameter0: java.lang.Class;

        $r1 = new com.fasterxml.jackson.databind.type.SimpleType;

        specialinvoke $r1.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object)>($r0, null, null, null, null);

        return $r1;
    }

    protected final com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0, $r2;
        java.lang.Class $r1;
        java.lang.String[] $r3;
        com.fasterxml.jackson.databind.JavaType[] $r4;
        java.lang.Object $r5, $r6;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 := @parameter0: java.lang.Class;

        $r2 = new com.fasterxml.jackson.databind.type.SimpleType;

        $r3 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.String[] _typeNames>;

        $r4 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters>;

        $r5 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _valueHandler>;

        $r6 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _typeHandler>;

        specialinvoke $r2.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object)>($r1, $r3, $r4, $r5, $r6);

        return $r2;
    }

    protected final java.lang.String buildCanonicalName()
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        java.lang.StringBuilder $r1;
        com.fasterxml.jackson.databind.JavaType[] $r2;
        int $i0, $i1;
        java.lang.Class $r3;
        java.lang.String $r4;
        boolean $z0;
        com.fasterxml.jackson.databind.JavaType $r5;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters>;

        if $r2 == null goto label5;

        $r2 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters>;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label5;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);

        $z0 = 1;

        $r2 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r5 = $r2[$i1];

        if $z0 == 0 goto label3;

        $z0 = 0;

     label2:
        $r4 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JavaType: java.lang.String toCanonical()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label2;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

     label5:
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public final com.fasterxml.jackson.databind.JavaType containedType(int)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        int $i0, $i1;
        com.fasterxml.jackson.databind.JavaType[] $r1;
        com.fasterxml.jackson.databind.JavaType $r2;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters>;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r1 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public final int containedTypeCount()
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        com.fasterxml.jackson.databind.JavaType[] $r1;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public final java.lang.String containedTypeName(int)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        int $i0, $i1;
        java.lang.String[] $r1;
        java.lang.String $r2;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.String[] _typeNames>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.String[] _typeNames>;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r1 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.String[] _typeNames>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public final boolean equals(java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0, $r6;
        com.fasterxml.jackson.databind.JavaType[] $r1, $r7;
        com.fasterxml.jackson.databind.JavaType $r2, $r8;
        java.lang.Object $r3;
        java.lang.Class $r4, $r5;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r3 := @parameter0: java.lang.Object;

        if $r3 != $r0 goto label01;

        return 1;

     label01:
        if $r3 != null goto label02;

        return 0;

     label02:
        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r4 == $r5 goto label03;

        return 0;

     label03:
        $r6 = (com.fasterxml.jackson.databind.type.SimpleType) $r3;

        $r4 = $r6.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;

        $r5 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;

        if $r4 == $r5 goto label04;

        return 0;

     label04:
        $r7 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters>;

        $r1 = $r6.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters>;

        if $r7 != null goto label05;

        if $r1 == null goto label10;

        $i0 = lengthof $r1;

        if $i0 == 0 goto label10;

        return 0;

     label05:
        if $r1 != null goto label06;

        return 0;

     label06:
        $i0 = lengthof $r7;

        $i1 = lengthof $r1;

        if $i0 == $i1 goto label07;

        return 0;

     label07:
        $i0 = lengthof $r7;

        $i1 = 0;

     label08:
        if $i1 >= $i0 goto label10;

        $r8 = $r7[$i1];

        $r2 = $r1[$i1];

        $z0 = virtualinvoke $r8.<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label09;

        return 0;

     label09:
        $i1 = $i1 + 1;

        goto label08;

     label10:
        return 1;
    }

    public final boolean isContainerType()
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        return 0;
    }

    public final com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        java.lang.Class $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 := @parameter0: java.lang.Class;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Internal error: SimpleType.narrowContentsBy() should never be called");

        throw $r2;
    }

    public final java.lang.String toString()
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        java.lang.StringBuilder $r1, $r2;
        java.lang.String $r3;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(40);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[simple type, class ");

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.String buildCanonicalName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public final com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        java.lang.Class $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 := @parameter0: java.lang.Class;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Internal error: SimpleType.widenContentsBy() should never be called");

        throw $r2;
    }

    public final com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Simple types have no content types; can not call withContenTypeHandler()");

        throw $r2;
    }

    public final volatile com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        java.lang.Object $r1;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 := @parameter0: java.lang.Object;

        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.SimpleType withContentValueHandler(java.lang.Object)>($r1);

        return $r0;
    }

    public final com.fasterxml.jackson.databind.type.SimpleType withContentValueHandler(java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Simple types have no content types; can not call withContenValueHandler()");

        throw $r2;
    }

    public final volatile com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        java.lang.Object $r1;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 := @parameter0: java.lang.Object;

        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.SimpleType withTypeHandler(java.lang.Object)>($r1);

        return $r0;
    }

    public final com.fasterxml.jackson.databind.type.SimpleType withTypeHandler(java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0, $r2;
        java.lang.Object $r1, $r6;
        java.lang.Class $r3;
        java.lang.String[] $r4;
        com.fasterxml.jackson.databind.JavaType[] $r5;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new com.fasterxml.jackson.databind.type.SimpleType;

        $r3 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;

        $r4 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.String[] _typeNames>;

        $r5 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters>;

        $r6 = $r0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _valueHandler>;

        specialinvoke $r2.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object)>($r3, $r4, $r5, $r6, $r1);

        return $r2;
    }

    public final volatile com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.SimpleType $r0;
        java.lang.Object $r1;

        $r0 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r1 := @parameter0: java.lang.Object;

        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.SimpleType withValueHandler(java.lang.Object)>($r1);

        return $r0;
    }

    public final com.fasterxml.jackson.databind.type.SimpleType withValueHandler(java.lang.Object)
    {
        java.lang.Object $r0, $r4;
        java.lang.Class $r1;
        java.lang.String[] $r2;
        com.fasterxml.jackson.databind.JavaType[] $r3;
        com.fasterxml.jackson.databind.type.SimpleType $r5, $r6;

        $r5 := @this: com.fasterxml.jackson.databind.type.SimpleType;

        $r0 := @parameter0: java.lang.Object;

        $r4 = $r5.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _valueHandler>;

        if $r0 != $r4 goto label1;

        return $r5;

     label1:
        $r6 = new com.fasterxml.jackson.databind.type.SimpleType;

        $r1 = $r5.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;

        $r2 = $r5.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.String[] _typeNames>;

        $r3 = $r5.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _typeParameters>;

        $r4 = $r5.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _typeHandler>;

        specialinvoke $r6.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object)>($r1, $r2, $r3, $r0, $r4);

        return $r6;
    }
}
