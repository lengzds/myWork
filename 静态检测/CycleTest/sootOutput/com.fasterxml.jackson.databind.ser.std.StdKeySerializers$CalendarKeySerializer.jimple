public class com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer
{
    protected static final com.fasterxml.jackson.databind.JsonSerializer instance;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer $r0;

        $r0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer: void <init>()>();

        <com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer: com.fasterxml.jackson.databind.JsonSerializer instance> = $r0;

        return;
    }

    public void <init>()
    {
        com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer $r0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class)>(class "java/util/Calendar");

        return;
    }

    public volatile void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        java.lang.Object $r3;
        java.util.Calendar $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.util.Calendar) $r3;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer: void serialize(java.util.Calendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r4, $r1, $r2);

        return;
    }

    public void serialize(java.util.Calendar, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer $r0;
        java.util.Calendar $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        long $l0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer;

        $r1 := @parameter0: java.util.Calendar;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $l0 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeDateKey(long,com.fasterxml.jackson.core.JsonGenerator)>($l0, $r2);

        return;
    }
}
