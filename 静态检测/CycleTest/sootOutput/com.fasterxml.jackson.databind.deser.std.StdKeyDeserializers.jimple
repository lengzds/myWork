public class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers extends java.lang.Object
{
    protected final java.util.HashMap _keyDeserializers;

    protected void <init>()
    {
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers $r0;
        java.util.HashMap $r1;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$BoolKD $r2;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$ByteKD $r3;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$CharKD $r4;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$ShortKD $r5;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$IntKD $r6;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$LongKD $r7;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$FloatKD $r8;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DoubleKD $r9;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DateKD $r10;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$CalendarKD $r11;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$UuidKD $r12;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: java.util.HashMap _keyDeserializers> = $r1;

        $r2 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$BoolKD;

        specialinvoke $r2.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$BoolKD: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: void add(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer)>($r2);

        $r3 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$ByteKD;

        specialinvoke $r3.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$ByteKD: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: void add(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer)>($r3);

        $r4 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$CharKD;

        specialinvoke $r4.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$CharKD: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: void add(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer)>($r4);

        $r5 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$ShortKD;

        specialinvoke $r5.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$ShortKD: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: void add(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer)>($r5);

        $r6 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$IntKD;

        specialinvoke $r6.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$IntKD: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: void add(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer)>($r6);

        $r7 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$LongKD;

        specialinvoke $r7.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$LongKD: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: void add(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer)>($r7);

        $r8 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$FloatKD;

        specialinvoke $r8.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$FloatKD: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: void add(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer)>($r8);

        $r9 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DoubleKD;

        specialinvoke $r9.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DoubleKD: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: void add(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer)>($r9);

        $r10 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DateKD;

        specialinvoke $r10.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DateKD: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: void add(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer)>($r10);

        $r11 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$CalendarKD;

        specialinvoke $r11.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$CalendarKD: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: void add(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer)>($r11);

        $r12 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$UuidKD;

        specialinvoke $r12.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$UuidKD: void <init>()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: void add(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer)>($r12);

        return;
    }

    private void add(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer)
    {
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers $r0;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer $r1;
        java.util.HashMap $r2;
        java.lang.Class $r3;
        com.fasterxml.jackson.databind.type.TypeFactory $r4;
        com.fasterxml.jackson.databind.JavaType $r5;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers;

        $r1 := @parameter0: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class getKeyClass()>();

        $r2 = $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: java.util.HashMap _keyDeserializers>;

        $r4 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()>();

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>($r3);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r1);

        return;
    }

    public static java.util.HashMap constructAll()
    {
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers $r0;
        java.util.HashMap r1;

        $r0 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: void <init>()>();

        r1 = $r0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers: java.util.HashMap _keyDeserializers>;

        return r1;
    }

    public static com.fasterxml.jackson.databind.KeyDeserializer constructDelegatingKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonDeserializer)
    {
        com.fasterxml.jackson.databind.DeserializationConfig $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.JsonDeserializer $r2;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD $r3;
        java.lang.Class $r4;

        $r0 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;

        $r1 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;

        $r3 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        specialinvoke $r3.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD: void <init>(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>($r4, $r2);

        return $r3;
    }

    public static com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver)
    {
        com.fasterxml.jackson.databind.util.EnumResolver $r0;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD $r1;

        $r0 := @parameter0: com.fasterxml.jackson.databind.util.EnumResolver;

        $r1 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD;

        specialinvoke $r1.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD: void <init>(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>($r0, null);

        return $r1;
    }

    public static com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver, com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
    {
        com.fasterxml.jackson.databind.util.EnumResolver $r0;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r1;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD $r2;

        $r0 := @parameter0: com.fasterxml.jackson.databind.util.EnumResolver;

        $r1 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r2 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD;

        specialinvoke $r2.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD: void <init>(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>($r0, $r1);

        return $r2;
    }

    public static com.fasterxml.jackson.databind.KeyDeserializer constructStringKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.DeserializationConfig $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        java.lang.Class $r2;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD $r3;

        $r0 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;

        $r1 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $r2 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r3 = staticinvoke <com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD forType(java.lang.Class)>($r2);

        return $r3;
    }

    public static com.fasterxml.jackson.databind.KeyDeserializer findStringBasedKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.DeserializationConfig $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r4;
        boolean $z0;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer $r5;
        java.lang.reflect.Method $r6;
        com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer $r7;

        $r0 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;

        $r1 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $r2 = virtualinvoke $r0.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>($r1);

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "java/lang/String";

        $r4 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[])>($r3);

        if $r4 == null goto label2;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.DeserializationConfig: boolean canOverrideAccessModifiers()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r4);

     label1:
        $r5 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer;

        specialinvoke $r5.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer: void <init>(java.lang.reflect.Constructor)>($r4);

        return $r5;

     label2:
        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "java/lang/String";

        $r6 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: java.lang.reflect.Method findFactoryMethod(java.lang.Class[])>($r3);

        if $r6 == null goto label4;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.DeserializationConfig: boolean canOverrideAccessModifiers()>();

        if $z0 == 0 goto label3;

        staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r6);

     label3:
        $r7 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer;

        specialinvoke $r7.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer: void <init>(java.lang.reflect.Method)>($r6);

        return $r7;

     label4:
        return null;
    }
}
