public final class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer extends com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase
{

    public void <init>(com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        boolean $z0;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r2;
        com.fasterxml.jackson.databind.BeanProperty $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r3 := @parameter3: com.fasterxml.jackson.databind.BeanProperty;

        $r4 := @parameter4: com.fasterxml.jackson.databind.JsonSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)>(class "java/util/List", $r1, $z0, $r2, $r3, $r4);

        return;
    }

    public void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r0, $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>($r1, $r2, $r3, $r4);

        return;
    }

    public final com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r0, $r2;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r1;
        com.fasterxml.jackson.databind.JavaType $r3;
        boolean $z0;
        com.fasterxml.jackson.databind.BeanProperty $r4;
        com.fasterxml.jackson.databind.JsonSerializer $r5;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r2 = new com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r3 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.JavaType _elementType>;

        $z0 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: boolean _staticTyping>;

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        specialinvoke $r2.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)>($r3, $z0, $r1, $r4, $r5);

        return $r2;
    }

    public final volatile boolean hasSingleElement(java.lang.Object)
    {
        com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.List $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) $r1;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: boolean hasSingleElement(java.util.List)>($r2);

        return $z0;
    }

    public final boolean hasSingleElement(java.util.List)
    {
        com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r0;
        java.util.List $r1;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final volatile boolean isEmpty(java.lang.Object)
    {
        com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.List $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) $r1;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: boolean isEmpty(java.util.List)>($r2);

        return $z0;
    }

    public final boolean isEmpty(java.util.List)
    {
        com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r0;
        java.util.List $r1;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r1 := @parameter0: java.util.List;

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public final volatile void serializeContents(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        java.lang.Object $r3;
        java.util.List $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.util.List) $r3;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r4, $r1, $r2);

        return;
    }

    public final void serializeContents(java.util.List, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r0;
        java.util.List $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4, $r9;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r5;
        int $i0, $i1;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r6;
        java.lang.Object $r7;
        java.lang.Class $r8;
        com.fasterxml.jackson.databind.JavaType $r10;
        boolean $z0;
        java.lang.Exception $r11;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        if $r4 == null goto label01;

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serializeContentsUsing(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>($r1, $r2, $r3, $r4);

        return;

     label01:
        $r5 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        if $r5 == null goto label02;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serializeTypedContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

        return;

     label02:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 == 0 goto label21;

        $i1 = 0;

     label03:
        $r6 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

     label04:
        if $i1 >= $i0 goto label21;

     label05:
        $r7 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

     label06:
        if $r7 != null goto label09;

     label07:
        virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>($r2);

     label08:
        $i1 = $i1 + 1;

        goto label04;

     label09:
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r6.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>($r8);

     label10:
        $r9 = $r4;

        if $r4 != null goto label16;

     label11:
        $r10 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.JavaType _elementType>;

        $z0 = virtualinvoke $r10.<com.fasterxml.jackson.databind.JavaType: boolean hasGenericTypes()>();

     label12:
        if $z0 == 0 goto label19;

     label13:
        $r10 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.JavaType _elementType>;

        $r10 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r10, $r8);

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)>($r6, $r10, $r3);

     label14:
        $r6 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

     label15:
        $r9 = $r4;

     label16:
        virtualinvoke $r9.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r7, $r2, $r3);

     label17:
        goto label08;

     label18:
        $r11 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>($r3, $r11, $r1, $i1);

        return;

     label19:
        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>($r6, $r8, $r3);

     label20:
        goto label14;

     label21:
        return;

        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Exception from label09 to label10 with label18;
        catch java.lang.Exception from label11 to label12 with label18;
        catch java.lang.Exception from label13 to label14 with label18;
        catch java.lang.Exception from label14 to label15 with label18;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Exception from label19 to label20 with label18;
    }

    public final void serializeContentsUsing(java.util.List, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r0;
        java.util.List $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r5;
        int $i0, $i1;
        java.lang.Object $r6;
        java.lang.Exception $r7;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label01;

        return;

     label01:
        $r5 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        $i1 = 0;

     label02:
        if $i1 >= $i0 goto label11;

        $r6 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        if $r6 != null goto label05;

     label03:
        virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>($r2);

     label04:
        $i1 = $i1 + 1;

        goto label02;

     label05:
        if $r5 != null goto label09;

     label06:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r6, $r2, $r3);

     label07:
        goto label04;

     label08:
        $r7 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>($r3, $r7, $r1, $i1);

        goto label04;

     label09:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r6, $r2, $r3, $r5);

     label10:
        goto label04;

     label11:
        return;

        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Exception from label09 to label10 with label08;
    }

    public final void serializeTypedContents(java.util.List, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r0;
        java.util.List $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r4;
        int $i0, $i1;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r5;
        java.lang.Object $r6;
        java.lang.Class $r7;
        com.fasterxml.jackson.databind.JsonSerializer $r8, $r9;
        com.fasterxml.jackson.databind.JavaType $r10;
        boolean $z0;
        java.lang.Exception $r11;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label01;

        return;

     label01:
        $i1 = 0;

     label02:
        $r4 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

     label03:
        if $i1 >= $i0 goto label20;

     label04:
        $r6 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

     label05:
        if $r6 != null goto label08;

     label06:
        virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>($r2);

     label07:
        $i1 = $i1 + 1;

        goto label03;

     label08:
        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>($r7);

     label09:
        $r9 = $r8;

        if $r8 != null goto label15;

     label10:
        $r10 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.JavaType _elementType>;

        $z0 = virtualinvoke $r10.<com.fasterxml.jackson.databind.JavaType: boolean hasGenericTypes()>();

     label11:
        if $z0 == 0 goto label18;

     label12:
        $r10 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.JavaType _elementType>;

        $r10 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r10, $r7);

        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)>($r5, $r10, $r3);

     label13:
        $r5 = $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

     label14:
        $r9 = $r8;

     label15:
        virtualinvoke $r9.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r6, $r2, $r3, $r4);

     label16:
        goto label07;

     label17:
        $r11 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>($r3, $r11, $r1, $i1);

        return;

     label18:
        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>($r5, $r7, $r3);

     label19:
        goto label13;

     label20:
        return;

        catch java.lang.Exception from label02 to label03 with label17;
        catch java.lang.Exception from label04 to label05 with label17;
        catch java.lang.Exception from label06 to label07 with label17;
        catch java.lang.Exception from label08 to label09 with label17;
        catch java.lang.Exception from label10 to label11 with label17;
        catch java.lang.Exception from label12 to label13 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Exception from label18 to label19 with label17;
    }

    public final com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r0, $r4;
        com.fasterxml.jackson.databind.BeanProperty $r1;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;

        $r2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;

        $r4 = new com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        specialinvoke $r4.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>($r0, $r1, $r2, $r3);

        return $r4;
    }

    public final volatile com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r0;
        com.fasterxml.jackson.databind.BeanProperty $r1;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;

        $r2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;

        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>($r1, $r2, $r3);

        return $r0;
    }
}
