public final class com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap extends java.lang.Object
{
    protected final com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey _cacheKey;
    protected final com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap _map;

    private void <init>(com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap)
    {
        com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r0;
        com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap $r1;
        com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey $r2;
        java.lang.Class $r3;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey;

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r2.<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: void <init>(java.lang.Class,boolean)>($r3, 0);

        $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey _cacheKey> = $r2;

        $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap _map> = $r1;

        return;
    }

    public static com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap 'from'(java.util.HashMap)
    {
        java.util.HashMap $r0;
        com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r1;
        com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap $r2;

        $r0 := @parameter0: java.util.HashMap;

        $r1 = new com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;

        $r2 = new com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap;

        specialinvoke $r2.<com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap: void <init>(java.util.Map)>($r0);

        specialinvoke $r1.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: void <init>(com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap)>($r2);

        return $r1;
    }

    public final com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap instance()
    {
        com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r0, $r1;
        com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;

        $r1 = new com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap _map>;

        specialinvoke $r1.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: void <init>(com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap)>($r2);

        return $r1;
    }

    public final com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3;
        com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey _cacheKey>;

        virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: void resetTyped(com.fasterxml.jackson.databind.JavaType)>($r1);

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap _map>;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey _cacheKey>;

        $r3 = virtualinvoke $r4.<com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap: com.fasterxml.jackson.databind.JsonSerializer find(com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey)>($r2);

        return $r3;
    }

    public final com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class)
    {
        com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r0;
        java.lang.Class $r1;
        com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3;
        com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;

        $r1 := @parameter0: java.lang.Class;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey _cacheKey>;

        virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: void resetTyped(java.lang.Class)>($r1);

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap _map>;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey _cacheKey>;

        $r3 = virtualinvoke $r4.<com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap: com.fasterxml.jackson.databind.JsonSerializer find(com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey)>($r2);

        return $r3;
    }

    public final com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3;
        com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey _cacheKey>;

        virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: void resetUntyped(com.fasterxml.jackson.databind.JavaType)>($r1);

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap _map>;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey _cacheKey>;

        $r3 = virtualinvoke $r4.<com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap: com.fasterxml.jackson.databind.JsonSerializer find(com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey)>($r2);

        return $r3;
    }

    public final com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)
    {
        com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r0;
        java.lang.Class $r1;
        com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3;
        com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;

        $r1 := @parameter0: java.lang.Class;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey _cacheKey>;

        virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: void resetUntyped(java.lang.Class)>($r1);

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap _map>;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey _cacheKey>;

        $r3 = virtualinvoke $r4.<com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap: com.fasterxml.jackson.databind.JsonSerializer find(com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey)>($r2);

        return $r3;
    }
}
