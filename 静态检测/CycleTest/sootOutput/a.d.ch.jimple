final class a.d.ch extends a.d.as
{
    private int a;

    void <init>(java.lang.String, int)
    {
        a.d.ch $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: a.d.ch;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<a.d.as: void <init>()>();

        $r0.<a.d.ch: java.lang.String T> = $r1;

        $r0.<a.d.ch: int a> = $i0;

        $r0.<a.d.ch: byte g> = 37;

        $r0.<a.d.ch: byte S> = 35;

        $r0.<a.d.ch: int Q> = -1;

        $r0.<a.d.ch: int N> = 6;

        $r0.<a.d.ch: int O> = 1;

        $r0.<a.d.ch: byte P> = 0;

        $r0.<a.d.ch: int R> = 2;

        return;
    }

    final int a(byte[], int)
    {
        a.d.ch $r0;
        byte[] $r1;
        int $i0, $i1;
        byte $b2;
        long $l3;

        $r0 := @this: a.d.ch;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = $i0 + 1;

        $b2 = $r0.<a.d.ch: byte S>;

        $r1[$i0] = $b2;

        $i0 = $i1 + 1;

        $r1[$i1] = 0;

        $i1 = $r0.<a.d.ch: int a>;

        $l3 = (long) $i1;

        staticinvoke <a.d.ch: void a(long,byte[],int)>($l3, $r1, $i0);

        return 4;
    }

    final int b(byte[], int)
    {
        a.d.ch $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.ch;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    final int c(byte[], int)
    {
        a.d.ch $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.ch;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    public final java.lang.String toString()
    {
        a.d.ch $r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder $r2;

        $r0 := @this: a.d.ch;

        $r1 = new java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("TransPeekNamedPipe[");

        $r3 = specialinvoke $r0.<a.d.as: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",pipeName=");

        $r3 = $r0.<a.d.ch: java.lang.String T>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>($r3);

        return $r1;
    }
}
