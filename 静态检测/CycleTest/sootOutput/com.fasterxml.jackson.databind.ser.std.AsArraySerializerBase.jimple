public abstract class com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase extends com.fasterxml.jackson.databind.ser.ContainerSerializer implements com.fasterxml.jackson.databind.ser.ContextualSerializer
{
    protected com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers;
    protected final com.fasterxml.jackson.databind.JsonSerializer _elementSerializer;
    protected final com.fasterxml.jackson.databind.JavaType _elementType;
    protected final com.fasterxml.jackson.databind.BeanProperty _property;
    protected final boolean _staticTyping;
    protected final com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer;

    protected void <init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase $r0, $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4;
        com.fasterxml.jackson.databind.JavaType $r5;
        boolean $z0;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r6;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(com.fasterxml.jackson.databind.ser.ContainerSerializer)>($r1);

        $r5 = $r1.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType>;

        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType> = $r5;

        $z0 = $r1.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: boolean _staticTyping>;

        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: boolean _staticTyping> = $z0;

        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = $r3;

        $r2 = $r1.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;

        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property> = $r2;

        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer> = $r4;

        $r6 = $r1.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r6;

        return;
    }

    protected void <init>(java.lang.Class, com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase $r0;
        java.lang.Class $r1;
        com.fasterxml.jackson.databind.JavaType $r2;
        boolean $z0, $z1;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r3;
        com.fasterxml.jackson.databind.BeanProperty $r4;
        com.fasterxml.jackson.databind.JsonSerializer $r5;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r6;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r4 := @parameter4: com.fasterxml.jackson.databind.BeanProperty;

        $r5 := @parameter5: com.fasterxml.jackson.databind.JsonSerializer;

        $z1 = 0;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>($r1, 0);

        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType> = $r2;

        if $z0 != 0 goto label1;

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.JavaType: boolean isFinal()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

     label2:
        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: boolean _staticTyping> = $z1;

        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = $r3;

        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property> = $r4;

        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer> = $r5;

        $r6 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyMap()>();

        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r6;

        return;
    }

    protected final com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase $r0;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r1, $r6;
        com.fasterxml.jackson.databind.JavaType $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult $r4;
        com.fasterxml.jackson.databind.BeanProperty $r5;
        com.fasterxml.jackson.databind.JsonSerializer r7;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>($r2, $r3, $r5);

        $r6 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        if $r1 == $r6 goto label1;

        $r1 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r1;

     label1:
        r7 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.JsonSerializer serializer>;

        return r7;
    }

    protected final com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, java.lang.Class, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase $r0;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r1, $r6;
        java.lang.Class $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult $r4;
        com.fasterxml.jackson.databind.BeanProperty $r5;
        com.fasterxml.jackson.databind.JsonSerializer r7;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>($r2, $r3, $r5);

        $r6 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        if $r1 == $r6 goto label1;

        $r1 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r1;

     label1:
        r7 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.JsonSerializer serializer>;

        return r7;
    }

    public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.BeanProperty $r1, $r7;
        com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase $r2;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r3, $r8;
        com.fasterxml.jackson.databind.JsonSerializer $r4, $r6;
        boolean $z0;
        com.fasterxml.jackson.databind.JavaType $r5;
        com.fasterxml.jackson.databind.ser.ContextualSerializer $r9;

        $r2 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;

        $r0 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 = $r2.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        if $r3 == null goto label5;

        $r3 = virtualinvoke $r3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty)>($r1);

     label1:
        $r4 = $r2.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        if $r4 != null goto label4;

        $z0 = $r2.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: boolean _staticTyping>;

        if $z0 == 0 goto label2;

        $r5 = $r2.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType>;

        if $r5 == null goto label2;

        $r5 = $r2.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType>;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r5, $r1);

     label2:
        $r6 = $r2.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        if $r4 != $r6 goto label3;

        $r7 = $r2.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;

        if $r1 != $r7 goto label3;

        $r8 = $r2.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        if $r8 == $r3 goto label6;

     label3:
        $r2 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>($r1, $r3, $r4);

        return $r2;

     label4:
        $z0 = $r4 instanceof com.fasterxml.jackson.databind.ser.ContextualSerializer;

        if $z0 == 0 goto label2;

        $r9 = (com.fasterxml.jackson.databind.ser.ContextualSerializer) $r4;

        $r4 = interfaceinvoke $r9.<com.fasterxml.jackson.databind.ser.ContextualSerializer: com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>($r0, $r1);

        goto label2;

     label5:
        goto label1;

     label6:
        return $r2;
    }

    public final void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase $r0;
        java.lang.Object $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.SerializationFeature $r4;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;

        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r4);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: boolean hasSingleElement(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

        return;

     label1:
        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();

        return;
    }

    protected abstract void serializeContents(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider);

    public final void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase $r0;
        java.lang.Object $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        virtualinvoke $r4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>($r1, $r2);

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

        virtualinvoke $r4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>($r1, $r2);

        return;
    }

    public abstract com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer);
}
