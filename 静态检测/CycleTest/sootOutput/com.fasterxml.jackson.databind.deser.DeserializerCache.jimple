public final class com.fasterxml.jackson.databind.deser.DeserializerCache extends java.lang.Object
{
    protected final java.util.concurrent.ConcurrentHashMap _cachedDeserializers;
    protected final java.util.HashMap _incompleteDeserializers;

    public void <init>()
    {
        com.fasterxml.jackson.databind.deser.DeserializerCache $r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.util.HashMap $r2;

        $r0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(64, 0.75F, 2);

        $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.concurrent.ConcurrentHashMap _cachedDeserializers> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(8);

        $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers> = $r2;

        return;
    }

    private java.lang.Class _verifyAsClass(java.lang.Object, java.lang.String, java.lang.Class)
    {
        com.fasterxml.jackson.databind.deser.DeserializerCache $r0;
        java.lang.String $r1;
        java.lang.Class $r2, $r6;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;

        $r0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class;

        if $r3 != null goto label1;

        return null;

     label1:
        $z0 = $r3 instanceof java.lang.Class;

        if $z0 != 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("AnnotationIntrospector.");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() returned value of type ");

        $r2 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": expected type JsonSerializer or Class<JsonSerializer> instead");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label2:
        $r6 = (java.lang.Class) $r3;

        if $r6 == $r2 goto label3;

        if $r6 != class "com/fasterxml/jackson/databind/annotation/NoClass" goto label4;

     label3:
        return null;

     label4:
        return $r6;
    }

    private com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.introspect.Annotated, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.deser.DeserializerCache $r0;
        com.fasterxml.jackson.databind.DeserializationContext $r1;
        com.fasterxml.jackson.databind.introspect.Annotated $r2;
        com.fasterxml.jackson.databind.JavaType $r3, $r6;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r4;
        java.lang.Class $r5;
        boolean $z0;
        com.fasterxml.jackson.databind.JsonMappingException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        java.lang.IllegalArgumentException $r10, $r15, $r16;
        com.fasterxml.jackson.databind.type.MapLikeType $r11;
        java.lang.Object $r12;
        com.fasterxml.jackson.databind.KeyDeserializer $r13;
        com.fasterxml.jackson.databind.JsonDeserializer $r14;

        $r0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;

        $r2 := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JavaType;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Class findDeserializationType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>($r2, $r3);

        if $r5 == null goto label16;

     label01:
        $r3 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType narrowBy(java.lang.Class)>($r5);

     label02:
        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z0 == 0 goto label15;

        $r6 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getKeyType()>();

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Class findDeserializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>($r2, $r6);

        if $r5 == null goto label14;

        $z0 = $r3 instanceof com.fasterxml.jackson.databind.type.MapLikeType;

        if $z0 != 0 goto label04;

        $r7 = new com.fasterxml.jackson.databind.JsonMappingException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Illegal key-type annotation: type ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a Map(-like) type");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label03:
        $r10 := @caughtexception;

        $r7 = new com.fasterxml.jackson.databind.JsonMappingException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to narrow type ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with concrete-type annotation (value ");

        $r9 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), method \'");

        $r9 = virtualinvoke $r2.<com.fasterxml.jackson.databind.introspect.Annotated: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r9 = virtualinvoke $r10.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>($r9, null, $r10);

        throw $r7;

     label04:
        $r11 = (com.fasterxml.jackson.databind.type.MapLikeType) $r3;

     label05:
        $r3 = virtualinvoke $r11.<com.fasterxml.jackson.databind.type.MapLikeType: com.fasterxml.jackson.databind.JavaType narrowKey(java.lang.Class)>($r5);

     label06:
        $r6 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getKeyType()>();

        if $r6 == null goto label07;

        $r12 = virtualinvoke $r6.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();

        if $r12 != null goto label07;

        $r12 = virtualinvoke $r4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)>($r2);

        if $r12 == null goto label07;

        $r13 = virtualinvoke $r1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>($r2, $r12);

        if $r13 == null goto label07;

        $r11 = (com.fasterxml.jackson.databind.type.MapLikeType) $r3;

        $r11 = virtualinvoke $r11.<com.fasterxml.jackson.databind.type.MapLikeType: com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object)>($r13);

        $r3 = $r11;

        virtualinvoke $r11.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getKeyType()>();

     label07:
        $r6 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Class findDeserializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>($r2, $r6);

        if $r5 == null goto label09;

     label08:
        $r3 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class)>($r5);

     label09:
        $r6 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();

        $r12 = virtualinvoke $r6.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();

        if $r12 != null goto label17;

        $r12 = virtualinvoke $r4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)>($r2);

        if $r12 == null goto label17;

        $z0 = $r12 instanceof com.fasterxml.jackson.databind.JsonDeserializer;

        if $z0 != 0 goto label13;

        $r5 = specialinvoke $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.lang.Class _verifyAsClass(java.lang.Object,java.lang.String,java.lang.Class)>($r12, "findContentDeserializer", class "com/fasterxml/jackson/databind/JsonDeserializer$None");

        if $r5 == null goto label13;

        $r14 = virtualinvoke $r1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>($r2, $r5);

     label10:
        if $r14 == null goto label17;

        $r3 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object)>($r14);

        return $r3;

     label11:
        $r15 := @caughtexception;

        $r7 = new com.fasterxml.jackson.databind.JsonMappingException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to narrow key type ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with key-type annotation (");

        $r9 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r9 = virtualinvoke $r15.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>($r9, null, $r15);

        throw $r7;

     label12:
        $r16 := @caughtexception;

        $r7 = new com.fasterxml.jackson.databind.JsonMappingException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to narrow content type ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with content-type annotation (");

        $r9 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r9 = virtualinvoke $r16.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>($r9, null, $r16);

        throw $r7;

     label13:
        $r14 = null;

        goto label10;

     label14:
        goto label06;

     label15:
        return $r3;

     label16:
        goto label02;

     label17:
        return $r3;

        catch java.lang.IllegalArgumentException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label08 to label09 with label12;
    }

    protected final com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.deser.DeserializerCache $r0;
        com.fasterxml.jackson.databind.DeserializationContext $r1;
        com.fasterxml.jackson.databind.deser.DeserializerFactory $r2;
        com.fasterxml.jackson.databind.JavaType $r3;
        com.fasterxml.jackson.databind.JsonDeserializer $r4;
        java.lang.IllegalArgumentException $r5;
        com.fasterxml.jackson.databind.JsonMappingException $r6;
        java.lang.String $r7;
        boolean $z0, $z1;
        java.util.HashMap $r8;
        com.fasterxml.jackson.databind.deser.ResolvableDeserializer $r9;
        java.util.concurrent.ConcurrentHashMap $r10;

        $r0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;

        $r2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JavaType;

     label1:
        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>($r1, $r2, $r3);

     label2:
        if $r4 != null goto label4;

        return null;

     label3:
        $r5 := @caughtexception;

        $r6 = new com.fasterxml.jackson.databind.JsonMappingException;

        $r7 = virtualinvoke $r5.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r6.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>($r7, null, $r5);

        throw $r6;

     label4:
        $z0 = $r4 instanceof com.fasterxml.jackson.databind.deser.ResolvableDeserializer;

        $z1 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonDeserializer: boolean isCachable()>();

        if $z0 == 0 goto label5;

        $r8 = $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r9 = (com.fasterxml.jackson.databind.deser.ResolvableDeserializer) $r4;

        interfaceinvoke $r9.<com.fasterxml.jackson.databind.deser.ResolvableDeserializer: void resolve(com.fasterxml.jackson.databind.DeserializationContext)>($r1);

        $r8 = $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r3);

     label5:
        if $z1 == 0 goto label6;

        $r10 = $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.concurrent.ConcurrentHashMap _cachedDeserializers>;

        virtualinvoke $r10.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

     label6:
        return $r4;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    protected final com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.deser.DeserializerCache $r0;
        com.fasterxml.jackson.databind.DeserializationContext $r1;
        com.fasterxml.jackson.databind.deser.DeserializerFactory $r2;
        com.fasterxml.jackson.databind.JavaType $r3;
        java.util.HashMap $r4, $r6;
        com.fasterxml.jackson.databind.JsonDeserializer $r5;
        int $i0;
        java.lang.Object $r7;
        java.lang.Throwable $r8, $r9;

        $r0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;

        $r2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JavaType;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        entermonitor $r4;

     label01:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType)>($r3);

        if $r5 == null goto label03;

        exitmonitor $r4;

     label02:
        return $r5;

     label03:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        $i0 = virtualinvoke $r6.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label07;

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (com.fasterxml.jackson.databind.JsonDeserializer) $r7;

        if $r5 == null goto label07;

        exitmonitor $r4;

     label04:
        return $r5;

     label05:
        $r8 := @caughtexception;

        exitmonitor $r4;

     label06:
        throw $r8;

     label07:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>($r1, $r2, $r3);

     label08:
        if $i0 != 0 goto label10;

     label09:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        $i0 = virtualinvoke $r6.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label10;

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        virtualinvoke $r6.<java.util.HashMap: void clear()>();

     label10:
        exitmonitor $r4;

     label11:
        return $r5;

     label12:
        $r9 := @caughtexception;

        if $i0 != 0 goto label13;

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        $i0 = virtualinvoke $r6.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label13;

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        virtualinvoke $r6.<java.util.HashMap: void clear()>();

     label13:
        throw $r9;

     label14:
        nop;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label11 with label05;
        catch java.lang.Throwable from label12 to label14 with label05;
    }

    protected final com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.deser.DeserializerCache $r0;
        com.fasterxml.jackson.databind.DeserializationContext $r1;
        com.fasterxml.jackson.databind.deser.DeserializerFactory $r2;
        com.fasterxml.jackson.databind.JavaType $r3, $r8;
        com.fasterxml.jackson.databind.DeserializationConfig $r4;
        boolean $z0;
        com.fasterxml.jackson.databind.BeanDescription $r5;
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r6;
        com.fasterxml.jackson.databind.JsonDeserializer $r7;
        java.lang.Class $r9, $r15;
        com.fasterxml.jackson.databind.type.ArrayType $r10;
        com.fasterxml.jackson.databind.type.MapLikeType $r11;
        com.fasterxml.jackson.databind.type.MapType $r12;
        com.fasterxml.jackson.databind.type.CollectionLikeType $r13;
        com.fasterxml.jackson.databind.type.CollectionType $r14;

        $r0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;

        $r2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JavaType;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();

        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: boolean isAbstract()>();

        if $z0 != 0 goto label01;

        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();

        if $z0 != 0 goto label01;

        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: boolean isCollectionLikeType()>();

        if $z0 == 0 goto label02;

     label01:
        $r3 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JavaType mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)>($r4, $r3);

     label02:
        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>($r3);

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        $r7 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)>($r1, $r6);

        if $r7 == null goto label03;

        return $r7;

     label03:
        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        $r8 = specialinvoke $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>($r1, $r6, $r3);

        if $r8 == $r3 goto label13;

        $r3 = $r8;

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>($r8);

     label04:
        $r9 = virtualinvoke $r5.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class findPOJOBuilder()>();

        if $r9 == null goto label05;

        $r7 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class)>($r1, $r3, $r5, $r9);

        return $r7;

     label05:
        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: boolean isEnumType()>();

        if $z0 == 0 goto label06;

        $r7 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>($r1, $r3, $r5);

        return $r7;

     label06:
        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z0 == 0 goto label11;

        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: boolean isArrayType()>();

        if $z0 == 0 goto label07;

        $r10 = (com.fasterxml.jackson.databind.type.ArrayType) $r3;

        $r7 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription)>($r1, $r10, $r5);

        return $r7;

     label07:
        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();

        if $z0 == 0 goto label09;

        $r11 = (com.fasterxml.jackson.databind.type.MapLikeType) $r3;

        $z0 = virtualinvoke $r11.<com.fasterxml.jackson.databind.type.MapLikeType: boolean isTrueMapType()>();

        if $z0 == 0 goto label08;

        $r12 = (com.fasterxml.jackson.databind.type.MapType) $r11;

        $r7 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription)>($r1, $r12, $r5);

        return $r7;

     label08:
        $r7 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription)>($r1, $r11, $r5);

        return $r7;

     label09:
        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: boolean isCollectionLikeType()>();

        if $z0 == 0 goto label11;

        $r13 = (com.fasterxml.jackson.databind.type.CollectionLikeType) $r3;

        $z0 = virtualinvoke $r13.<com.fasterxml.jackson.databind.type.CollectionLikeType: boolean isTrueCollectionType()>();

        if $z0 == 0 goto label10;

        $r14 = (com.fasterxml.jackson.databind.type.CollectionType) $r13;

        $r7 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription)>($r1, $r14, $r5);

        return $r7;

     label10:
        $r7 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription)>($r1, $r13, $r5);

        return $r7;

     label11:
        $r9 = class "com/fasterxml/jackson/databind/JsonNode";

        $r15 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r15);

        if $z0 == 0 goto label12;

        $r7 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>($r4, $r3, $r5);

        return $r7;

     label12:
        $r7 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>($r1, $r3, $r5);

        return $r7;

     label13:
        goto label04;
    }

    protected final com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.deser.DeserializerCache $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        java.lang.Object $r2;
        java.lang.IllegalArgumentException $r3;
        java.util.concurrent.ConcurrentHashMap $r4;
        com.fasterxml.jackson.databind.JsonDeserializer $r5;

        $r0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null JavaType passed");

        throw $r3;

     label1:
        $r4 = $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.concurrent.ConcurrentHashMap _cachedDeserializers>;

        $r2 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.fasterxml.jackson.databind.JsonDeserializer) $r2;

        return $r5;
    }

    protected final com.fasterxml.jackson.databind.KeyDeserializer _handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.deser.DeserializerCache $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.JsonMappingException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 = new com.fasterxml.jackson.databind.JsonMappingException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can not find a (Map) Key deserializer for type ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    protected final com.fasterxml.jackson.databind.JsonDeserializer _handleUnknownValueDeserializer(com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.deser.DeserializerCache $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        java.lang.Class $r2;
        boolean $z0;
        com.fasterxml.jackson.databind.JsonMappingException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z0 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isConcrete(java.lang.Class)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new com.fasterxml.jackson.databind.JsonMappingException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can not find a Value deserializer for abstract type ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r3 = new com.fasterxml.jackson.databind.JsonMappingException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can not find a Value deserializer for type ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    protected final com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.introspect.Annotated)
    {
        com.fasterxml.jackson.databind.deser.DeserializerCache $r0;
        com.fasterxml.jackson.databind.DeserializationContext $r1;
        com.fasterxml.jackson.databind.introspect.Annotated $r2;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r3;
        java.lang.Object $r4;
        com.fasterxml.jackson.databind.JsonDeserializer $r5;

        $r0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;

        $r2 := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)>($r2);

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>($r2, $r4);

        return $r5;
    }

    public final com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.deser.DeserializerCache $r0;
        com.fasterxml.jackson.databind.DeserializationContext $r1;
        com.fasterxml.jackson.databind.deser.DeserializerFactory $r2;
        com.fasterxml.jackson.databind.JavaType $r3;
        com.fasterxml.jackson.databind.KeyDeserializer $r4;
        boolean $z0;
        com.fasterxml.jackson.databind.deser.ResolvableDeserializer $r5;

        $r0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;

        $r2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JavaType;

        $r4 = virtualinvoke $r2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>($r1, $r3);

        if $r4 != null goto label1;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.KeyDeserializer _handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.JavaType)>($r3);

        return $r4;

     label1:
        $z0 = $r4 instanceof com.fasterxml.jackson.databind.deser.ResolvableDeserializer;

        if $z0 == 0 goto label2;

        $r5 = (com.fasterxml.jackson.databind.deser.ResolvableDeserializer) $r4;

        interfaceinvoke $r5.<com.fasterxml.jackson.databind.deser.ResolvableDeserializer: void resolve(com.fasterxml.jackson.databind.DeserializationContext)>($r1);

     label2:
        return $r4;
    }

    public final com.fasterxml.jackson.databind.JsonDeserializer findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.deser.DeserializerCache $r0;
        com.fasterxml.jackson.databind.DeserializationContext $r1;
        com.fasterxml.jackson.databind.deser.DeserializerFactory $r2;
        com.fasterxml.jackson.databind.JavaType $r3;
        com.fasterxml.jackson.databind.JsonDeserializer $r4;

        $r0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;

        $r2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JavaType;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType)>($r3);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>($r1, $r2, $r3);

        if $r4 != null goto label2;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _handleUnknownValueDeserializer(com.fasterxml.jackson.databind.JavaType)>($r3);

     label2:
        return $r4;
    }
}
