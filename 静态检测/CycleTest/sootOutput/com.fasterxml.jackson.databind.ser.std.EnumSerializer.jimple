public class com.fasterxml.jackson.databind.ser.std.EnumSerializer extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer
{
    protected final com.fasterxml.jackson.databind.util.EnumValues _values;

    public void <init>(com.fasterxml.jackson.databind.util.EnumValues)
    {
        com.fasterxml.jackson.databind.ser.std.EnumSerializer $r0;
        com.fasterxml.jackson.databind.util.EnumValues $r1;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.util.EnumValues;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class,boolean)>(class "java/lang/Enum", 0);

        $r0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _values> = $r1;

        return;
    }

    public static com.fasterxml.jackson.databind.ser.std.EnumSerializer construct(java.lang.Class, com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription)
    {
        java.lang.Class $r0;
        com.fasterxml.jackson.databind.SerializationConfig $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r3;
        com.fasterxml.jackson.databind.SerializationFeature $r4;
        boolean $z0;
        com.fasterxml.jackson.databind.util.EnumValues $r5;
        com.fasterxml.jackson.databind.ser.std.EnumSerializer $r6;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: com.fasterxml.jackson.databind.SerializationConfig;

        $r2 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $r4 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING>;

        $z0 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r4);

        if $z0 == 0 goto label2;

        $r5 = staticinvoke <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues constructFromToString(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector)>($r0, $r3);

     label1:
        $r6 = new com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        specialinvoke $r6.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: void <init>(com.fasterxml.jackson.databind.util.EnumValues)>($r5);

        return $r6;

     label2:
        $r5 = staticinvoke <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues constructFromName(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector)>($r0, $r3);

        goto label1;
    }

    public com.fasterxml.jackson.databind.util.EnumValues getEnumValues()
    {
        com.fasterxml.jackson.databind.ser.std.EnumSerializer $r0;
        com.fasterxml.jackson.databind.util.EnumValues r1;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        r1 = $r0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _values>;

        return r1;
    }

    public final void serialize(java.lang.Enum, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.EnumSerializer $r0;
        java.lang.Enum $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.SerializationFeature $r4;
        boolean $z0;
        int $i0;
        com.fasterxml.jackson.databind.util.EnumValues $r5;
        com.fasterxml.jackson.core.io.SerializedString $r6;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        $r1 := @parameter0: java.lang.Enum;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_INDEX>;

        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r4);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<java.lang.Enum: int ordinal()>();

        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>($i0);

        return;

     label1:
        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _values>;

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.core.io.SerializedString serializedValueFor(java.lang.Enum)>($r1);

        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(com.fasterxml.jackson.core.SerializableString)>($r6);

        return;
    }

    public volatile void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.EnumSerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        java.lang.Object $r3;
        java.lang.Enum $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.lang.Enum) $r3;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: void serialize(java.lang.Enum,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r4, $r1, $r2);

        return;
    }
}
