public class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer extends com.fasterxml.jackson.databind.ser.std.ArraySerializerBase implements com.fasterxml.jackson.databind.ser.ContextualSerializer
{
    protected com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers;
    protected com.fasterxml.jackson.databind.JsonSerializer _elementSerializer;
    protected final com.fasterxml.jackson.databind.JavaType _elementType;
    protected final boolean _staticTyping;
    protected final com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer;

    public void <init>(com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        boolean $z0;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r3 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void <init>(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>(class "[Ljava/lang/Object;", null);

        $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JavaType _elementType> = $r1;

        $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: boolean _staticTyping> = $z0;

        $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = $r2;

        $r4 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyMap()>();

        $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r4;

        $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer> = $r3;

        return;
    }

    public void <init>(com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0, $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4;
        com.fasterxml.jackson.databind.JavaType $r5;
        boolean $z0;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r6;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        $r5 = $r1.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JavaType _elementType>;

        $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JavaType _elementType> = $r5;

        $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = $r3;

        $z0 = $r1.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: boolean _staticTyping>;

        $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: boolean _staticTyping> = $z0;

        $r6 = $r1.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

        $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r6;

        $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer> = $r4;

        return;
    }

    protected final com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r1, $r6;
        com.fasterxml.jackson.databind.JavaType $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult $r4;
        com.fasterxml.jackson.databind.BeanProperty $r5;
        com.fasterxml.jackson.databind.JsonSerializer r7;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.BeanProperty _property>;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>($r2, $r3, $r5);

        $r6 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        if $r1 == $r6 goto label1;

        $r1 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r1;

     label1:
        r7 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.JsonSerializer serializer>;

        return r7;
    }

    protected final com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, java.lang.Class, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r1, $r6;
        java.lang.Class $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult $r4;
        com.fasterxml.jackson.databind.BeanProperty $r5;
        com.fasterxml.jackson.databind.JsonSerializer r7;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.BeanProperty _property>;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>($r2, $r3, $r5);

        $r6 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        if $r1 == $r6 goto label1;

        $r1 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r1;

     label1:
        r7 = $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.JsonSerializer serializer>;

        return r7;
    }

    public com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0, $r2;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r1;
        com.fasterxml.jackson.databind.JavaType $r3;
        boolean $z0;
        com.fasterxml.jackson.databind.JsonSerializer $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r2 = new com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r3 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JavaType _elementType>;

        $z0 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: boolean _staticTyping>;

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        specialinvoke $r2.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>($r3, $z0, $r1, $r4);

        return $r2;
    }

    public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0;
        com.fasterxml.jackson.databind.SerializerProvider $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4;
        boolean $z0;
        com.fasterxml.jackson.databind.JavaType $r5;
        com.fasterxml.jackson.databind.ser.ContextualSerializer $r6;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        if $r3 == null goto label4;

        $r3 = virtualinvoke $r3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty)>($r2);

     label1:
        $r4 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        if $r4 != null goto label3;

        $z0 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: boolean _staticTyping>;

        if $z0 == 0 goto label2;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JavaType _elementType>;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r5, $r2);

     label2:
        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>($r2, $r3, $r4);

        return $r0;

     label3:
        $z0 = $r4 instanceof com.fasterxml.jackson.databind.ser.ContextualSerializer;

        if $z0 == 0 goto label2;

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        $r6 = (com.fasterxml.jackson.databind.ser.ContextualSerializer) $r4;

        $r4 = interfaceinvoke $r6.<com.fasterxml.jackson.databind.ser.ContextualSerializer: com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        goto label2;

     label4:
        goto label1;
    }

    public volatile boolean hasSingleElement(java.lang.Object)
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.Object[] $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Object[]) $r1;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: boolean hasSingleElement(java.lang.Object[])>($r2);

        return $z0;
    }

    public boolean hasSingleElement(java.lang.Object[])
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0;
        java.lang.Object[] $r1;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r1 := @parameter0: java.lang.Object[];

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile boolean isEmpty(java.lang.Object)
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.Object[] $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Object[]) $r1;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: boolean isEmpty(java.lang.Object[])>($r2);

        return $z0;
    }

    public boolean isEmpty(java.lang.Object[])
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0;
        java.lang.Object[] $r1;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r1 := @parameter0: java.lang.Object[];

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public volatile void serializeContents(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        java.lang.Object $r3;
        java.lang.Object[] $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.lang.Object[]) $r3;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void serializeContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r4, $r1, $r2);

        return;
    }

    public void serializeContents(java.lang.Object[], com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0;
        java.lang.Object[] $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r4;
        int $i0, $i1;
        com.fasterxml.jackson.databind.JsonSerializer $r5, $r9;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r6;
        java.lang.Object $r7;
        java.lang.Class $r8;
        com.fasterxml.jackson.databind.JavaType $r10;
        boolean $z0;
        java.io.IOException $r11;
        java.lang.Throwable $r12, $r13;
        java.lang.Error $r14;
        com.fasterxml.jackson.databind.JsonMappingException $r15;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r1 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label01;

        return;

     label01:
        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        if $r5 == null goto label02;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void serializeContentsUsing(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>($r1, $r2, $r3, $r5);

        return;

     label02:
        $r6 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        if $r6 == null goto label03;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void serializeTypedContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r3);

        return;

     label03:
        $i1 = 0;

        $r7 = null;

     label04:
        $r4 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

     label05:
        if $i1 >= $i0 goto label27;

     label06:
        $r7 = $r1[$i1];

     label07:
        if $r7 != null goto label10;

     label08:
        virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>($r2);

     label09:
        $i1 = $i1 + 1;

        goto label05;

     label10:
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>($r8);

     label11:
        $r9 = $r5;

        if $r5 != null goto label18;

     label12:
        $r10 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JavaType _elementType>;

     label13:
        $z0 = virtualinvoke $r10.<com.fasterxml.jackson.databind.JavaType: boolean hasGenericTypes()>();

     label14:
        if $z0 == 0 goto label21;

     label15:
        $r10 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JavaType _elementType>;

     label16:
        $r10 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r10, $r8);

        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)>($r4, $r10, $r3);

     label17:
        $r9 = $r5;

     label18:
        virtualinvoke $r9.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r7, $r2, $r3);

     label19:
        goto label09;

     label20:
        $r11 := @caughtexception;

        throw $r11;

     label21:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>($r4, $r8, $r3);

     label22:
        $r9 = $r5;

        goto label18;

     label23:
        $z0 = $r13 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label24;

        $r12 = virtualinvoke $r13.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r12 == null goto label24;

        $r13 = virtualinvoke $r13.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label23;

     label24:
        $z0 = $r13 instanceof java.lang.Error;

        if $z0 == 0 goto label25;

        $r14 = (java.lang.Error) $r13;

        throw $r14;

     label25:
        $r15 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int)>($r13, $r7, $i1);

        throw $r15;

     label26:
        $r13 := @caughtexception;

        goto label23;

     label27:
        return;

        catch java.io.IOException from label08 to label09 with label20;
        catch java.io.IOException from label10 to label11 with label20;
        catch java.io.IOException from label13 to label14 with label20;
        catch java.io.IOException from label16 to label17 with label20;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.lang.Exception from label04 to label05 with label26;
        catch java.lang.Exception from label06 to label07 with label26;
        catch java.lang.Exception from label08 to label09 with label26;
        catch java.lang.Exception from label10 to label11 with label26;
        catch java.lang.Exception from label12 to label14 with label26;
        catch java.lang.Exception from label15 to label17 with label26;
        catch java.lang.Exception from label18 to label19 with label26;
        catch java.io.IOException from label21 to label22 with label20;
        catch java.lang.Exception from label21 to label22 with label26;
    }

    public void serializeContentsUsing(java.lang.Object[], com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0;
        java.lang.Object[] $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r5;
        int $i0, $i1;
        java.lang.Object $r6;
        java.io.IOException $r7;
        java.lang.Throwable $r8, $r9;
        boolean $z0;
        java.lang.Error $r10;
        com.fasterxml.jackson.databind.JsonMappingException $r11;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r1 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;

        $i0 = lengthof $r1;

        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        $r6 = null;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label16;

     label02:
        $r6 = $r1[$i1];

     label03:
        if $r6 != null goto label06;

     label04:
        virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>($r2);

     label05:
        $i1 = $i1 + 1;

        goto label01;

     label06:
        if $r5 != null goto label10;

     label07:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r6, $r2, $r3);

     label08:
        goto label05;

     label09:
        $r7 := @caughtexception;

        throw $r7;

     label10:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r6, $r2, $r3, $r5);

     label11:
        goto label05;

     label12:
        $r8 := @caughtexception;

     label13:
        $z0 = $r8 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label14;

        $r9 = virtualinvoke $r8.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r9 == null goto label14;

        $r8 = virtualinvoke $r8.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label13;

     label14:
        $z0 = $r8 instanceof java.lang.Error;

        if $z0 == 0 goto label15;

        $r10 = (java.lang.Error) $r8;

        throw $r10;

     label15:
        $r11 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int)>($r8, $r6, $i1);

        throw $r11;

     label16:
        return;

        catch java.io.IOException from label04 to label05 with label09;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Exception from label02 to label03 with label12;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.io.IOException from label10 to label11 with label09;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public void serializeTypedContents(java.lang.Object[], com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r0;
        java.lang.Object[] $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r4;
        com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r5;
        int $i0, $i1;
        java.lang.Object $r6;
        java.lang.Class $r7;
        com.fasterxml.jackson.databind.JsonSerializer $r8, $r9;
        java.io.IOException $r10;
        boolean $z0;
        java.lang.Throwable $r11, $r12;
        java.lang.Error $r13;
        com.fasterxml.jackson.databind.JsonMappingException $r14;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r1 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $i0 = lengthof $r1;

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        $i1 = 0;

        $r6 = null;

     label01:
        $r5 = $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

     label02:
        if $i1 >= $i0 goto label18;

     label03:
        $r6 = $r1[$i1];

     label04:
        if $r6 != null goto label07;

     label05:
        virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>($r2);

     label06:
        $i1 = $i1 + 1;

        goto label02;

     label07:
        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>($r7);

     label08:
        $r9 = $r8;

        if $r8 != null goto label11;

     label09:
        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>($r5, $r7, $r3);

     label10:
        $r9 = $r8;

     label11:
        virtualinvoke $r9.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r6, $r2, $r3, $r4);

     label12:
        goto label06;

     label13:
        $r10 := @caughtexception;

        throw $r10;

     label14:
        $z0 = $r12 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label15;

        $r11 = virtualinvoke $r12.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r11 == null goto label15;

        $r12 = virtualinvoke $r12.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label14;

     label15:
        $z0 = $r12 instanceof java.lang.Error;

        if $z0 == 0 goto label16;

        $r13 = (java.lang.Error) $r12;

        throw $r13;

     label16:
        $r14 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int)>($r12, $r6, $i1);

        throw $r14;

     label17:
        $r12 := @caughtexception;

        goto label14;

     label18:
        return;

        catch java.io.IOException from label05 to label06 with label13;
        catch java.io.IOException from label07 to label08 with label13;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
    }

    public com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.BeanProperty $r0, $r4;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r1, $r6;
        com.fasterxml.jackson.databind.JsonSerializer $r2, $r5;
        com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r3, $r7;

        $r3 := @this: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r0 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;

        $r1 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r2 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;

        $r4 = $r3.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.BeanProperty _property>;

        if $r4 != $r0 goto label1;

        $r5 = $r3.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        if $r2 != $r5 goto label1;

        $r6 = $r3.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        if $r6 != $r1 goto label1;

        return $r3;

     label1:
        $r7 = new com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        specialinvoke $r7.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void <init>(com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>($r3, $r0, $r1, $r2);

        return $r7;
    }
}
