public class com.fasterxml.jackson.databind.ser.BeanSerializerFactory extends com.fasterxml.jackson.databind.ser.BasicSerializerFactory
{
    public static final com.fasterxml.jackson.databind.ser.BeanSerializerFactory instance;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;

        $r0 = new com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)>(null);

        <com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.BeanSerializerFactory instance> = $r0;

        return;
    }

    protected void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r1;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)>($r1);

        return;
    }

    protected com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructWriter(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.ser.PropertyBuilder, boolean, com.fasterxml.jackson.databind.introspect.AnnotatedMember)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.SerializerProvider $r1;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition $r2;
        com.fasterxml.jackson.databind.type.TypeBindings $r3;
        com.fasterxml.jackson.databind.ser.PropertyBuilder $r4;
        boolean $z0, $z1;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r5;
        java.lang.String $r6;
        com.fasterxml.jackson.databind.JavaType $r7;
        com.fasterxml.jackson.databind.BeanProperty$Std $r8;
        com.fasterxml.jackson.databind.util.Annotations $r9;
        com.fasterxml.jackson.databind.JsonSerializer $r10;
        com.fasterxml.jackson.databind.ser.ResolvableSerializer $r11;
        com.fasterxml.jackson.databind.ser.ContextualSerializer $r12;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r13, $r16;
        java.lang.Class $r14;
        com.fasterxml.jackson.databind.SerializationConfig $r15;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r17;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 := @parameter1: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;

        $r3 := @parameter2: com.fasterxml.jackson.databind.type.TypeBindings;

        $r4 := @parameter3: com.fasterxml.jackson.databind.ser.PropertyBuilder;

        $z0 := @parameter4: boolean;

        $r5 := @parameter5: com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        $r6 = virtualinvoke $r2.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: boolean canOverrideAccessModifiers()>();

        if $z1 == 0 goto label1;

        virtualinvoke $r5.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: void fixAccess()>();

     label1:
        $r7 = virtualinvoke $r5.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: com.fasterxml.jackson.databind.JavaType getType(com.fasterxml.jackson.databind.type.TypeBindings)>($r3);

        $r8 = new com.fasterxml.jackson.databind.BeanProperty$Std;

        $r9 = virtualinvoke $r4.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.util.Annotations getClassAnnotations()>();

        specialinvoke $r8.<com.fasterxml.jackson.databind.BeanProperty$Std: void <init>(java.lang.String,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>($r6, $r7, $r9, $r5);

        $r10 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)>($r1, $r5);

        $z1 = $r10 instanceof com.fasterxml.jackson.databind.ser.ResolvableSerializer;

        if $z1 == 0 goto label2;

        $r11 = (com.fasterxml.jackson.databind.ser.ResolvableSerializer) $r10;

        interfaceinvoke $r11.<com.fasterxml.jackson.databind.ser.ResolvableSerializer: void resolve(com.fasterxml.jackson.databind.SerializerProvider)>($r1);

     label2:
        $z1 = $r10 instanceof com.fasterxml.jackson.databind.ser.ContextualSerializer;

        if $z1 == 0 goto label5;

        $r12 = (com.fasterxml.jackson.databind.ser.ContextualSerializer) $r10;

        $r10 = interfaceinvoke $r12.<com.fasterxml.jackson.databind.ser.ContextualSerializer: com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r8);

     label3:
        $r13 = null;

        $r14 = virtualinvoke $r7.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z1 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isCollectionMapOrArray(java.lang.Class)>($r14);

        if $z1 == 0 goto label4;

        $r15 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r13 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>($r7, $r15, $r5);

     label4:
        $r15 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r16 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.BeanProperty)>($r7, $r15, $r5, $r8);

        $r17 = virtualinvoke $r4.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.ser.BeanPropertyWriter buildWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean)>($r2, $r7, $r10, $r16, $r13, $r5, $z0);

        return $r17;

     label5:
        goto label3;
    }

    protected com.fasterxml.jackson.databind.JsonSerializer constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.SerializerProvider $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;
        com.fasterxml.jackson.databind.BeanProperty $r3;
        java.lang.Class $r4;
        com.fasterxml.jackson.databind.SerializationConfig $r6;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder $r7;
        java.util.List $r8, $r9;
        com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r10;
        boolean $z0;
        java.lang.Iterable $r11;
        java.util.Iterator $r12;
        java.lang.Object $r13;
        com.fasterxml.jackson.databind.ser.BeanSerializerModifier $r14;
        com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter $r15;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r16;
        com.fasterxml.jackson.databind.type.TypeBindings $r17;
        com.fasterxml.jackson.databind.JavaType $r18, $r20;
        com.fasterxml.jackson.databind.MapperFeature $r19;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r21;
        com.fasterxml.jackson.databind.ser.std.MapSerializer $r22;
        java.lang.String $r24;
        com.fasterxml.jackson.databind.util.Annotations $r25;
        com.fasterxml.jackson.databind.JsonSerializer $r27;
        com.fasterxml.jackson.databind.ser.BeanSerializer $r28;
        java.lang.IllegalArgumentException r29;
        java.util.ArrayList r30;
        com.fasterxml.jackson.databind.BeanProperty$Std r31;
        com.fasterxml.jackson.databind.ser.AnyGetterWriter r32;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;

        $r3 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;

        $r4 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class getBeanClass()>();

        if $r4 != class "java/lang/Object" goto label01;

        r29 = new java.lang.IllegalArgumentException;

        specialinvoke r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not create bean serializer for Object.class");

        throw r29;

     label01:
        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r7 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription)>($r2);

        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: java.util.List findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)>($r1, $r2, $r7);

        $r9 = $r8;

        if $r8 != null goto label02;

        r30 = new java.util.ArrayList;

        $r9 = r30;

        specialinvoke r30.<java.util.ArrayList: void <init>()>();

     label02:
        $r10 = $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z0 = virtualinvoke $r10.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();

        if $z0 == 0 goto label04;

        $r10 = $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r11 = virtualinvoke $r10.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();

        $r12 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r8 = $r9;

     label03:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (com.fasterxml.jackson.databind.ser.BeanSerializerModifier) $r13;

        $r8 = virtualinvoke $r14.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: java.util.List changeProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)>($r6, $r2, $r8);

        goto label03;

     label04:
        $r8 = $r9;

     label05:
        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: java.util.List filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)>($r6, $r2, $r8);

        $r10 = $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z0 = virtualinvoke $r10.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();

        if $z0 == 0 goto label07;

        $r10 = $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r11 = virtualinvoke $r10.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();

        $r12 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (com.fasterxml.jackson.databind.ser.BeanSerializerModifier) $r13;

        $r8 = virtualinvoke $r14.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: java.util.List orderProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)>($r6, $r2, $r8);

        goto label06;

     label07:
        $r15 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List)>($r1, $r2, $r8);

        virtualinvoke $r7.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void setObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>($r15);

        virtualinvoke $r7.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void setProperties(java.util.List)>($r8);

        $r13 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: java.lang.Object findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)>($r6, $r2);

        virtualinvoke $r7.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void setFilterId(java.lang.Object)>($r13);

        $r16 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter()>();

        if $r16 == null goto label09;

        $z0 = virtualinvoke $r6.<com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();

        if $z0 == 0 goto label08;

        virtualinvoke $r16.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: void fixAccess()>();

     label08:
        $r17 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.type.TypeBindings bindingsForBeanType()>();

        $r18 = virtualinvoke $r16.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: com.fasterxml.jackson.databind.JavaType getType(com.fasterxml.jackson.databind.type.TypeBindings)>($r17);

        $r19 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING>;

        $z0 = virtualinvoke $r6.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>($r19);

        $r20 = virtualinvoke $r18.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();

        $r21 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>($r6, $r20);

        $r22 = staticinvoke <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.lang.String[],com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(null, $r18, $z0, $r21, null, null);

        r31 = new com.fasterxml.jackson.databind.BeanProperty$Std;

        $r24 = virtualinvoke $r16.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.String getName()>();

        $r25 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.util.Annotations getClassAnnotations()>();

        specialinvoke r31.<com.fasterxml.jackson.databind.BeanProperty$Std: void <init>(java.lang.String,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>($r24, $r20, $r25, $r16);

        r32 = new com.fasterxml.jackson.databind.ser.AnyGetterWriter;

        specialinvoke r32.<com.fasterxml.jackson.databind.ser.AnyGetterWriter: void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.ser.std.MapSerializer)>(r31, $r16, $r22);

        virtualinvoke $r7.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void setAnyGetter(com.fasterxml.jackson.databind.ser.AnyGetterWriter)>(r32);

     label09:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: void processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)>($r6, $r7);

        $r10 = $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z0 = virtualinvoke $r10.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();

        if $z0 == 0 goto label11;

        $r10 = $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r11 = virtualinvoke $r10.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();

        $r12 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (com.fasterxml.jackson.databind.ser.BeanSerializerModifier) $r13;

        $r7 = virtualinvoke $r14.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder updateBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)>($r6, $r2, $r7);

        goto label10;

     label11:
        $r27 = virtualinvoke $r7.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.JsonSerializer build()>();

        if $r27 != null goto label12;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: boolean hasKnownClassAnnotations()>();

        if $z0 == 0 goto label12;

        $r28 = virtualinvoke $r7.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.BeanSerializer createDummy()>();

        return $r28;

     label12:
        return $r27;
    }

    protected com.fasterxml.jackson.databind.ser.BeanSerializerBuilder constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.BeanDescription $r1;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.BeanDescription;

        $r2 = new com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;

        specialinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void <init>(com.fasterxml.jackson.databind.BeanDescription)>($r1);

        return $r2;
    }

    protected com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter, java.lang.Class[])
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r1;
        java.lang.Class[] $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter;

        $r2 := @parameter1: java.lang.Class[];

        $r1 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter: com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructViewBased(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[])>($r1, $r2);

        return $r1;
    }

    protected com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanDescription, java.util.List)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.SerializerProvider $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;
        java.util.List $r3;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo $r4;
        java.lang.Class $r5;
        java.lang.String $r6, $r9;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8;
        java.lang.Object $r10;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r11;
        boolean $z0;
        com.fasterxml.jackson.databind.JavaType $r12;
        com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator $r13;
        com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter $r14;
        com.fasterxml.jackson.databind.type.TypeFactory $r15;
        com.fasterxml.jackson.databind.JavaType[] $r16;
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r17;
        com.fasterxml.jackson.'annotation'.ObjectIdGenerator $r18;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;

        $r3 := @parameter2: java.util.List;

        $r4 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo()>();

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: java.lang.Class getGeneratorType()>();

        if $r5 != class "com/fasterxml/jackson/annotation/ObjectIdGenerators$PropertyGenerator" goto label6;

        $r6 = virtualinvoke $r4.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: java.lang.String getPropertyName()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = 0;

     label2:
        if $i1 != $i0 goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid Object Id definition for ");

        $r5 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class getBeanClass()>();

        $r9 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": can not find property with name \'");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r7;

     label3:
        $r10 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r11 = (com.fasterxml.jackson.databind.ser.BeanPropertyWriter) $r10;

        $r9 = virtualinvoke $r11.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label5;

        if $i1 <= 0 goto label4;

        interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>($i1);

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(0, $r11);

     label4:
        $r12 = virtualinvoke $r11.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.JavaType getType()>();

        $r13 = new com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator;

        specialinvoke $r13.<com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: void <init>(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>($r4, $r11);

        $r14 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter construct(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.'annotation'.ObjectIdGenerator)>($r12, null, $r13);

        return $r14;

     label5:
        $i1 = $i1 + 1;

        goto label2;

     label6:
        $r12 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>($r5);

        $r15 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r16 = virtualinvoke $r15.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r12, class "com/fasterxml/jackson/annotation/ObjectIdGenerator");

        $r12 = $r16[0];

        $r17 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        $r18 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.'annotation'.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)>($r17, $r4);

        $r6 = virtualinvoke $r4.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: java.lang.String getPropertyName()>();

        $r14 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter construct(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.'annotation'.ObjectIdGenerator)>($r12, $r6, $r18);

        return $r14;
    }

    protected com.fasterxml.jackson.databind.ser.PropertyBuilder constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.SerializationConfig $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;
        com.fasterxml.jackson.databind.ser.PropertyBuilder $r3;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;

        $r3 = new com.fasterxml.jackson.databind.ser.PropertyBuilder;

        specialinvoke $r3.<com.fasterxml.jackson.databind.ser.PropertyBuilder: void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)>($r1, $r2);

        return $r3;
    }

    public com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.SerializerProvider $r1;
        com.fasterxml.jackson.databind.JavaType $r2, $r9;
        com.fasterxml.jackson.databind.BeanProperty $r3;
        com.fasterxml.jackson.databind.SerializationConfig $r4;
        com.fasterxml.jackson.databind.BeanDescription $r5, $r6;
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r7;
        com.fasterxml.jackson.databind.JsonSerializer $r8;
        boolean $z0, $z1;
        com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r10;
        java.lang.Iterable $r11;
        java.util.Iterator $r12;
        java.lang.Object $r13;
        com.fasterxml.jackson.databind.ser.Serializers $r14;
        java.lang.Class $r15, $r16;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $r3 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>($r2);

        $r6 = $r5;

        $r7 = virtualinvoke $r5.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)>($r1, $r7);

        if $r8 == null goto label01;

        return $r8;

     label01:
        $r7 = virtualinvoke $r5.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        $r9 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>($r4, $r7, $r2);

        if $r9 != $r2 goto label04;

        $z0 = 0;

     label02:
        $r10 = $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r11 = virtualinvoke $r10.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializers()>();

        $r12 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (com.fasterxml.jackson.databind.ser.Serializers) $r13;

        $r8 = interfaceinvoke $r14.<com.fasterxml.jackson.databind.ser.Serializers: com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>($r4, $r9, $r6);

        if $r8 == null goto label03;

        return $r8;

     label04:
        $r15 = virtualinvoke $r9.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r16 = virtualinvoke $r2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        if $r15 == $r16 goto label09;

        $r6 = virtualinvoke $r4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>($r9);

        $z0 = 1;

        goto label02;

     label05:
        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>($r1, $r9, $r6);

        if $r8 != null goto label10;

        $z1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z1 == 0 goto label07;

        if $z0 != 0 goto label08;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: boolean usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)>($r4, $r6, null, $r3);

     label06:
        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.BeanProperty,boolean)>($r1, $r9, $r6, $r3, $z0);

        return $r8;

     label07:
        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean)>($r9, $r4, $r6, $z0);

        if $r8 != null goto label10;

        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>($r1, $r9, $r6, $z0);

        if $r8 != null goto label10;

        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r9, $r6, $r3);

        if $r8 != null goto label10;

        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>($r4, $r9, $r6, $z0);

        return $r8;

     label08:
        goto label06;

     label09:
        $z0 = 1;

        goto label02;

     label10:
        return $r8;
    }

    protected java.lang.Iterable customSerializers()
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        java.lang.Iterable $r1;
        com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r2 = $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializers()>();

        return $r1;
    }

    protected java.util.List filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, java.util.List)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.SerializationConfig $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;
        java.util.List $r3;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r4;
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r5;
        java.lang.String[] $r6;
        int $i0;
        java.util.HashSet $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r10;
        java.lang.String $r11;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;

        $r3 := @parameter2: java.util.List;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $r5 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        $r6 = virtualinvoke $r4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)>($r5);

        if $r6 == null goto label2;

        $i0 = lengthof $r6;

        if $i0 <= 0 goto label2;

        $r7 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.util.HashSet arrayToSet(java.lang.Object[])>($r6);

        $r8 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.fasterxml.jackson.databind.ser.BeanPropertyWriter) $r9;

        $r11 = virtualinvoke $r10.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        if $z0 == 0 goto label1;

        interfaceinvoke $r8.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return $r3;
    }

    protected java.util.List findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.SerializerProvider $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder $r3;
        java.util.ArrayList $r4;
        java.util.List $r5;
        com.fasterxml.jackson.databind.SerializationConfig $r6;
        com.fasterxml.jackson.databind.MapperFeature $r7;
        boolean $z0, $z1;
        com.fasterxml.jackson.databind.ser.PropertyBuilder $r8;
        int $i0;
        com.fasterxml.jackson.databind.type.TypeBindings $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition $r12;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r13;
        com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty $r14;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod $r15;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r16;
        com.fasterxml.jackson.databind.introspect.AnnotatedField $r17;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;

        $r3 := @parameter2: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;

        $r5 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: java.util.List findProperties()>();

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: void removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)>($r6, $r2, $r5);

        $r7 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature REQUIRE_SETTERS_FOR_GETTERS>;

        $z0 = virtualinvoke $r6.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>($r7);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: void removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)>($r6, $r2, $r5);

     label1:
        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        return null;

     label2:
        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: boolean usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)>($r6, $r2, null, null);

        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.PropertyBuilder constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)>($r6, $r2);

        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        $r9 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.type.TypeBindings bindingsForBeanType()>();

        $r10 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) $r11;

        $r13 = virtualinvoke $r12.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.introspect.AnnotatedMember getAccessor()>();

        $z1 = virtualinvoke $r12.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: boolean isTypeId()>();

        if $z1 == 0 goto label5;

        if $r13 == null goto label3;

        $z1 = virtualinvoke $r6.<com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();

        if $z1 == 0 goto label4;

        virtualinvoke $r13.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: void fixAccess()>();

     label4:
        virtualinvoke $r3.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void setTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)>($r13);

        goto label3;

     label5:
        $r14 = virtualinvoke $r12.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType()>();

        if $r14 == null goto label6;

        $z1 = virtualinvoke $r14.<com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty: boolean isBackReference()>();

        if $z1 != 0 goto label3;

     label6:
        $z1 = $r13 instanceof com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        if $z1 == 0 goto label7;

        $r15 = (com.fasterxml.jackson.databind.introspect.AnnotatedMethod) $r13;

        $r16 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>($r1, $r12, $r9, $r8, $z0, $r15);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        goto label3;

     label7:
        $r17 = (com.fasterxml.jackson.databind.introspect.AnnotatedField) $r13;

        $r16 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>($r1, $r12, $r9, $r8, $z0, $r17);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        goto label3;

     label8:
        return $r4;
    }

    public com.fasterxml.jackson.databind.JsonSerializer findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.SerializerProvider $r1;
        com.fasterxml.jackson.databind.JavaType $r2;
        com.fasterxml.jackson.databind.BeanDescription $r3;
        com.fasterxml.jackson.databind.BeanProperty $r4;
        java.lang.Class $r5;
        boolean $z0;
        com.fasterxml.jackson.databind.JsonSerializer $r6;
        com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r7;
        java.lang.Iterable $r8;
        java.util.Iterator $r9;
        java.lang.Object $r10;
        com.fasterxml.jackson.databind.ser.BeanSerializerModifier $r11;
        com.fasterxml.jackson.databind.SerializationConfig $r12;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $r3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;

        $r4 := @parameter3: com.fasterxml.jackson.databind.BeanProperty;

        $r5 = virtualinvoke $r2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: boolean isPotentialBeanType(java.lang.Class)>($r5);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r6 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r3, $r4);

        $r7 = $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z0 = virtualinvoke $r7.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();

        if $z0 == 0 goto label3;

        $r7 = $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r8 = virtualinvoke $r7.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();

        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (com.fasterxml.jackson.databind.ser.BeanSerializerModifier) $r10;

        $r12 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r6 = virtualinvoke $r11.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: com.fasterxml.jackson.databind.JsonSerializer modifySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer)>($r12, $r3, $r6);

        goto label2;

     label3:
        return $r6;
    }

    protected java.lang.Object findFilterId(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.SerializationConfig $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r3;
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r4;
        java.lang.Object $r5;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $r4 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        $r5 = virtualinvoke $r3.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.AnnotatedClass)>($r4);

        return $r5;
    }

    public com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.introspect.AnnotatedMember)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.JavaType $r1, $r4;
        com.fasterxml.jackson.databind.SerializationConfig $r2;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r3;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r5;
        com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder $r6;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r7;
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver $r8;
        java.util.Collection $r9;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: com.fasterxml.jackson.databind.SerializationConfig;

        $r3 := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();

        $r5 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)>($r2, $r3, $r1);

        if $r6 != null goto label1;

        $r7 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>($r2, $r4);

        return $r7;

     label1:
        $r8 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()>();

        $r9 = virtualinvoke $r8.<com.fasterxml.jackson.databind.jsontype.SubtypeResolver: java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector)>($r3, $r2, $r5);

        $r7 = interfaceinvoke $r6.<com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)>($r2, $r4, $r9);

        return $r7;
    }

    public com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.introspect.AnnotatedMember, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.SerializationConfig $r2;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r3;
        com.fasterxml.jackson.databind.BeanProperty $r4;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r5;
        com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder $r6;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r7;
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver $r8;
        java.util.Collection $r9;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: com.fasterxml.jackson.databind.SerializationConfig;

        $r3 := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        $r4 := @parameter3: com.fasterxml.jackson.databind.BeanProperty;

        $r5 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)>($r2, $r3, $r1);

        if $r6 != null goto label1;

        $r7 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>($r2, $r1);

        return $r7;

     label1:
        $r8 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()>();

        $r9 = virtualinvoke $r8.<com.fasterxml.jackson.databind.jsontype.SubtypeResolver: java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector)>($r3, $r2, $r5);

        $r7 = interfaceinvoke $r6.<com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)>($r2, $r1, $r9);

        return $r7;
    }

    protected boolean isPotentialBeanType(java.lang.Class)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String canBeABeanType(java.lang.Class)>($r1);

        if $r2 != null goto label1;

        $z0 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isProxyType(java.lang.Class)>($r1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void processViews(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.SerializationConfig $r1;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder $r2;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r3;
        java.util.List $r4;
        com.fasterxml.jackson.databind.MapperFeature $r5;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.Object $r6;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r7;
        java.lang.Class[] $r8;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;

        $r2 := @parameter1: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;

        $r4 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List getProperties()>();

        $r5 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature DEFAULT_VIEW_INCLUSION>;

        $z0 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>($r5);

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r3 = newarray (com.fasterxml.jackson.databind.ser.BeanPropertyWriter)[$i0];

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i1);

        $r7 = (com.fasterxml.jackson.databind.ser.BeanPropertyWriter) $r6;

        $r8 = virtualinvoke $r7.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Class[] getViews()>();

        if $r8 != null goto label3;

        if $z0 == 0 goto label4;

        $r3[$i1] = $r7;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i2 = $i2 + 1;

        $r7 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[])>($r7, $r8);

        $r3[$i1] = $r7;

     label4:
        goto label2;

     label5:
        if $z0 == 0 goto label6;

        if $i2 != 0 goto label6;

        return;

     label6:
        virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void setFilteredProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])>($r3);

        return;
    }

    protected void removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, java.util.List)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.SerializationConfig $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;
        java.util.List $r3;
        java.util.HashMap $r4;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition $r8;
        com.fasterxml.jackson.databind.introspect.AnnotatedMember $r9;
        java.lang.Class $r10;
        java.lang.Boolean $r11, $r13;
        com.fasterxml.jackson.databind.introspect.AnnotatedClass $r12;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;

        $r3 := @parameter2: java.util.List;

        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r6 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) $r7;

        $r9 = virtualinvoke $r8.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.introspect.AnnotatedMember getAccessor()>();

        if $r9 != null goto label2;

        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        $r10 = virtualinvoke $r9.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.Class getRawType()>();

        $r7 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r10);

        $r11 = (java.lang.Boolean) $r7;

        if $r11 != null goto label4;

        $r2 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class)>($r10);

        $r12 = virtualinvoke $r2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        $r13 = virtualinvoke $r5.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass)>($r12);

        $r11 = $r13;

        if $r13 != null goto label3;

        $r11 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label3:
        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

     label4:
        $z0 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

        goto label1;

     label5:
        return;
    }

    protected void removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, java.util.List)
    {
        com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r0;
        com.fasterxml.jackson.databind.SerializationConfig $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition $r6;

        $r0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;

        $r3 := @parameter2: java.util.List;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) $r5;

        $z0 = virtualinvoke $r6.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: boolean couldDeserialize()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r6.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: boolean isExplicitlyIncluded()>();

        if $z0 != 0 goto label1;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }
}
