public class com.fasterxml.jackson.databind.node.ArrayNode extends com.fasterxml.jackson.databind.node.ContainerNode
{
    protected java.util.ArrayList _children;

    public void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)
    {
        com.fasterxml.jackson.databind.node.ArrayNode $r0;
        com.fasterxml.jackson.databind.node.JsonNodeFactory $r1;

        $r0 := @this: com.fasterxml.jackson.databind.node.ArrayNode;

        $r1 := @parameter0: com.fasterxml.jackson.databind.node.JsonNodeFactory;

        specialinvoke $r0.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>($r1);

        return;
    }

    private com.fasterxml.jackson.databind.node.ArrayNode _add(com.fasterxml.jackson.databind.JsonNode)
    {
        com.fasterxml.jackson.databind.node.ArrayNode $r0;
        com.fasterxml.jackson.databind.JsonNode $r1;
        java.util.ArrayList $r2;

        $r0 := @this: com.fasterxml.jackson.databind.node.ArrayNode;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JsonNode;

        $r2 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children> = $r2;

     label1:
        $r2 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return $r0;
    }

    private boolean _sameChildren(java.util.ArrayList)
    {
        com.fasterxml.jackson.databind.node.ArrayNode $r0;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        com.fasterxml.jackson.databind.JsonNode $r4;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.node.ArrayNode;

        $r1 := @parameter0: java.util.ArrayList;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = virtualinvoke $r0.<com.fasterxml.jackson.databind.node.ArrayNode: int size()>();

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r2 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (com.fasterxml.jackson.databind.JsonNode) $r3;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $z0 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonNode: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    public com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode)
    {
        com.fasterxml.jackson.databind.node.ArrayNode $r0;
        com.fasterxml.jackson.databind.JsonNode $r2;

        $r0 := @this: com.fasterxml.jackson.databind.node.ArrayNode;

        $r2 := @parameter0: com.fasterxml.jackson.databind.JsonNode;

        if $r2 != null goto label1;

        $r2 = virtualinvoke $r0.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();

     label1:
        specialinvoke $r0.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode _add(com.fasterxml.jackson.databind.JsonNode)>($r2);

        return $r0;
    }

    public java.util.Iterator elements()
    {
        com.fasterxml.jackson.databind.node.ArrayNode $r0;
        java.util.ArrayList $r1;
        com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator $r2;
        java.util.Iterator $r3;

        $r0 := @this: com.fasterxml.jackson.databind.node.ArrayNode;

        $r1 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator: com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator instance()>();

        return $r2;

     label1:
        $r1 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        com.fasterxml.jackson.databind.node.ArrayNode $r0, $r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        java.util.ArrayList $r5;
        int $i0;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.node.ArrayNode;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != $r0 goto label1;

        return 1;

     label1:
        if $r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        $r4 = (com.fasterxml.jackson.databind.node.ArrayNode) $r1;

        $r5 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        if $r5 == null goto label4;

        $r5 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label5;

     label4:
        $i0 = virtualinvoke $r4.<com.fasterxml.jackson.databind.node.ArrayNode: int size()>();

        if $i0 == 0 goto label6;

        return 0;

     label5:
        $r5 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        $z0 = specialinvoke $r4.<com.fasterxml.jackson.databind.node.ArrayNode: boolean _sameChildren(java.util.ArrayList)>($r5);

        return $z0;

     label6:
        return 1;
    }

    public com.fasterxml.jackson.databind.JsonNode get(java.lang.String)
    {
        com.fasterxml.jackson.databind.node.ArrayNode $r0;
        java.lang.String $r1;

        $r0 := @this: com.fasterxml.jackson.databind.node.ArrayNode;

        $r1 := @parameter0: java.lang.String;

        return null;
    }

    public int hashCode()
    {
        com.fasterxml.jackson.databind.node.ArrayNode $r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.fasterxml.jackson.databind.JsonNode $r4;

        $r0 := @this: com.fasterxml.jackson.databind.node.ArrayNode;

        $r1 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r1 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r1 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.fasterxml.jackson.databind.JsonNode) $r3;

        if $r4 == null goto label4;

        $i1 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

        $i0 = $i1 ^ $i0;

     label3:
        goto label2;

     label4:
        goto label3;

     label5:
        return $i0;
    }

    public final void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.node.ArrayNode $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        java.util.ArrayList $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fasterxml.jackson.databind.JsonNode $r6;
        com.fasterxml.jackson.databind.node.BaseJsonNode $r7;

        $r0 := @this: com.fasterxml.jackson.databind.node.ArrayNode;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray()>();

        $r3 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        if $r3 == null goto label2;

        $r3 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.fasterxml.jackson.databind.JsonNode) $r5;

        $r7 = (com.fasterxml.jackson.databind.node.BaseJsonNode) $r6;

        virtualinvoke $r7.<com.fasterxml.jackson.databind.node.BaseJsonNode: void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2);

        goto label1;

     label2:
        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();

        return;
    }

    public void serializeWithType(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.node.ArrayNode $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r3;
        java.util.ArrayList $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.fasterxml.jackson.databind.JsonNode $r7;
        com.fasterxml.jackson.databind.node.BaseJsonNode $r8;

        $r0 := @this: com.fasterxml.jackson.databind.node.ArrayNode;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;

        $r3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        virtualinvoke $r3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>($r0, $r1);

        $r4 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        if $r4 == null goto label2;

        $r4 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.fasterxml.jackson.databind.JsonNode) $r6;

        $r8 = (com.fasterxml.jackson.databind.node.BaseJsonNode) $r7;

        virtualinvoke $r8.<com.fasterxml.jackson.databind.node.BaseJsonNode: void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2);

        goto label1;

     label2:
        virtualinvoke $r3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>($r0, $r1);

        return;
    }

    public int size()
    {
        com.fasterxml.jackson.databind.node.ArrayNode $r0;
        int $i0;
        java.util.ArrayList $r1;

        $r0 := @this: com.fasterxml.jackson.databind.node.ArrayNode;

        $r1 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        com.fasterxml.jackson.databind.node.ArrayNode $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.fasterxml.jackson.databind.JsonNode $r4;
        java.lang.String $r5;

        $r0 := @this: com.fasterxml.jackson.databind.node.ArrayNode;

        $r1 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.node.ArrayNode: int size()>();

        $i0 = $i0 << 4;

        $i0 = $i0 + 16;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r2 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        if $r2 == null goto label3;

        $r2 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        if $i1 <= 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $r2 = $r0.<com.fasterxml.jackson.databind.node.ArrayNode: java.util.ArrayList _children>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (com.fasterxml.jackson.databind.JsonNode) $r3;

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonNode: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
