public abstract class com.fasterxml.jackson.databind.cfg.MapperConfig extends java.lang.Object implements com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver
{
    protected final com.fasterxml.jackson.databind.cfg.BaseSettings _base;
    protected final int _mapperFeatures;

    protected void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings, int)
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        com.fasterxml.jackson.databind.cfg.BaseSettings $r1;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 := @parameter0: com.fasterxml.jackson.databind.cfg.BaseSettings;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.BaseSettings _base> = $r1;

        $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: int _mapperFeatures> = $i0;

        return;
    }

    protected void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig)
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0, $r1;
        com.fasterxml.jackson.databind.cfg.BaseSettings $r2;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = $r1.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.BaseSettings _base> = $r2;

        $i0 = $r1.<com.fasterxml.jackson.databind.cfg.MapperConfig: int _mapperFeatures>;

        $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: int _mapperFeatures> = $i0;

        return;
    }

    public static int collectFeatureDefaults(java.lang.Class)
    {
        java.lang.Class $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r1;
        java.lang.Enum[] $r2;
        java.lang.Enum $r3;
        com.fasterxml.jackson.databind.cfg.ConfigFeature $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        $r2 = (java.lang.Enum[]) $r1;

        $i0 = lengthof $r2;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r2[$i1];

        $r4 = (com.fasterxml.jackson.databind.cfg.ConfigFeature) $r3;

        $z0 = interfaceinvoke $r4.<com.fasterxml.jackson.databind.cfg.ConfigFeature: boolean enabledByDefault()>();

        if $z0 == 0 goto label4;

        $r4 = (com.fasterxml.jackson.databind.cfg.ConfigFeature) $r3;

        $i3 = interfaceinvoke $r4.<com.fasterxml.jackson.databind.cfg.ConfigFeature: int getMask()>();

        $i2 = $i3 | $i2;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i2;

     label4:
        goto label2;
    }

    public final boolean canOverrideAccessModifiers()
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        boolean $z0;
        com.fasterxml.jackson.databind.MapperFeature $r1;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>($r1);

        return $z0;
    }

    public com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType, java.lang.Class)
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        java.lang.Class $r2;
        com.fasterxml.jackson.databind.type.TypeFactory $r3;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r1 = virtualinvoke $r3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r1, $r2);

        return $r1;
    }

    public final com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        java.lang.Class $r1;
        com.fasterxml.jackson.databind.type.TypeFactory $r2;
        com.fasterxml.jackson.databind.JavaType $r3;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r3 = virtualinvoke $r2.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>($r1, null);

        return $r3;
    }

    public com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r1;
        com.fasterxml.jackson.databind.cfg.BaseSettings $r2;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r2 = $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.cfg.BaseSettings: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        return $r1;
    }

    public com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector()
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        com.fasterxml.jackson.databind.introspect.ClassIntrospector $r1;
        com.fasterxml.jackson.databind.cfg.BaseSettings $r2;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r2 = $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.cfg.BaseSettings: com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector()>();

        return $r1;
    }

    public final java.text.DateFormat getDateFormat()
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        java.text.DateFormat $r1;
        com.fasterxml.jackson.databind.cfg.BaseSettings $r2;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r2 = $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.cfg.BaseSettings: java.text.DateFormat getDateFormat()>();

        return $r1;
    }

    public final com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getDefaultTyper(com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder $r2;
        com.fasterxml.jackson.databind.cfg.BaseSettings $r3;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r3 = $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r2 = virtualinvoke $r3.<com.fasterxml.jackson.databind.cfg.BaseSettings: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getTypeResolverBuilder()>();

        return $r2;
    }

    public com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker()
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        com.fasterxml.jackson.databind.introspect.VisibilityChecker $r1;
        com.fasterxml.jackson.databind.cfg.BaseSettings $r2;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r2 = $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.cfg.BaseSettings: com.fasterxml.jackson.databind.introspect.VisibilityChecker getVisibilityChecker()>();

        return $r1;
    }

    public final com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        com.fasterxml.jackson.databind.cfg.HandlerInstantiator $r1;
        com.fasterxml.jackson.databind.cfg.BaseSettings $r2;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r2 = $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.cfg.BaseSettings: com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();

        return $r1;
    }

    public final java.util.Locale getLocale()
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        java.util.Locale $r1;
        com.fasterxml.jackson.databind.cfg.BaseSettings $r2;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r2 = $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.cfg.BaseSettings: java.util.Locale getLocale()>();

        return $r1;
    }

    public final com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy()
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        com.fasterxml.jackson.databind.PropertyNamingStrategy $r1;
        com.fasterxml.jackson.databind.cfg.BaseSettings $r2;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r2 = $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.cfg.BaseSettings: com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy()>();

        return $r1;
    }

    public final java.util.TimeZone getTimeZone()
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        java.util.TimeZone $r1;
        com.fasterxml.jackson.databind.cfg.BaseSettings $r2;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r2 = $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.cfg.BaseSettings: java.util.TimeZone getTimeZone()>();

        return $r1;
    }

    public final com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        com.fasterxml.jackson.databind.type.TypeFactory $r1;
        com.fasterxml.jackson.databind.cfg.BaseSettings $r2;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r2 = $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.cfg.BaseSettings: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        return $r1;
    }

    public abstract com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType);

    public com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class)
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        java.lang.Class $r1;
        com.fasterxml.jackson.databind.JavaType $r2;
        com.fasterxml.jackson.databind.BeanDescription $r3;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>($r1);

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType)>($r2);

        return $r3;
    }

    public final boolean isAnnotationProcessingEnabled()
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        boolean $z0;
        com.fasterxml.jackson.databind.MapperFeature $r1;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature USE_ANNOTATIONS>;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>($r1);

        return $z0;
    }

    public final boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        com.fasterxml.jackson.databind.MapperFeature $r1;
        int $i0, $i1;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 := @parameter0: com.fasterxml.jackson.databind.MapperFeature;

        $i1 = $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: int _mapperFeatures>;

        $i0 = virtualinvoke $r1.<com.fasterxml.jackson.databind.MapperFeature: int getMask()>();

        $i0 = $i1 & $i0;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean shouldSortPropertiesAlphabetically()
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        boolean $z0;
        com.fasterxml.jackson.databind.MapperFeature $r1;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature SORT_PROPERTIES_ALPHABETICALLY>;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>($r1);

        return $z0;
    }

    public com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Class)
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        com.fasterxml.jackson.databind.introspect.Annotated $r1;
        java.lang.Class $r2;
        com.fasterxml.jackson.databind.cfg.HandlerInstantiator $r3;
        com.fasterxml.jackson.databind.jsontype.TypeIdResolver $r4;
        boolean $z0;
        java.lang.Object $r5;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 := @parameter0: com.fasterxml.jackson.databind.introspect.Annotated;

        $r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.cfg.HandlerInstantiator: com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>($r0, $r1, $r2);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: boolean canOverrideAccessModifiers()>();

        $r5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>($r2, $z0);

        $r4 = (com.fasterxml.jackson.databind.jsontype.TypeIdResolver) $r5;

        return $r4;
    }

    public com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Class)
    {
        com.fasterxml.jackson.databind.cfg.MapperConfig $r0;
        com.fasterxml.jackson.databind.introspect.Annotated $r1;
        java.lang.Class $r2;
        com.fasterxml.jackson.databind.cfg.HandlerInstantiator $r3;
        com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder $r4;
        boolean $z0;
        java.lang.Object $r5;

        $r0 := @this: com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 := @parameter0: com.fasterxml.jackson.databind.introspect.Annotated;

        $r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.cfg.HandlerInstantiator: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>($r0, $r1, $r2);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.cfg.MapperConfig: boolean canOverrideAccessModifiers()>();

        $r5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>($r2, $z0);

        $r4 = (com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) $r5;

        return $r4;
    }
}
