public class com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator extends com.fasterxml.jackson.'annotation'.ObjectIdGenerators$PropertyGenerator
{
    protected final com.fasterxml.jackson.databind.ser.BeanPropertyWriter _property;

    public void <init>(com.fasterxml.jackson.databind.introspect.ObjectIdInfo, com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
    {
        com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator $r0;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo $r1;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r2;
        java.lang.Class $r3;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator;

        $r1 := @parameter0: com.fasterxml.jackson.databind.introspect.ObjectIdInfo;

        $r2 := @parameter1: com.fasterxml.jackson.databind.ser.BeanPropertyWriter;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: java.lang.Class getScope()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: void <init>(java.lang.Class,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>($r3, $r2);

        return;
    }

    protected void <init>(java.lang.Class, com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
    {
        com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator $r0;
        java.lang.Class $r1;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: com.fasterxml.jackson.databind.ser.BeanPropertyWriter;

        specialinvoke $r0.<com.fasterxml.jackson.'annotation'.ObjectIdGenerators$PropertyGenerator: void <init>(java.lang.Class)>($r1);

        $r0.<com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: com.fasterxml.jackson.databind.ser.BeanPropertyWriter _property> = $r2;

        return;
    }

    public com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class)
    {
        java.lang.Class $r0, $r3;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r1;
        com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator $r2, $r4;

        $r2 := @this: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator;

        $r0 := @parameter0: java.lang.Class;

        $r3 = $r2.<com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: java.lang.Class _scope>;

        if $r0 != $r3 goto label1;

        return $r2;

     label1:
        $r4 = new com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator;

        $r1 = $r2.<com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: com.fasterxml.jackson.databind.ser.BeanPropertyWriter _property>;

        specialinvoke $r4.<com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: void <init>(java.lang.Class,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>($r0, $r1);

        return $r4;
    }

    public java.lang.Object generateId(java.lang.Object)
    {
        com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator $r0;
        java.lang.Object $r1;
        java.lang.IllegalStateException $r2;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r3;
        java.lang.RuntimeException $r4;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator;

        $r1 := @parameter0: java.lang.Object;

     label1:
        $r3 = $r0.<com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: com.fasterxml.jackson.databind.ser.BeanPropertyWriter _property>;

     label2:
        $r1 = virtualinvoke $r3.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Object get(java.lang.Object)>($r1);

     label3:
        return $r1;

     label4:
        $r4 := @caughtexception;

        throw $r4;

     label5:
        $r5 := @caughtexception;

        $r2 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Problem accessing property \'");

        $r3 = $r0.<com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: com.fasterxml.jackson.databind.ser.BeanPropertyWriter _property>;

        $r7 = virtualinvoke $r3.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r7 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r2;

        catch java.lang.RuntimeException from label1 to label3 with label4;
        catch java.lang.Exception from label2 to label3 with label5;
    }

    public com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object)
    {
        com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator $r0;
        java.lang.Object $r1;
        com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey $r2;
        java.lang.Class $r3, $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey;

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = $r0.<com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: java.lang.Class _scope>;

        specialinvoke $r2.<com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey: void <init>(java.lang.Class,java.lang.Class,java.lang.Object)>($r4, $r3, $r1);

        return $r2;
    }

    public com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object)
    {
        com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator $r0;
        java.lang.Object $r1;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator;

        $r1 := @parameter0: java.lang.Object;

        return $r0;
    }
}
