final class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket extends java.lang.Object
{
    private final java.lang.String _symbol;
    private final com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket mNext;

    public void <init>(java.lang.String, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket $r0, $r2;
        java.lang.String $r1;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: java.lang.String _symbol> = $r1;

        $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket mNext> = $r2;

        return;
    }

    public final java.lang.String find(char[], int, int)
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket $r0;
        char[] $r1;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r2;
        char $c3, $c5;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: java.lang.String _symbol>;

        $r0 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket mNext>;

     label1:
        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i2 != $i1 goto label4;

        $i2 = 0;

     label2:
        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i2);

        $i4 = $i0 + $i2;

        $c5 = $r1[$i4];

        if $c3 != $c5 goto label3;

        $i2 = $i2 + 1;

        if $i2 < $i1 goto label2;

     label3:
        if $i2 != $i1 goto label4;

        return $r2;

     label4:
        if $r0 == null goto label5;

        $r2 = virtualinvoke $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: java.lang.String getSymbol()>();

        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket getNext()>();

        goto label1;

     label5:
        return null;
    }

    public final com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket getNext()
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket $r0;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket;

        $r0 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket mNext>;

        return $r0;
    }

    public final java.lang.String getSymbol()
    {
        com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket $r0;
        java.lang.String r1;

        $r0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket;

        r1 = $r0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: java.lang.String _symbol>;

        return r1;
    }
}
