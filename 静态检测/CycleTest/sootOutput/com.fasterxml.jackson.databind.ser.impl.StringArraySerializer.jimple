public class com.fasterxml.jackson.databind.ser.impl.StringArraySerializer extends com.fasterxml.jackson.databind.ser.std.ArraySerializerBase implements com.fasterxml.jackson.databind.ser.ContextualSerializer
{
    private static final com.fasterxml.jackson.databind.JavaType VALUE_TYPE;
    public static final com.fasterxml.jackson.databind.ser.impl.StringArraySerializer instance;
    protected final com.fasterxml.jackson.databind.JsonSerializer _elementSerializer;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.type.TypeFactory $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.ser.impl.StringArraySerializer $r2;

        $r0 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()>();

        $r1 = virtualinvoke $r0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType uncheckedSimpleType(java.lang.Class)>(class "java/lang/String");

        <com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: com.fasterxml.jackson.databind.JavaType VALUE_TYPE> = $r1;

        $r2 = new com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        specialinvoke $r2.<com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: void <init>()>();

        <com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer instance> = $r2;

        return;
    }

    protected void <init>()
    {
        com.fasterxml.jackson.databind.ser.impl.StringArraySerializer $r0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void <init>(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>(class "[Ljava/lang/String;", null);

        $r0.<com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer> = null;

        return;
    }

    public void <init>(com.fasterxml.jackson.databind.ser.impl.StringArraySerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.impl.StringArraySerializer $r0, $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        $r0.<com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer> = $r3;

        return;
    }

    private void serializeContentsSlow(java.lang.String[], com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.ser.impl.StringArraySerializer $r0;
        java.lang.String[] $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4;
        int $i0, $i1;
        java.lang.String $r5;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;

        $i1 = 0;

        $i0 = lengthof $r1;

     label1:
        if $i1 >= $i0 goto label4;

        $r5 = $r1[$i1];

        if $r5 != null goto label3;

        virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>($r2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r5 = $r1[$i1];

        virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r5, $r2, $r3);

        goto label2;

     label4:
        return;
    }

    public com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        com.fasterxml.jackson.databind.ser.impl.StringArraySerializer $r0;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r1;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        return $r0;
    }

    public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.BeanProperty $r1;
        com.fasterxml.jackson.databind.ser.impl.StringArraySerializer $r2, $r6;
        com.fasterxml.jackson.databind.JsonSerializer $r3, $r4;
        boolean $z0;
        com.fasterxml.jackson.databind.ser.ContextualSerializer $r5;

        $r2 := @this: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        $r0 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 = $r2.<com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        if $r3 != null goto label3;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>(class "java/lang/String", $r1);

     label1:
        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: boolean isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer)>($r3);

        if $z0 == 0 goto label2;

        $r3 = null;

     label2:
        $r4 = $r2.<com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        if $r3 != $r4 goto label4;

        return $r2;

     label3:
        $z0 = $r3 instanceof com.fasterxml.jackson.databind.ser.ContextualSerializer;

        if $z0 == 0 goto label1;

        $r5 = (com.fasterxml.jackson.databind.ser.ContextualSerializer) $r3;

        $r3 = interfaceinvoke $r5.<com.fasterxml.jackson.databind.ser.ContextualSerializer: com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>($r0, $r1);

        goto label1;

     label4:
        $r6 = new com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        specialinvoke $r6.<com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: void <init>(com.fasterxml.jackson.databind.ser.impl.StringArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)>($r2, $r1, $r3);

        return $r6;
    }

    public volatile boolean hasSingleElement(java.lang.Object)
    {
        com.fasterxml.jackson.databind.ser.impl.StringArraySerializer $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.String[] $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String[]) $r1;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: boolean hasSingleElement(java.lang.String[])>($r2);

        return $z0;
    }

    public boolean hasSingleElement(java.lang.String[])
    {
        com.fasterxml.jackson.databind.ser.impl.StringArraySerializer $r0;
        java.lang.String[] $r1;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        $r1 := @parameter0: java.lang.String[];

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile boolean isEmpty(java.lang.Object)
    {
        com.fasterxml.jackson.databind.ser.impl.StringArraySerializer $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.String[] $r2;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String[]) $r1;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: boolean isEmpty(java.lang.String[])>($r2);

        return $z0;
    }

    public boolean isEmpty(java.lang.String[])
    {
        com.fasterxml.jackson.databind.ser.impl.StringArraySerializer $r0;
        java.lang.String[] $r1;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        $r1 := @parameter0: java.lang.String[];

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public volatile void serializeContents(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.impl.StringArraySerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        java.lang.Object $r3;
        java.lang.String[] $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.lang.String[]) $r3;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: void serializeContents(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r4, $r1, $r2);

        return;
    }

    public void serializeContents(java.lang.String[], com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.impl.StringArraySerializer $r0;
        java.lang.String[] $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        int $i0, $i1;
        com.fasterxml.jackson.databind.JsonSerializer $r4;
        java.lang.String $r5;

        $r0 := @this: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return;

     label1:
        $r4 = $r0.<com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        if $r4 == null goto label2;

        $r4 = $r0.<com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: void serializeContentsSlow(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>($r1, $r2, $r3, $r4);

        return;

     label2:
        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label6;

        $r5 = $r1[$i1];

        if $r5 != null goto label5;

        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        $r5 = $r1[$i1];

        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>($r5);

        goto label4;

     label6:
        return;
    }
}
