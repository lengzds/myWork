public abstract class com.fasterxml.jackson.databind.SerializerProvider extends java.lang.Object
{
    public static final com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER;
    public static final com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER;
    protected static final com.fasterxml.jackson.databind.JavaType TYPE_OBJECT;
    protected final com.fasterxml.jackson.databind.SerializationConfig _config;
    protected java.text.DateFormat _dateFormat;
    protected com.fasterxml.jackson.databind.JsonSerializer _keySerializer;
    protected final com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers;
    protected com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer;
    protected com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer;
    protected final com.fasterxml.jackson.databind.util.RootNameLookup _rootNames;
    protected final java.lang.Class _serializationView;
    protected final com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache;
    protected final com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory;
    protected com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.type.TypeFactory $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.ser.impl.FailingSerializer $r2;
        com.fasterxml.jackson.databind.ser.impl.UnknownSerializer $r3;

        $r0 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()>();

        $r1 = virtualinvoke $r0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType uncheckedSimpleType(java.lang.Class)>(class "java/lang/Object");

        <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType TYPE_OBJECT> = $r1;

        $r2 = new com.fasterxml.jackson.databind.ser.impl.FailingSerializer;

        specialinvoke $r2.<com.fasterxml.jackson.databind.ser.impl.FailingSerializer: void <init>(java.lang.String)>("Null key for a Map not allowed in JSON (use a converting NullKeySerializer?)");

        <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER> = $r2;

        $r3 = new com.fasterxml.jackson.databind.ser.impl.UnknownSerializer;

        specialinvoke $r3.<com.fasterxml.jackson.databind.ser.impl.UnknownSerializer: void <init>()>();

        <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER> = $r3;

        return;
    }

    public void <init>()
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.JsonSerializer $r1;
        com.fasterxml.jackson.databind.ser.std.NullSerializer $r2;
        com.fasterxml.jackson.databind.ser.SerializerCache $r3;
        com.fasterxml.jackson.databind.util.RootNameLookup $r4;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER>;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer> = $r1;

        $r2 = <com.fasterxml.jackson.databind.ser.std.NullSerializer: com.fasterxml.jackson.databind.ser.std.NullSerializer instance>;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = $r2;

        $r1 = <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER>;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = $r1;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config> = null;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = null;

        $r3 = new com.fasterxml.jackson.databind.ser.SerializerCache;

        specialinvoke $r3.<com.fasterxml.jackson.databind.ser.SerializerCache: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache> = $r3;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers> = null;

        $r4 = new com.fasterxml.jackson.databind.util.RootNameLookup;

        specialinvoke $r4.<com.fasterxml.jackson.databind.util.RootNameLookup: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.util.RootNameLookup _rootNames> = $r4;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class _serializationView> = null;

        return;
    }

    protected void <init>(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.ser.SerializerFactory)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0, $r1;
        com.fasterxml.jackson.databind.SerializationConfig $r2;
        com.fasterxml.jackson.databind.ser.SerializerFactory $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4;
        com.fasterxml.jackson.databind.ser.std.NullSerializer $r5;
        java.lang.NullPointerException $r6;
        com.fasterxml.jackson.databind.ser.SerializerCache $r7;
        com.fasterxml.jackson.databind.util.RootNameLookup $r8;
        com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r9;
        java.lang.Class $r10;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 := @parameter1: com.fasterxml.jackson.databind.SerializationConfig;

        $r3 := @parameter2: com.fasterxml.jackson.databind.ser.SerializerFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER>;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer> = $r4;

        $r5 = <com.fasterxml.jackson.databind.ser.std.NullSerializer: com.fasterxml.jackson.databind.ser.std.NullSerializer instance>;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = $r5;

        $r4 = <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER>;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = $r4;

        if $r2 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>()>();

        throw $r6;

     label1:
        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = $r3;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config> = $r2;

        $r7 = $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache> = $r7;

        $r4 = $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer>;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer> = $r4;

        $r4 = $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = $r4;

        $r4 = $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = $r4;

        $r4 = $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer>;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = $r4;

        $r8 = $r1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.util.RootNameLookup _rootNames>;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.util.RootNameLookup _rootNames> = $r8;

        $r7 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        $r9 = virtualinvoke $r7.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap()>();

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers> = $r9;

        $r10 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: java.lang.Class getActiveView()>();

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class _serializationView> = $r10;

        return;
    }

    protected com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3;
        com.fasterxml.jackson.databind.ser.SerializerCache $r4;
        java.lang.IllegalArgumentException $r5;
        com.fasterxml.jackson.databind.JsonMappingException $r6;
        java.lang.String $r7;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

     label1:
        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

     label2:
        if $r3 == null goto label4;

        $r4 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        virtualinvoke $r4.<com.fasterxml.jackson.databind.ser.SerializerCache: void addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r3, $r0);

        return $r3;

     label3:
        $r5 := @caughtexception;

        $r6 = new com.fasterxml.jackson.databind.JsonMappingException;

        $r7 = virtualinvoke $r5.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r6.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>($r7, null, $r5);

        throw $r6;

     label4:
        return $r3;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    protected com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        java.lang.Class $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.SerializationConfig $r3;
        com.fasterxml.jackson.databind.JavaType $r4;
        com.fasterxml.jackson.databind.JsonSerializer $r5;
        com.fasterxml.jackson.databind.ser.SerializerCache $r6;
        java.lang.IllegalArgumentException $r7;
        com.fasterxml.jackson.databind.JsonMappingException $r8;
        java.lang.String $r9;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

     label1:
        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>($r1);

        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r4, $r2);

     label2:
        if $r5 == null goto label4;

        $r6 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        virtualinvoke $r6.<com.fasterxml.jackson.databind.ser.SerializerCache: void addAndResolveNonTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r5, $r0);

        return $r5;

     label3:
        $r7 := @caughtexception;

        $r8 = new com.fasterxml.jackson.databind.JsonMappingException;

        $r9 = virtualinvoke $r7.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r8.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>($r9, null, $r7);

        throw $r8;

     label4:
        return $r5;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    protected com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3;
        com.fasterxml.jackson.databind.ser.SerializerFactory $r4;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r4 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;

        $r3 = virtualinvoke $r4.<com.fasterxml.jackson.databind.ser.SerializerFactory: com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r0, $r1, $r2);

        return $r3;
    }

    protected final java.text.DateFormat _dateFormat()
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        java.text.DateFormat $r1;
        com.fasterxml.jackson.databind.SerializationConfig $r2;
        java.lang.Object $r3;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat>;

        return $r1;

     label1:
        $r2 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: java.text.DateFormat getDateFormat()>();

        $r3 = virtualinvoke $r1.<java.text.DateFormat: java.lang.Object clone()>();

        $r1 = (java.text.DateFormat) $r3;

        $r0.<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat> = $r1;

        return $r1;
    }

    protected com.fasterxml.jackson.databind.JsonSerializer _handleContextual(com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.BeanProperty $r1;
        boolean $z0;
        com.fasterxml.jackson.databind.JsonSerializer $r2;
        com.fasterxml.jackson.databind.ser.ContextualSerializer $r3;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;

        $r1 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $z0 = $r2 instanceof com.fasterxml.jackson.databind.ser.ContextualSerializer;

        if $z0 == 0 goto label1;

        $r3 = (com.fasterxml.jackson.databind.ser.ContextualSerializer) $r2;

        $r2 = interfaceinvoke $r3.<com.fasterxml.jackson.databind.ser.ContextualSerializer: com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>($r0, $r1);

     label1:
        return $r2;
    }

    protected com.fasterxml.jackson.databind.JsonSerializer _handleContextualResolvable(com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.JsonSerializer $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        boolean $z0;
        com.fasterxml.jackson.databind.ser.ResolvableSerializer $r3;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $z0 = $r1 instanceof com.fasterxml.jackson.databind.ser.ResolvableSerializer;

        if $z0 == 0 goto label1;

        $r3 = (com.fasterxml.jackson.databind.ser.ResolvableSerializer) $r1;

        interfaceinvoke $r3.<com.fasterxml.jackson.databind.ser.ResolvableSerializer: void resolve(com.fasterxml.jackson.databind.SerializerProvider)>($r0);

     label1:
        $r1 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _handleContextual(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        return $r1;
    }

    protected com.fasterxml.jackson.databind.JsonSerializer _handleResolvable(com.fasterxml.jackson.databind.JsonSerializer)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.JsonSerializer $r1;
        boolean $z0;
        com.fasterxml.jackson.databind.ser.ResolvableSerializer $r2;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;

        $z0 = $r1 instanceof com.fasterxml.jackson.databind.ser.ResolvableSerializer;

        if $z0 == 0 goto label1;

        $r2 = (com.fasterxml.jackson.databind.ser.ResolvableSerializer) $r1;

        interfaceinvoke $r2.<com.fasterxml.jackson.databind.ser.ResolvableSerializer: void resolve(com.fasterxml.jackson.databind.SerializerProvider)>($r0);

     label1:
        return $r1;
    }

    public final boolean canOverrideAccessModifiers()
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        boolean $z0;
        com.fasterxml.jackson.databind.SerializationConfig $r1;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $z0 = virtualinvoke $r1.<com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();

        return $z0;
    }

    public com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType, java.lang.Class)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        java.lang.Class $r2;
        com.fasterxml.jackson.databind.SerializationConfig $r3;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: java.lang.Class;

        $r3 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r1 = virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r1, $r2);

        return $r1;
    }

    public com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        java.lang.reflect.Type $r1;
        com.fasterxml.jackson.databind.SerializationConfig $r2;
        com.fasterxml.jackson.databind.type.TypeFactory $r3;
        com.fasterxml.jackson.databind.JavaType $r4;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r2 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r3 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>($r1);

        return $r4;
    }

    public void defaultSerializeDateKey(long, com.fasterxml.jackson.core.JsonGenerator)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        long $l0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        java.util.Date $r2;
        com.fasterxml.jackson.databind.SerializationFeature $r3;
        boolean $z0;
        java.lang.String $r4;
        java.text.DateFormat $r5;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $l0 := @parameter0: long;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS>;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r3);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r4);

        return;

     label1:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat()>();

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l0);

        $r4 = virtualinvoke $r5.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r2);

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r4);

        return;
    }

    public void defaultSerializeDateKey(java.util.Date, com.fasterxml.jackson.core.JsonGenerator)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        java.util.Date $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializationFeature $r3;
        boolean $z0;
        long $l0;
        java.lang.String $r4;
        java.text.DateFormat $r5;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS>;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r3);

        if $z0 == 0 goto label1;

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r4);

        return;

     label1:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat()>();

        $r4 = virtualinvoke $r5.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r1);

        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r4);

        return;
    }

    public final void defaultSerializeDateValue(java.util.Date, com.fasterxml.jackson.core.JsonGenerator)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        java.util.Date $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializationFeature $r3;
        boolean $z0;
        long $l0;
        java.text.DateFormat $r4;
        java.lang.String $r5;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_AS_TIMESTAMPS>;

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r3);

        if $z0 == 0 goto label1;

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(long)>($l0);

        return;

     label1:
        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat()>();

        $r5 = virtualinvoke $r4.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r1);

        virtualinvoke $r2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>($r5);

        return;
    }

    public final void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.JsonSerializer $r2;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;

        $r2 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();

        virtualinvoke $r2.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(null, $r1, $r0);

        return;
    }

    public final void defaultSerializeValue(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        java.lang.Object $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3;
        java.lang.Class $r4;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        if $r1 != null goto label1;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();

        virtualinvoke $r3.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(null, $r2, $r0);

        return;

     label1:
        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty)>($r4, 1, null);

        virtualinvoke $r3.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r1, $r2, $r0);

        return;
    }

    public com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.SerializationConfig $r3;
        com.fasterxml.jackson.databind.ser.SerializerFactory $r4;
        com.fasterxml.jackson.databind.JsonSerializer $r5, $r6;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r4 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;

        $r3 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.ser.SerializerFactory: com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>($r3, $r1);

        $r6 = $r5;

        if $r5 != null goto label1;

        $r5 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        if $r5 != null goto label2;

        $r6 = staticinvoke <com.fasterxml.jackson.databind.ser.std.StdKeySerializers: com.fasterxml.jackson.databind.JsonSerializer getStdKeySerializer(com.fasterxml.jackson.databind.JavaType)>($r1);

     label1:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _handleContextualResolvable(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>($r6, $r2);

        return $r5;

     label2:
        $r6 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        goto label1;
    }

    public com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.JsonSerializer $r3;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getDefaultNullKeySerializer()>();

        return $r3;
    }

    public com.fasterxml.jackson.databind.JsonSerializer findNullValueSerializer(com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.BeanProperty $r1;
        com.fasterxml.jackson.databind.JsonSerializer $r2;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;

        $r2 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();

        return $r2;
    }

    public abstract com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object, com.fasterxml.jackson.annotation.ObjectIdGenerator);

    public com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        boolean $z0;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4, $r9;
        com.fasterxml.jackson.databind.ser.SerializerCache $r5;
        com.fasterxml.jackson.databind.ser.SerializerFactory $r6;
        com.fasterxml.jackson.databind.SerializationConfig $r7;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r8;
        com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer r10;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;

        $r3 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType)>($r1);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r5 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        $r4 = virtualinvoke $r5.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType)>($r1);

        if $r4 != null goto label4;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        $r6 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;

        $r7 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r8 = virtualinvoke $r6.<com.fasterxml.jackson.databind.ser.SerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>($r7, $r1);

        if $r8 == null goto label3;

        $r8 = virtualinvoke $r8.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty)>($r2);

        r10 = new com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer;

        $r9 = r10;

        specialinvoke r10.<com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>($r8, $r4);

     label2:
        if $z0 == 0 goto label5;

        $r5 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        virtualinvoke $r5.<com.fasterxml.jackson.databind.ser.SerializerCache: void addTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>($r1, $r9);

        return $r9;

     label3:
        $r9 = $r4;

        goto label2;

     label4:
        return $r4;

     label5:
        return $r9;
    }

    public com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class, boolean, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        java.lang.Class $r1;
        boolean $z0;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4, $r11;
        com.fasterxml.jackson.databind.ser.SerializerCache $r5;
        com.fasterxml.jackson.databind.ser.SerializerFactory $r6;
        com.fasterxml.jackson.databind.SerializationConfig $r7, $r8;
        com.fasterxml.jackson.databind.JavaType $r9;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer $r10;
        com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer r12;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: java.lang.Class;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;

        $r3 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class)>($r1);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r5 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        $r4 = virtualinvoke $r5.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class)>($r1);

        if $r4 != null goto label4;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        $r6 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;

        $r7 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r8 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r9 = virtualinvoke $r8.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>($r1);

        $r10 = virtualinvoke $r6.<com.fasterxml.jackson.databind.ser.SerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>($r7, $r9);

        if $r10 == null goto label3;

        $r10 = virtualinvoke $r10.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty)>($r2);

        r12 = new com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer;

        $r11 = r12;

        specialinvoke r12.<com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>($r10, $r4);

     label2:
        if $z0 == 0 goto label5;

        $r5 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        virtualinvoke $r5.<com.fasterxml.jackson.databind.ser.SerializerCache: void addTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>($r1, $r11);

        return $r11;

     label3:
        $r11 = $r4;

        goto label2;

     label4:
        return $r4;

     label5:
        return $r11;
    }

    public com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4, $r5;
        com.fasterxml.jackson.databind.ser.SerializerCache $r6;
        java.lang.Class $r7;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>($r1);

        $r5 = $r4;

        if $r4 != null goto label1;

        $r6 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        $r4 = virtualinvoke $r6.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>($r1);

        $r5 = $r4;

        if $r4 != null goto label1;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        $r5 = $r4;

        if $r4 != null goto label1;

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>($r7);

        return $r5;

     label1:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _handleContextual(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>($r5, $r2);

        return $r5;
    }

    public com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        java.lang.Class $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r3;
        com.fasterxml.jackson.databind.JsonSerializer $r4, $r5;
        com.fasterxml.jackson.databind.ser.SerializerCache $r6;
        com.fasterxml.jackson.databind.SerializationConfig $r7;
        com.fasterxml.jackson.databind.JavaType $r8;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>($r1);

        $r5 = $r4;

        if $r4 != null goto label1;

        $r6 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        $r4 = virtualinvoke $r6.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>($r1);

        $r5 = $r4;

        if $r4 != null goto label1;

        $r6 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        $r7 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r8 = virtualinvoke $r7.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>($r1);

        $r4 = virtualinvoke $r6.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>($r8);

        $r5 = $r4;

        if $r4 != null goto label1;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        $r5 = $r4;

        if $r4 != null goto label1;

        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>($r1);

        return $r5;

     label1:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _handleContextual(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>($r5, $r2);

        return $r5;
    }

    public final com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r1;
        com.fasterxml.jackson.databind.SerializationConfig $r2;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        return $r1;
    }

    public final com.fasterxml.jackson.databind.SerializationConfig getConfig()
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.SerializationConfig r1;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        r1 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        return r1;
    }

    public com.fasterxml.jackson.databind.JsonSerializer getDefaultNullKeySerializer()
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.JsonSerializer r1;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        r1 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer>;

        return r1;
    }

    public com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.JsonSerializer r1;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        r1 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;

        return r1;
    }

    public final com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider()
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.ser.FilterProvider $r1;
        com.fasterxml.jackson.databind.SerializationConfig $r2;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider()>();

        return $r1;
    }

    public java.util.Locale getLocale()
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        java.util.Locale $r1;
        com.fasterxml.jackson.databind.SerializationConfig $r2;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: java.util.Locale getLocale()>();

        return $r1;
    }

    public final java.lang.Class getSerializationView()
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        java.lang.Class r1;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        r1 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class _serializationView>;

        return r1;
    }

    public java.util.TimeZone getTimeZone()
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        java.util.TimeZone $r1;
        com.fasterxml.jackson.databind.SerializationConfig $r2;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: java.util.TimeZone getTimeZone()>();

        return $r1;
    }

    public com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.type.TypeFactory $r1;
        com.fasterxml.jackson.databind.SerializationConfig $r2;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r2 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r1 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        return $r1;
    }

    public com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        java.lang.Class $r1;
        com.fasterxml.jackson.databind.JsonSerializer r2;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: java.lang.Class;

        r2 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer>;

        return r2;
    }

    public final boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.MapperFeature $r1;
        boolean $z0;
        com.fasterxml.jackson.databind.SerializationConfig $r2;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.databind.MapperFeature;

        $r2 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>($r1);

        return $z0;
    }

    public final boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
    {
        com.fasterxml.jackson.databind.SerializerProvider $r0;
        com.fasterxml.jackson.databind.SerializationFeature $r1;
        boolean $z0;
        com.fasterxml.jackson.databind.SerializationConfig $r2;

        $r0 := @this: com.fasterxml.jackson.databind.SerializerProvider;

        $r1 := @parameter0: com.fasterxml.jackson.databind.SerializationFeature;

        $r2 = $r0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($r1);

        return $z0;
    }

    public abstract com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated, com.fasterxml.jackson.databind.introspect.ObjectIdInfo);

    public abstract com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Object);
}
