final class a.d.aj extends a.d.b
{
    private static final int H;
    int D;
    int E;
    int F;
    int G;
    int b;
    int c;
    int d;

    static void <clinit>()
    {
        int $i0;

        $i0 = staticinvoke <a.a: int a(java.lang.String,int)>("jcifs.smb.client.OpenAndX.ReadAndX", 1);

        <a.d.aj: int H> = $i0;

        return;
    }

    void <init>(java.lang.String, int, int)
    {
        a.d.aj $r0;
        java.lang.String $r1;
        int $i0, $i1;

        $r0 := @this: a.d.aj;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<a.d.b: void <init>(a.d.u)>(null);

        $r0.<a.d.aj: java.lang.String A> = $r1;

        $r0.<a.d.aj: byte g> = 45;

        $i0 = $i0 & 3;

        $r0.<a.d.aj: int c> = $i0;

        $i0 = $r0.<a.d.aj: int c>;

        if $i0 != 3 goto label1;

        $r0.<a.d.aj: int c> = 2;

     label1:
        $i0 = $r0.<a.d.aj: int c>;

        $i0 = $i0 | 64;

        $r0.<a.d.aj: int c> = $i0;

        $i0 = $r0.<a.d.aj: int c>;

        $i0 = $i0 & -2;

        $r0.<a.d.aj: int c> = $i0;

        $r0.<a.d.aj: int d> = 22;

        $r0.<a.d.aj: int D> = 0;

        $i0 = $i1 & 64;

        if $i0 != 64 goto label3;

        $i0 = $i1 & 16;

        if $i0 != 16 goto label2;

        $r0.<a.d.aj: int F> = 18;

        return;

     label2:
        $r0.<a.d.aj: int F> = 2;

        return;

     label3:
        $i0 = $i1 & 16;

        if $i0 != 16 goto label5;

        $i0 = $i1 & 32;

        if $i0 != 32 goto label4;

        $r0.<a.d.aj: int F> = 16;

        return;

     label4:
        $r0.<a.d.aj: int F> = 17;

        return;

     label5:
        $r0.<a.d.aj: int F> = 1;

        return;
    }

    final int a(byte)
    {
        a.d.aj $r0;
        byte $b0;
        int i1;

        $r0 := @this: a.d.aj;

        $b0 := @parameter0: byte;

        if $b0 != 46 goto label1;

        i1 = <a.d.aj: int H>;

        return i1;

     label1:
        return 0;
    }

    final int i(byte[], int)
    {
        a.d.aj $r0;
        byte[] $r1;
        int $i0, $i1, $i3;
        long $l2;

        $r0 := @this: a.d.aj;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = $r0.<a.d.aj: int b>;

        $l2 = (long) $i1;

        staticinvoke <a.d.aj: void a(long,byte[],int)>($l2, $r1, $i0);

        $i1 = $i0 + 2;

        $i3 = $r0.<a.d.aj: int c>;

        $l2 = (long) $i3;

        staticinvoke <a.d.aj: void a(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 2;

        $i3 = $r0.<a.d.aj: int d>;

        $l2 = (long) $i3;

        staticinvoke <a.d.aj: void a(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 2;

        $i3 = $r0.<a.d.aj: int D>;

        $l2 = (long) $i3;

        staticinvoke <a.d.aj: void a(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 2;

        $r0.<a.d.aj: int E> = 0;

        $i3 = $r0.<a.d.aj: int E>;

        $l2 = (long) $i3;

        staticinvoke <a.d.aj: void b(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 4;

        $i3 = $r0.<a.d.aj: int F>;

        $l2 = (long) $i3;

        staticinvoke <a.d.aj: void a(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 2;

        $i3 = $r0.<a.d.aj: int G>;

        $l2 = (long) $i3;

        staticinvoke <a.d.aj: void b(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 4;

        $i3 = 0;

     label1:
        if $i3 >= 8 goto label2;

        $r1[$i1] = 0;

        $i3 = $i3 + 1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $i0 = $i1 - $i0;

        return $i0;
    }

    final int j(byte[], int)
    {
        a.d.aj $r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.String $r2;

        $r0 := @this: a.d.aj;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $z0 = $r0.<a.d.aj: boolean t>;

        if $z0 == 0 goto label2;

        $i2 = $i0 + 1;

        $r1[$i0] = 0;

     label1:
        $r2 = $r0.<a.d.aj: java.lang.String A>;

        $i1 = virtualinvoke $r0.<a.d.aj: int a(java.lang.String,byte[],int)>($r2, $r1, $i2);

        $i1 = $i2 + $i1;

        $i0 = $i1 - $i0;

        return $i0;

     label2:
        $i2 = $i0;

        goto label1;
    }

    final int k(byte[], int)
    {
        a.d.aj $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.aj;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    final int l(byte[], int)
    {
        a.d.aj $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.aj;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    public final java.lang.String toString()
    {
        a.d.aj $r0;
        java.lang.String $r1, $r3;
        long $l0;
        java.lang.StringBuilder $r2;
        int $i1;
        java.util.Date $r4;

        $r0 := @this: a.d.aj;

        $r1 = new java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("SmbComOpenAndX[");

        $r3 = specialinvoke $r0.<a.d.b: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",flags=0x");

        $i1 = $r0.<a.d.aj: int b>;

        $r3 = staticinvoke <a.e.d: java.lang.String a(int,int)>($i1, 2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",desiredAccess=0x");

        $i1 = $r0.<a.d.aj: int c>;

        $r3 = staticinvoke <a.e.d: java.lang.String a(int,int)>($i1, 4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",searchAttributes=0x");

        $i1 = $r0.<a.d.aj: int d>;

        $r3 = staticinvoke <a.e.d: java.lang.String a(int,int)>($i1, 4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",fileAttributes=0x");

        $i1 = $r0.<a.d.aj: int D>;

        $r3 = staticinvoke <a.e.d: java.lang.String a(int,int)>($i1, 4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",creationTime=");

        $r4 = new java.util.Date;

        $i1 = $r0.<a.d.aj: int E>;

        $l0 = (long) $i1;

        specialinvoke $r4.<java.util.Date: void <init>(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",openFunction=0x");

        $i1 = $r0.<a.d.aj: int F>;

        $r3 = staticinvoke <a.e.d: java.lang.String a(int,int)>($i1, 2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allocationSize=");

        $i1 = $r0.<a.d.aj: int G>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",fileName=");

        $r3 = $r0.<a.d.aj: java.lang.String A>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>($r3);

        return $r1;
    }
}
