final class com.fasterxml.jackson.databind.util.ViewMatcher$Multi extends com.fasterxml.jackson.databind.util.ViewMatcher
{
    private final java.lang.Class[] _views;

    public void <init>(java.lang.Class[])
    {
        com.fasterxml.jackson.databind.util.ViewMatcher$Multi $r0;
        java.lang.Class[] $r1;

        $r0 := @this: com.fasterxml.jackson.databind.util.ViewMatcher$Multi;

        $r1 := @parameter0: java.lang.Class[];

        specialinvoke $r0.<com.fasterxml.jackson.databind.util.ViewMatcher: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.util.ViewMatcher$Multi: java.lang.Class[] _views> = $r1;

        return;
    }

    public final boolean isVisibleForView(java.lang.Class)
    {
        com.fasterxml.jackson.databind.util.ViewMatcher$Multi $r0;
        java.lang.Class $r1, $r3;
        int $i0, $i1;
        boolean $z0;
        java.lang.Class[] $r2;

        $r0 := @this: com.fasterxml.jackson.databind.util.ViewMatcher$Multi;

        $r1 := @parameter0: java.lang.Class;

        $r2 = $r0.<com.fasterxml.jackson.databind.util.ViewMatcher$Multi: java.lang.Class[] _views>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = $r0.<com.fasterxml.jackson.databind.util.ViewMatcher$Multi: java.lang.Class[] _views>;

        $r3 = $r2[$i1];

        if $r1 == $r3 goto label2;

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return 0;
    }
}
