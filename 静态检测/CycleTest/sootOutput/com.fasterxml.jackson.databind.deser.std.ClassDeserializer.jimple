public class com.fasterxml.jackson.databind.deser.std.ClassDeserializer extends com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer
{

    public void <init>()
    {
        com.fasterxml.jackson.databind.deser.std.ClassDeserializer $r0;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.ClassDeserializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "java/lang/Class");

        return;
    }

    public java.lang.Class deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.ClassDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.core.JsonToken $r3, $r4;
        java.lang.String $r5;
        java.lang.Class $r6;
        java.lang.Exception $r7;
        java.lang.Throwable $r8;
        com.fasterxml.jackson.databind.JsonMappingException $r9;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.ClassDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r3 != $r4 goto label4;

        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

     label1:
        $r6 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class findClass(java.lang.String)>($r5);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.std.ClassDeserializer: java.lang.Class _valueClass>;

        $r8 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable getRootCause(java.lang.Throwable)>($r7);

        $r9 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>($r6, $r8);

        throw $r9;

     label4:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.std.ClassDeserializer: java.lang.Class _valueClass>;

        $r9 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)>($r6, $r3);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public volatile java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.ClassDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.lang.Class $r3;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.ClassDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.ClassDeserializer: java.lang.Class deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r3;
    }
}
