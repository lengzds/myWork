class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1 extends java.lang.Object
{
    static final int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As;
    static final int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id;

    static void <clinit>()
    {
        com.fasterxml.jackson.annotation.JsonTypeInfo$Id[] $r0;
        int $i0;
        int[] $r1;
        com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id $r2;
        com.fasterxml.jackson.annotation.JsonTypeInfo$As[] $r3;
        com.fasterxml.jackson.'annotation'.JsonTypeInfo$As $r4;
        java.lang.NoSuchFieldError $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        $r0 = staticinvoke <com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: com.fasterxml.jackson.annotation.JsonTypeInfo$Id[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id> = $r1;

     label01:
        $r1 = <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id>;

        $r2 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: com.fasterxml.jackson.annotation.JsonTypeInfo$Id CLASS>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: int ordinal()>();

     label02:
        $r1[$i0] = 1;

     label03:
        $r1 = <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id>;

        $r2 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: com.fasterxml.jackson.annotation.JsonTypeInfo$Id MINIMAL_CLASS>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: int ordinal()>();

     label04:
        $r1[$i0] = 2;

     label05:
        $r1 = <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id>;

        $r2 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: com.fasterxml.jackson.annotation.JsonTypeInfo$Id NAME>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: int ordinal()>();

     label06:
        $r1[$i0] = 3;

     label07:
        $r1 = <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id>;

        $r2 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: com.fasterxml.jackson.annotation.JsonTypeInfo$Id NONE>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: int ordinal()>();

     label08:
        $r1[$i0] = 4;

     label09:
        $r1 = <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id>;

        $r2 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: com.fasterxml.jackson.annotation.JsonTypeInfo$Id CUSTOM>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: int ordinal()>();

     label10:
        $r1[$i0] = 5;

     label11:
        $r3 = staticinvoke <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.annotation.JsonTypeInfo$As[] values()>();

        $i0 = lengthof $r3;

        $r1 = newarray (int)[$i0];

        <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As> = $r1;

     label12:
        $r1 = <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As>;

        $r4 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.annotation.JsonTypeInfo$As WRAPPER_ARRAY>;

        $i0 = virtualinvoke $r4.<com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: int ordinal()>();

     label13:
        $r1[$i0] = 1;

     label14:
        $r1 = <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As>;

        $r4 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.annotation.JsonTypeInfo$As PROPERTY>;

        $i0 = virtualinvoke $r4.<com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: int ordinal()>();

     label15:
        $r1[$i0] = 2;

     label16:
        $r1 = <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As>;

        $r4 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.annotation.JsonTypeInfo$As WRAPPER_OBJECT>;

        $i0 = virtualinvoke $r4.<com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: int ordinal()>();

     label17:
        $r1[$i0] = 3;

     label18:
        $r1 = <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As>;

        $r4 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.annotation.JsonTypeInfo$As EXTERNAL_PROPERTY>;

        $i0 = virtualinvoke $r4.<com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: int ordinal()>();

     label19:
        $r1[$i0] = 4;

        return;

     label20:
        $r5 := @caughtexception;

        return;

     label21:
        $r6 := @caughtexception;

        goto label18;

     label22:
        $r7 := @caughtexception;

        goto label16;

     label23:
        $r8 := @caughtexception;

        goto label14;

     label24:
        $r9 := @caughtexception;

        goto label11;

     label25:
        $r10 := @caughtexception;

        goto label09;

     label26:
        $r11 := @caughtexception;

        goto label07;

     label27:
        $r12 := @caughtexception;

        goto label05;

     label28:
        $r13 := @caughtexception;

        goto label03;

        catch java.lang.NoSuchFieldError from label01 to label02 with label28;
        catch java.lang.NoSuchFieldError from label03 to label04 with label27;
        catch java.lang.NoSuchFieldError from label05 to label06 with label26;
        catch java.lang.NoSuchFieldError from label07 to label08 with label25;
        catch java.lang.NoSuchFieldError from label09 to label10 with label24;
        catch java.lang.NoSuchFieldError from label12 to label13 with label23;
        catch java.lang.NoSuchFieldError from label14 to label15 with label22;
        catch java.lang.NoSuchFieldError from label16 to label17 with label21;
        catch java.lang.NoSuchFieldError from label18 to label19 with label20;
    }
}
