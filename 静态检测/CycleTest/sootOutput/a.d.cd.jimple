final class a.d.cd extends a.d.as
{
    private int a;
    private int b;
    private long c;
    private long d;

    void <init>(int, int, long, long)
    {
        a.d.cd $r0;
        int $i0, $i1;
        long $l2, $l3;

        $r0 := @this: a.d.cd;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 := @parameter2: long;

        $l3 := @parameter3: long;

        specialinvoke $r0.<a.d.as: void <init>()>();

        $r0.<a.d.cd: int a> = $i0;

        $r0.<a.d.cd: int b> = $i1;

        $r0.<a.d.cd: long c> = $l2;

        $r0.<a.d.cd: long d> = $l3;

        $r0.<a.d.cd: byte g> = 50;

        $r0.<a.d.cd: byte S> = 8;

        $r0.<a.d.cd: int N> = 6;

        $r0.<a.d.cd: int O> = 0;

        $r0.<a.d.cd: byte P> = 0;

        return;
    }

    final int a(byte[], int)
    {
        a.d.cd $r0;
        byte[] $r1;
        int $i0, $i1;
        byte $b2;

        $r0 := @this: a.d.cd;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = $i0 + 1;

        $b2 = $r0.<a.d.cd: byte S>;

        $r1[$i0] = $b2;

        $r1[$i1] = 0;

        return 2;
    }

    final int b(byte[], int)
    {
        a.d.cd $r0;
        byte[] $r1;
        int $i0, $i1;
        long $l2;

        $r0 := @this: a.d.cd;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = $r0.<a.d.cd: int a>;

        $l2 = (long) $i1;

        staticinvoke <a.d.cd: void a(long,byte[],int)>($l2, $r1, $i0);

        $i1 = $i0 + 2;

        staticinvoke <a.d.cd: void a(long,byte[],int)>(257L, $r1, $i1);

        $i1 = $i1 + 2;

        staticinvoke <a.d.cd: void a(long,byte[],int)>(0L, $r1, $i1);

        $i1 = $i1 + 2;

        $i0 = $i1 - $i0;

        return $i0;
    }

    final int c(byte[], int)
    {
        a.d.cd $r0;
        byte[] $r1;
        int $i0, $i2, $i3;
        long $l1;

        $r0 := @this: a.d.cd;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $l1 = $r0.<a.d.cd: long c>;

        staticinvoke <a.d.cd: void d(long,byte[],int)>($l1, $r1, $i0);

        $i2 = $i0 + 8;

        staticinvoke <a.d.cd: void c(long,byte[],int)>(0L, $r1, $i2);

        $i2 = $i2 + 8;

        $l1 = $r0.<a.d.cd: long d>;

        staticinvoke <a.d.cd: void d(long,byte[],int)>($l1, $r1, $i2);

        $i2 = $i2 + 8;

        staticinvoke <a.d.cd: void c(long,byte[],int)>(0L, $r1, $i2);

        $i2 = $i2 + 8;

        $i3 = $r0.<a.d.cd: int b>;

        $i3 = $i3 | 128;

        $l1 = (long) $i3;

        staticinvoke <a.d.cd: void a(long,byte[],int)>($l1, $r1, $i2);

        $i2 = $i2 + 2;

        staticinvoke <a.d.cd: void c(long,byte[],int)>(0L, $r1, $i2);

        $i2 = $i2 + 6;

        $i0 = $i2 - $i0;

        return $i0;
    }

    public final java.lang.String toString()
    {
        a.d.cd $r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder $r2;
        int $i0;

        $r0 := @this: a.d.cd;

        $r1 = new java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Trans2SetFileInformation[");

        $r3 = specialinvoke $r0.<a.d.as: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",fid=");

        $i0 = $r0.<a.d.cd: int a>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>($r3);

        return $r1;
    }
}
