public final class a.e.g extends java.lang.Object
{
    byte[] a;
    int b;
    int c;

    public void <init>()
    {
        a.e.g $r0;

        $r0 := @this: a.e.g;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(byte[])
    {
        a.e.g $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.e.g;

        $r1 := @parameter0: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof $r1;

        specialinvoke $r0.<a.e.g: void a(byte[],int)>($r1, $i0);

        return;
    }

    private void a(byte[], int)
    {
        a.e.g $r0;
        byte[] $r1, $r2, $r3;
        int $i0, $i1, $i2;
        byte $b3, $b4;

        $r0 := @this: a.e.g;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 = newarray (byte)[256];

        $r0.<a.e.g: byte[] a> = $r2;

        $r0.<a.e.g: int b> = 0;

     label1:
        $i1 = $r0.<a.e.g: int b>;

        if $i1 >= 256 goto label2;

        $r2 = $r0.<a.e.g: byte[] a>;

        $i1 = $r0.<a.e.g: int b>;

        $i2 = $r0.<a.e.g: int b>;

        $b3 = (byte) $i2;

        $r2[$i1] = $b3;

        $i1 = $r0.<a.e.g: int b>;

        $i1 = $i1 + 1;

        $r0.<a.e.g: int b> = $i1;

        goto label1;

     label2:
        $r0.<a.e.g: int c> = 0;

        $r0.<a.e.g: int b> = 0;

     label3:
        $i1 = $r0.<a.e.g: int b>;

        if $i1 >= 256 goto label4;

        $i1 = $r0.<a.e.g: int c>;

        $i2 = $r0.<a.e.g: int b>;

        $i2 = $i2 % $i0;

        $i2 = $i2 + 0;

        $b3 = $r1[$i2];

        $i1 = $i1 + $b3;

        $r2 = $r0.<a.e.g: byte[] a>;

        $i2 = $r0.<a.e.g: int b>;

        $b3 = $r2[$i2];

        $i1 = $i1 + $b3;

        $i1 = $i1 & 255;

        $r0.<a.e.g: int c> = $i1;

        $r2 = $r0.<a.e.g: byte[] a>;

        $i1 = $r0.<a.e.g: int b>;

        $b3 = $r2[$i1];

        $r2 = $r0.<a.e.g: byte[] a>;

        $i2 = $r0.<a.e.g: int b>;

        $r3 = $r0.<a.e.g: byte[] a>;

        $i1 = $r0.<a.e.g: int c>;

        $b4 = $r3[$i1];

        $r2[$i2] = $b4;

        $r2 = $r0.<a.e.g: byte[] a>;

        $i1 = $r0.<a.e.g: int c>;

        $r2[$i1] = $b3;

        $i1 = $r0.<a.e.g: int b>;

        $i1 = $i1 + 1;

        $r0.<a.e.g: int b> = $i1;

        goto label3;

     label4:
        $r0.<a.e.g: int c> = 0;

        $r0.<a.e.g: int b> = 0;

        return;
    }

    public final void a(byte[], int, byte[], int)
    {
        a.e.g $r0;
        byte[] $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3;
        byte $b4, $b5, $b6;

        $r0 := @this: a.e.g;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

     label1:
        if $i0 >= 16 goto label2;

        $i2 = $r0.<a.e.g: int b>;

        $i2 = $i2 + 1;

        $i2 = $i2 & 255;

        $r0.<a.e.g: int b> = $i2;

        $i2 = $r0.<a.e.g: int c>;

        $r3 = $r0.<a.e.g: byte[] a>;

        $i3 = $r0.<a.e.g: int b>;

        $b4 = $r3[$i3];

        $i2 = $i2 + $b4;

        $i2 = $i2 & 255;

        $r0.<a.e.g: int c> = $i2;

        $r3 = $r0.<a.e.g: byte[] a>;

        $i2 = $r0.<a.e.g: int b>;

        $b4 = $r3[$i2];

        $r3 = $r0.<a.e.g: byte[] a>;

        $i2 = $r0.<a.e.g: int b>;

        $r4 = $r0.<a.e.g: byte[] a>;

        $i3 = $r0.<a.e.g: int c>;

        $b5 = $r4[$i3];

        $r3[$i2] = $b5;

        $r3 = $r0.<a.e.g: byte[] a>;

        $i2 = $r0.<a.e.g: int c>;

        $r3[$i2] = $b4;

        $i3 = $i0 + 1;

        $b4 = $r1[$i0];

        $r3 = $r0.<a.e.g: byte[] a>;

        $r4 = $r0.<a.e.g: byte[] a>;

        $i0 = $r0.<a.e.g: int b>;

        $b5 = $r4[$i0];

        $r4 = $r0.<a.e.g: byte[] a>;

        $i0 = $r0.<a.e.g: int c>;

        $b6 = $r4[$i0];

        $i0 = $b5 + $b6;

        $i0 = $i0 & 255;

        $b5 = $r3[$i0];

        $b4 = $b4 ^ $b5;

        $b4 = (byte) $b4;

        $r2[$i1] = $b4;

        $i1 = $i1 + 1;

        $i0 = $i3;

        goto label1;

     label2:
        return;
    }
}
