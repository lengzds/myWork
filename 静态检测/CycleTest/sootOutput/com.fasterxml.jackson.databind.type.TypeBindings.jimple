public class com.fasterxml.jackson.databind.type.TypeBindings extends java.lang.Object
{
    private static final com.fasterxml.jackson.databind.JavaType[] NO_TYPES;
    public static final com.fasterxml.jackson.databind.JavaType UNBOUND;
    protected java.util.Map _bindings;
    protected final java.lang.Class _contextClass;
    protected final com.fasterxml.jackson.databind.JavaType _contextType;
    private final com.fasterxml.jackson.databind.type.TypeBindings _parentBindings;
    protected java.util.HashSet _placeholders;
    protected final com.fasterxml.jackson.databind.type.TypeFactory _typeFactory;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.JavaType[] $r0;
        com.fasterxml.jackson.databind.type.SimpleType $r1;

        $r0 = newarray (com.fasterxml.jackson.databind.JavaType)[0];

        <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType[] NO_TYPES> = $r0;

        $r1 = new com.fasterxml.jackson.databind.type.SimpleType;

        specialinvoke $r1.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>(class "java/lang/Object");

        <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType UNBOUND> = $r1;

        return;
    }

    public void <init>(com.fasterxml.jackson.databind.type.TypeFactory, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.type.TypeBindings $r0;
        com.fasterxml.jackson.databind.type.TypeFactory $r1;
        com.fasterxml.jackson.databind.JavaType $r2;
        java.lang.Class $r3;

        $r0 := @this: com.fasterxml.jackson.databind.type.TypeBindings;

        $r1 := @parameter0: com.fasterxml.jackson.databind.type.TypeFactory;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $r3 = virtualinvoke $r2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBindings: void <init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Class,com.fasterxml.jackson.databind.JavaType)>($r1, null, $r3, $r2);

        return;
    }

    private void <init>(com.fasterxml.jackson.databind.type.TypeFactory, com.fasterxml.jackson.databind.type.TypeBindings, java.lang.Class, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.type.TypeBindings $r0, $r2;
        com.fasterxml.jackson.databind.type.TypeFactory $r1;
        java.lang.Class $r3;
        com.fasterxml.jackson.databind.JavaType $r4;

        $r0 := @this: com.fasterxml.jackson.databind.type.TypeBindings;

        $r1 := @parameter0: com.fasterxml.jackson.databind.type.TypeFactory;

        $r2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;

        $r3 := @parameter2: java.lang.Class;

        $r4 := @parameter3: com.fasterxml.jackson.databind.JavaType;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory> = $r1;

        $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings _parentBindings> = $r2;

        $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.lang.Class _contextClass> = $r3;

        $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType _contextType> = $r4;

        return;
    }

    public void <init>(com.fasterxml.jackson.databind.type.TypeFactory, java.lang.Class)
    {
        com.fasterxml.jackson.databind.type.TypeBindings $r0;
        com.fasterxml.jackson.databind.type.TypeFactory $r1;
        java.lang.Class $r2;

        $r0 := @this: com.fasterxml.jackson.databind.type.TypeBindings;

        $r1 := @parameter0: com.fasterxml.jackson.databind.type.TypeFactory;

        $r2 := @parameter1: java.lang.Class;

        specialinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBindings: void <init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Class,com.fasterxml.jackson.databind.JavaType)>($r1, null, $r2, null);

        return;
    }

    public void _addPlaceholder(java.lang.String)
    {
        com.fasterxml.jackson.databind.type.TypeBindings $r0;
        java.lang.String $r1;
        java.util.HashSet $r2;

        $r0 := @this: com.fasterxml.jackson.databind.type.TypeBindings;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.HashSet _placeholders>;

        if $r2 != null goto label1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.HashSet _placeholders> = $r2;

     label1:
        $r2 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.HashSet _placeholders>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

        return;
    }

    protected void _resolve()
    {
        com.fasterxml.jackson.databind.type.TypeBindings $r0;
        java.lang.Class $r1;
        com.fasterxml.jackson.databind.JavaType $r2;
        int $i0, $i1;
        java.lang.String $r3;
        java.util.Map $r4;

        $r0 := @this: com.fasterxml.jackson.databind.type.TypeBindings;

        $r1 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.lang.Class _contextClass>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBindings: void _resolveBindings(java.lang.reflect.Type)>($r1);

        $r2 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType _contextType>;

        if $r2 == null goto label2;

        $r2 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType _contextType>;

        $i0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.JavaType: int containedTypeCount()>();

        if $i0 <= 0 goto label2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType _contextType>;

        $r3 = virtualinvoke $r2.<com.fasterxml.jackson.databind.JavaType: java.lang.String containedTypeName(int)>($i1);

        $r2 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType _contextType>;

        $r2 = virtualinvoke $r2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType containedType(int)>($i1);

        virtualinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBindings: void addBinding(java.lang.String,com.fasterxml.jackson.databind.JavaType)>($r3, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r4 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        if $r4 != null goto label3;

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings> = $r4;

     label3:
        return;
    }

    protected void _resolveBindings(java.lang.reflect.Type)
    {
        com.fasterxml.jackson.databind.type.TypeBindings $r0;
        java.lang.reflect.Type $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.reflect.ParameterizedType $r2;
        java.lang.reflect.Type[] $r3;
        java.lang.Class $r4, $r14;
        java.lang.reflect.TypeVariable[] $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.lang.reflect.TypeVariable $r9;
        java.util.Map $r10;
        java.util.LinkedHashMap $r11;
        com.fasterxml.jackson.databind.type.TypeFactory $r12;
        com.fasterxml.jackson.databind.JavaType $r13;
        com.fasterxml.jackson.databind.JavaType[] $r15;

        $r0 := @this: com.fasterxml.jackson.databind.type.TypeBindings;

        $r1 := @parameter0: java.lang.reflect.Type;

        $i0 = 0;

        if $r1 != null goto label01;

        return;

     label01:
        $z0 = $r1 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label10;

        $r2 = (java.lang.reflect.ParameterizedType) $r1;

        $r3 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        if $r3 == null goto label07;

        $i1 = lengthof $r3;

        if $i1 <= 0 goto label07;

        $r1 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r4 = (java.lang.Class) $r1;

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $i1 = lengthof $r5;

        $i2 = lengthof $r3;

        if $i1 == $i2 goto label02;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Strange parametrized type (in class ");

        $r8 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): number of type arguments != number of type parameters (");

        $i0 = lengthof $r3;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $i0 = lengthof $r5;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label02:
        $i1 = lengthof $r3;

        $i2 = 0;

     label03:
        if $i2 >= $i1 goto label07;

        $r9 = $r5[$i2];

        $r8 = interfaceinvoke $r9.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        $r10 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        if $r10 != null goto label06;

        $r11 = new java.util.LinkedHashMap;

        specialinvoke $r11.<java.util.LinkedHashMap: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings> = $r11;

     label04:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBindings: void _addPlaceholder(java.lang.String)>($r8);

        $r10 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        $r12 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r1 = $r3[$i2];

        $r13 = virtualinvoke $r12.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>($r1, $r0);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r13);

     label05:
        $i2 = $i2 + 1;

        goto label03;

     label06:
        $r10 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        $z0 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z0 != 0 goto label05;

        goto label04;

     label07:
        $r1 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r4 = (java.lang.Class) $r1;

     label08:
        $r1 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBindings: void _resolveBindings(java.lang.reflect.Type)>($r1);

        $r3 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>();

        $i1 = lengthof $r3;

     label09:
        if $i0 >= $i1 goto label18;

        $r1 = $r3[$i0];

        virtualinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBindings: void _resolveBindings(java.lang.reflect.Type)>($r1);

        $i0 = $i0 + 1;

        goto label09;

     label10:
        $z0 = $r1 instanceof java.lang.Class;

        if $z0 == 0 goto label18;

        $r4 = (java.lang.Class) $r1;

        $r14 = virtualinvoke $r4.<java.lang.Class: java.lang.Class getDeclaringClass()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBindings: void _resolveBindings(java.lang.reflect.Type)>($r14);

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        if $r5 == null goto label17;

        $i1 = lengthof $r5;

        if $i1 <= 0 goto label17;

        $r15 = null;

        $r13 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType _contextType>;

        if $r13 == null goto label11;

        $r13 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType _contextType>;

        $r14 = virtualinvoke $r13.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r14);

        if $z0 == 0 goto label11;

        $r12 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r13 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType _contextType>;

        $r15 = virtualinvoke $r12.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r13, $r4);

     label11:
        $i1 = 0;

     label12:
        $i2 = lengthof $r5;

        if $i1 >= $i2 goto label17;

        $r9 = $r5[$i1];

        $r8 = interfaceinvoke $r9.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        $r3 = interfaceinvoke $r9.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();

        $r1 = $r3[0];

        if $r1 == null goto label14;

        $r10 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        if $r10 != null goto label15;

        $r11 = new java.util.LinkedHashMap;

        specialinvoke $r11.<java.util.LinkedHashMap: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings> = $r11;

     label13:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBindings: void _addPlaceholder(java.lang.String)>($r8);

        if $r15 == null goto label16;

        $r10 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        $r13 = $r15[$i1];

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r13);

     label14:
        $i1 = $i1 + 1;

        goto label12;

     label15:
        $r10 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        $z0 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z0 != 0 goto label14;

        goto label13;

     label16:
        $r10 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        $r12 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r13 = virtualinvoke $r12.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>($r1, $r0);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r13);

        goto label14;

     label17:
        goto label08;

     label18:
        return;
    }

    public void addBinding(java.lang.String, com.fasterxml.jackson.databind.JavaType)
    {
        com.fasterxml.jackson.databind.type.TypeBindings $r0;
        java.lang.String $r1;
        com.fasterxml.jackson.databind.JavaType $r2;
        int $i0;
        java.util.Map $r3;
        java.util.LinkedHashMap $r4;

        $r0 := @this: com.fasterxml.jackson.databind.type.TypeBindings;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JavaType;

        $r3 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        if $r3 == null goto label1;

        $r3 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings> = $r4;

     label2:
        $r3 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public com.fasterxml.jackson.databind.type.TypeBindings childInstance()
    {
        com.fasterxml.jackson.databind.type.TypeBindings $r0, $r1;
        com.fasterxml.jackson.databind.type.TypeFactory $r2;
        java.lang.Class $r3;
        com.fasterxml.jackson.databind.JavaType $r4;

        $r0 := @this: com.fasterxml.jackson.databind.type.TypeBindings;

        $r1 = new com.fasterxml.jackson.databind.type.TypeBindings;

        $r2 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r3 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.lang.Class _contextClass>;

        $r4 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType _contextType>;

        specialinvoke $r1.<com.fasterxml.jackson.databind.type.TypeBindings: void <init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Class,com.fasterxml.jackson.databind.JavaType)>($r2, $r0, $r3, $r4);

        return $r1;
    }

    public com.fasterxml.jackson.databind.JavaType findType(java.lang.String)
    {
        com.fasterxml.jackson.databind.type.TypeBindings $r0, $r7;
        java.lang.String $r1, $r9;
        java.lang.IllegalArgumentException $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        com.fasterxml.jackson.databind.JavaType $r5;
        java.util.HashSet $r6;
        boolean $z0;
        java.lang.Class $r8;
        int $i0;
        java.lang.StringBuilder $r10;

        $r0 := @this: com.fasterxml.jackson.databind.type.TypeBindings;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        if $r3 != null goto label1;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBindings: void _resolve()>();

     label1:
        $r3 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.fasterxml.jackson.databind.JavaType) $r4;

        if $r5 == null goto label2;

        return $r5;

     label2:
        $r6 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.HashSet _placeholders>;

        if $r6 == null goto label3;

        $r6 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.HashSet _placeholders>;

        $z0 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r5 = <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType UNBOUND>;

        return $r5;

     label3:
        $r7 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings _parentBindings>;

        if $r7 == null goto label4;

        $r0 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings _parentBindings>;

        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType findType(java.lang.String)>($r1);

        return $r5;

     label4:
        $r8 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.lang.Class _contextClass>;

        if $r8 == null goto label5;

        $r8 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.lang.Class _contextClass>;

        $r8 = virtualinvoke $r8.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        if $r8 == null goto label5;

        $r8 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.lang.Class _contextClass>;

        $i0 = virtualinvoke $r8.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 != 0 goto label5;

        $r5 = <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType UNBOUND>;

        return $r5;

     label5:
        $r8 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.lang.Class _contextClass>;

        if $r8 == null goto label7;

        $r8 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.lang.Class _contextClass>;

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Type variable \'");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' can not be resolved (with context of class ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label7:
        $r5 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType _contextType>;

        if $r5 == null goto label8;

        $r5 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType _contextType>;

        $r9 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JavaType: java.lang.String toString()>();

        goto label6;

     label8:
        $r9 = "UNKNOWN";

        goto label6;
    }

    public com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type)
    {
        com.fasterxml.jackson.databind.type.TypeBindings $r0;
        java.lang.reflect.Type $r1;
        com.fasterxml.jackson.databind.JavaType $r2;
        com.fasterxml.jackson.databind.type.TypeFactory $r3;

        $r0 := @this: com.fasterxml.jackson.databind.type.TypeBindings;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r3 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r2 = virtualinvoke $r3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>($r1, $r0);

        return $r2;
    }

    public java.lang.String toString()
    {
        com.fasterxml.jackson.databind.type.TypeBindings $r0;
        java.util.Map $r1;
        java.lang.StringBuilder $r2, $r5;
        com.fasterxml.jackson.databind.JavaType $r3;
        java.lang.String $r4;
        java.lang.Class $r6;

        $r0 := @this: com.fasterxml.jackson.databind.type.TypeBindings;

        $r1 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        if $r1 != null goto label1;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBindings: void _resolve()>();

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("[TypeBindings for ");

        $r3 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType _contextType>;

        if $r3 == null goto label3;

        $r3 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType _contextType>;

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JavaType: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label2:
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r1 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label3:
        $r6 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.lang.Class _contextClass>;

        $r4 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        goto label2;
    }

    public com.fasterxml.jackson.databind.JavaType[] typesAsArray()
    {
        com.fasterxml.jackson.databind.type.TypeBindings $r0;
        java.util.Map $r1;
        int $i0;
        java.util.Collection $r2;
        com.fasterxml.jackson.databind.JavaType[] $r3;
        java.lang.Object[] $r4;

        $r0 := @this: com.fasterxml.jackson.databind.type.TypeBindings;

        $r1 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        if $r1 != null goto label1;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBindings: void _resolve()>();

     label1:
        $r1 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        if $i0 != 0 goto label2;

        $r3 = <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType[] NO_TYPES>;

        return $r3;

     label2:
        $r1 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r1 = $r0.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.Map _bindings>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        $r3 = newarray (com.fasterxml.jackson.databind.JavaType)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (com.fasterxml.jackson.databind.JavaType[]) $r4;

        return $r3;
    }
}
