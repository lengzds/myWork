public final class com.fasterxml.jackson.databind.util.EnumValues extends java.lang.Object
{
    private final java.util.EnumMap _values;

    private void <init>(java.util.Map)
    {
        com.fasterxml.jackson.databind.util.EnumValues $r0;
        java.util.Map $r1;
        java.util.EnumMap $r2;

        $r0 := @this: com.fasterxml.jackson.databind.util.EnumValues;

        $r1 := @parameter0: java.util.Map;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.EnumMap;

        specialinvoke $r2.<java.util.EnumMap: void <init>(java.util.Map)>($r1);

        $r0.<com.fasterxml.jackson.databind.util.EnumValues: java.util.EnumMap _values> = $r2;

        return;
    }

    public static com.fasterxml.jackson.databind.util.EnumValues construct(java.lang.Class, com.fasterxml.jackson.databind.AnnotationIntrospector)
    {
        java.lang.Class $r0;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r1;
        com.fasterxml.jackson.databind.util.EnumValues $r2;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: com.fasterxml.jackson.databind.AnnotationIntrospector;

        $r2 = staticinvoke <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues constructFromName(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector)>($r0, $r1);

        return $r2;
    }

    public static com.fasterxml.jackson.databind.util.EnumValues constructFromName(java.lang.Class, com.fasterxml.jackson.databind.AnnotationIntrospector)
    {
        java.lang.Class $r0, $r4;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r1;
        int $i0, $i1;
        java.lang.Enum $r2;
        com.fasterxml.jackson.core.io.SerializedString $r3;
        java.lang.Object[] $r5;
        java.lang.Enum[] $r6;
        java.util.HashMap $r7;
        java.lang.String $r8;
        com.fasterxml.jackson.databind.util.EnumValues $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: com.fasterxml.jackson.databind.AnnotationIntrospector;

        $r4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class findEnumType(java.lang.Class)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        $r6 = (java.lang.Enum[]) $r5;

        if $r6 == null goto label3;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $i0 = lengthof $r6;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r6[$i1];

        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.String findEnumValue(java.lang.Enum)>($r2);

        $r3 = new com.fasterxml.jackson.core.io.SerializedString;

        specialinvoke $r3.<com.fasterxml.jackson.core.io.SerializedString: void <init>(java.lang.String)>($r8);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r9 = new com.fasterxml.jackson.databind.util.EnumValues;

        specialinvoke $r9.<com.fasterxml.jackson.databind.util.EnumValues: void <init>(java.util.Map)>($r7);

        return $r9;

     label3:
        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can not determine enum constants for Class ");

        $r8 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r10;
    }

    public static com.fasterxml.jackson.databind.util.EnumValues constructFromToString(java.lang.Class, com.fasterxml.jackson.databind.AnnotationIntrospector)
    {
        java.lang.Class $r0, $r4;
        com.fasterxml.jackson.databind.AnnotationIntrospector $r1;
        int $i0, $i1;
        java.lang.Enum $r2;
        com.fasterxml.jackson.core.io.SerializedString $r3;
        java.lang.Object[] $r5;
        java.lang.Enum[] $r6;
        java.util.HashMap $r7;
        java.lang.String $r8;
        com.fasterxml.jackson.databind.util.EnumValues $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: com.fasterxml.jackson.databind.AnnotationIntrospector;

        $r4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class findEnumType(java.lang.Class)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        $r6 = (java.lang.Enum[]) $r5;

        if $r6 == null goto label3;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $i0 = lengthof $r6;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r6[$i1];

        $r3 = new com.fasterxml.jackson.core.io.SerializedString;

        $r8 = virtualinvoke $r2.<java.lang.Enum: java.lang.String toString()>();

        specialinvoke $r3.<com.fasterxml.jackson.core.io.SerializedString: void <init>(java.lang.String)>($r8);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r9 = new com.fasterxml.jackson.databind.util.EnumValues;

        specialinvoke $r9.<com.fasterxml.jackson.databind.util.EnumValues: void <init>(java.util.Map)>($r7);

        return $r9;

     label3:
        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can not determine enum constants for Class ");

        $r8 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r10;
    }

    public final com.fasterxml.jackson.core.io.SerializedString serializedValueFor(java.lang.Enum)
    {
        com.fasterxml.jackson.databind.util.EnumValues $r0;
        java.lang.Enum $r1;
        java.lang.Object $r2;
        java.util.EnumMap $r3;
        com.fasterxml.jackson.core.io.SerializedString $r4;

        $r0 := @this: com.fasterxml.jackson.databind.util.EnumValues;

        $r1 := @parameter0: java.lang.Enum;

        $r3 = $r0.<com.fasterxml.jackson.databind.util.EnumValues: java.util.EnumMap _values>;

        $r2 = virtualinvoke $r3.<java.util.EnumMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.fasterxml.jackson.core.io.SerializedString) $r2;

        return $r4;
    }
}
