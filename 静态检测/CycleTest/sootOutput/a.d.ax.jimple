final class a.d.ax extends a.d.u
{
    private int D;
    private byte[] E;
    private int a;
    private int b;
    private int c;
    private int d;

    void <init>()
    {
        a.d.ax $r0;

        $r0 := @this: a.d.ax;

        specialinvoke $r0.<a.d.u: void <init>()>();

        $r0.<a.d.ax: byte g> = 11;

        return;
    }

    final void a(int, long, int, byte[], int, int)
    {
        a.d.ax $r0;
        int $i0, $i2, $i3, $i4;
        long $l1;
        byte[] $r1;

        $r0 := @this: a.d.ax;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i2 := @parameter2: int;

        $r1 := @parameter3: byte[];

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $r0.<a.d.ax: int a> = $i0;

        $l1 = 4294967295L & $l1;

        $i0 = (int) $l1;

        $r0.<a.d.ax: int c> = $i0;

        $r0.<a.d.ax: int d> = $i2;

        $r0.<a.d.ax: byte[] E> = $r1;

        $r0.<a.d.ax: int D> = $i3;

        $r0.<a.d.ax: int b> = $i4;

        $r0.<a.d.ax: a.d.v B> = null;

        return;
    }

    final int i(byte[], int)
    {
        a.d.ax $r0;
        byte[] $r1;
        int $i0, $i1, $i3;
        long $l2;

        $r0 := @this: a.d.ax;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = $r0.<a.d.ax: int a>;

        $l2 = (long) $i1;

        staticinvoke <a.d.ax: void a(long,byte[],int)>($l2, $r1, $i0);

        $i1 = $i0 + 2;

        $i3 = $r0.<a.d.ax: int b>;

        $l2 = (long) $i3;

        staticinvoke <a.d.ax: void a(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 2;

        $i3 = $r0.<a.d.ax: int c>;

        $l2 = (long) $i3;

        staticinvoke <a.d.ax: void b(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 4;

        $i3 = $r0.<a.d.ax: int d>;

        $l2 = (long) $i3;

        staticinvoke <a.d.ax: void a(long,byte[],int)>($l2, $r1, $i1);

        $i1 = $i1 + 2;

        $i0 = $i1 - $i0;

        return $i0;
    }

    final int j(byte[], int)
    {
        a.d.ax $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i4;
        long $l3;

        $r0 := @this: a.d.ax;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i2 = $i0 + 1;

        $r1[$i0] = 1;

        $i1 = $r0.<a.d.ax: int b>;

        $l3 = (long) $i1;

        staticinvoke <a.d.ax: void a(long,byte[],int)>($l3, $r1, $i2);

        $i2 = $i2 + 2;

        $r2 = $r0.<a.d.ax: byte[] E>;

        $i4 = $r0.<a.d.ax: int D>;

        $i1 = $r0.<a.d.ax: int b>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i4, $r1, $i2, $i1);

        $i1 = $r0.<a.d.ax: int b>;

        $i2 = $i2 + $i1;

        $i0 = $i2 - $i0;

        return $i0;
    }

    final int k(byte[], int)
    {
        a.d.ax $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.ax;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    final int l(byte[], int)
    {
        a.d.ax $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.ax;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    public final java.lang.String toString()
    {
        a.d.ax $r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder $r2;
        int $i0;

        $r0 := @this: a.d.ax;

        $r1 = new java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("SmbComWrite[");

        $r3 = specialinvoke $r0.<a.d.u: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",fid=");

        $i0 = $r0.<a.d.ax: int a>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",count=");

        $i0 = $r0.<a.d.ax: int b>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",offset=");

        $i0 = $r0.<a.d.ax: int c>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",remaining=");

        $i0 = $r0.<a.d.ax: int d>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>($r3);

        return $r1;
    }
}
