public class com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer extends com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase implements com.fasterxml.jackson.databind.deser.ContextualDeserializer
{
    protected final com.fasterxml.jackson.databind.type.ArrayType _arrayType;
    protected final java.lang.Class _elementClass;
    protected com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer;
    protected final com.fasterxml.jackson.databind.jsontype.TypeDeserializer _elementTypeDeserializer;
    protected final boolean _untyped;

    public void <init>(com.fasterxml.jackson.databind.type.ArrayType, com.fasterxml.jackson.databind.JsonDeserializer, com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
    {
        com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer $r0;
        com.fasterxml.jackson.databind.type.ArrayType $r1;
        com.fasterxml.jackson.databind.JsonDeserializer $r2;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r3;
        com.fasterxml.jackson.databind.JavaType $r4;
        java.lang.Class $r5;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.type.ArrayType;

        $r2 := @parameter1: com.fasterxml.jackson.databind.JsonDeserializer;

        $r3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(java.lang.Class)>(class "[Ljava/lang/Object;");

        $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.type.ArrayType _arrayType> = $r1;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType getContentType()>();

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Class _elementClass> = $r5;

        $r5 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Class _elementClass>;

        if $r5 != class "java/lang/Object" goto label2;

        $z0 = 1;

     label1:
        $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: boolean _untyped> = $z0;

        $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer> = $r2;

        $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _elementTypeDeserializer> = $r3;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    private final java.lang.Object[] handleNonArray(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.core.JsonToken $r3, $r4;
        com.fasterxml.jackson.databind.DeserializationFeature $r5;
        boolean $z0;
        java.lang.String $r6;
        int $i0;
        java.lang.Class $r7;
        java.lang.Byte[] $r8;
        com.fasterxml.jackson.databind.type.ArrayType $r9;
        com.fasterxml.jackson.databind.JsonMappingException $r10;
        java.lang.Object $r11, $r15;
        java.lang.Object[] $r12;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r13;
        com.fasterxml.jackson.databind.JsonDeserializer $r14;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r3 != $r4 goto label1;

        $r5 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT>;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>($r5);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r5 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_SINGLE_VALUE_AS_ARRAY>;

        $z0 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>($r5);

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r3 != $r4 goto label2;

        $r7 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Class _elementClass>;

        if $r7 != class "java/lang/Byte" goto label2;

        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Byte[] deserializeFromBase64(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r8;

     label2:
        $r9 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.type.ArrayType _arrayType>;

        $r7 = virtualinvoke $r9.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Class getRawClass()>();

        $r10 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class)>($r7);

        throw $r10;

     label3:
        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        if $r3 != $r4 goto label6;

        $r11 = null;

     label4:
        $z0 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: boolean _untyped>;

        if $z0 == 0 goto label8;

        $r12 = newarray (java.lang.Object)[1];

     label5:
        $r12[0] = $r11;

        return $r12;

     label6:
        $r13 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _elementTypeDeserializer>;

        if $r13 != null goto label7;

        $r14 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer>;

        $r11 = virtualinvoke $r14.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        goto label4;

     label7:
        $r14 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer>;

        $r13 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _elementTypeDeserializer>;

        $r11 = virtualinvoke $r14.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>($r1, $r2, $r13);

        goto label4;

     label8:
        $r7 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Class _elementClass>;

        $r15 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r7, 1);

        $r12 = (java.lang.Object[]) $r15;

        goto label5;
    }

    public com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty)
    {
        com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer $r0;
        com.fasterxml.jackson.databind.DeserializationContext $r1;
        com.fasterxml.jackson.databind.BeanProperty $r2;
        com.fasterxml.jackson.databind.JsonDeserializer $r3;
        com.fasterxml.jackson.databind.type.ArrayType $r4;
        com.fasterxml.jackson.databind.JavaType $r5;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r6;
        boolean $z0;
        com.fasterxml.jackson.databind.deser.ContextualDeserializer $r7;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer>;

        if $r3 != null goto label3;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.type.ArrayType _arrayType>;

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType getContentType()>();

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>($r5, $r2);

     label1:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _elementTypeDeserializer>;

        if $r6 == null goto label2;

        $r6 = virtualinvoke $r6.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty)>($r2);

     label2:
        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer withDeserializer(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)>($r6, $r3);

        return $r0;

     label3:
        $z0 = $r3 instanceof com.fasterxml.jackson.databind.deser.ContextualDeserializer;

        if $z0 == 0 goto label1;

        $r7 = (com.fasterxml.jackson.databind.deser.ContextualDeserializer) $r3;

        $r3 = interfaceinvoke $r7.<com.fasterxml.jackson.databind.deser.ContextualDeserializer: com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>($r1, $r2);

        goto label1;
    }

    public volatile java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.lang.Object[] $r3;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Object[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r3;
    }

    public java.lang.Object[] deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r3;
        boolean $z0;
        java.lang.Object[] $r4;
        com.fasterxml.jackson.databind.util.ObjectBuffer $r5;
        int $i0, $i1;
        com.fasterxml.jackson.core.JsonToken $r6, $r7;
        java.lang.Object $r8;
        com.fasterxml.jackson.databind.JsonDeserializer $r9;
        java.lang.Class $r10;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $z0 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z0 != 0 goto label01;

        $r4 = specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Object[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r4;

     label01:
        $r5 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ObjectBuffer leaseObjectBuffer()>();

        $r4 = virtualinvoke $r5.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] resetAndStart()>();

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _elementTypeDeserializer>;

        $i0 = 0;

     label02:
        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if $r6 == $r7 goto label07;

        $r7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        if $r6 != $r7 goto label05;

        $r8 = null;

     label03:
        $i1 = lengthof $r4;

        if $i0 < $i1 goto label10;

        $r4 = virtualinvoke $r5.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] appendCompletedChunk(java.lang.Object[])>($r4);

        $i1 = 0;

     label04:
        $i0 = $i1 + 1;

        $r4[$i1] = $r8;

        goto label02;

     label05:
        if $r3 != null goto label06;

        $r9 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer>;

        $r8 = virtualinvoke $r9.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        goto label03;

     label06:
        $r9 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer>;

        $r8 = virtualinvoke $r9.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>($r1, $r2, $r3);

        goto label03;

     label07:
        $z0 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: boolean _untyped>;

        if $z0 == 0 goto label09;

        $r4 = virtualinvoke $r5.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int)>($r4, $i0);

     label08:
        virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: void returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)>($r5);

        return $r4;

     label09:
        $r10 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Class _elementClass>;

        $r4 = virtualinvoke $r5.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class)>($r4, $i0, $r10);

        goto label08;

     label10:
        $i1 = $i0;

        goto label04;
    }

    protected java.lang.Byte[] deserializeFromBase64(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.lang.Byte[] $r3;
        int $i0, $i1;
        com.fasterxml.jackson.core.Base64Variant $r4;
        byte[] $r5;
        byte $b2;
        java.lang.Byte $r6;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r4 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();

        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant)>($r4);

        $i0 = lengthof $r5;

        $r3 = newarray (java.lang.Byte)[$i0];

        $i1 = 0;

        $i0 = lengthof $r5;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r5[$i1];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3[$i1] = $r6;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public volatile java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
    {
        com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r3;
        java.lang.Object[] $r4;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Object[] deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>($r1, $r2, $r3);

        return $r4;
    }

    public java.lang.Object[] deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
    {
        com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r5 = (java.lang.Object[]) $r4;

        return $r5;
    }

    public com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer()
    {
        com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer $r0;
        com.fasterxml.jackson.databind.JsonDeserializer r1;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer;

        r1 = $r0.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer>;

        return r1;
    }

    public com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer withDeserializer(com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.JsonDeserializer)
    {
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r0, $r5;
        com.fasterxml.jackson.databind.JsonDeserializer $r1, $r4;
        com.fasterxml.jackson.databind.type.ArrayType $r2;
        com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer $r3, $r6;

        $r3 := @this: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer;

        $r0 := @parameter0: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        $r1 := @parameter1: com.fasterxml.jackson.databind.JsonDeserializer;

        $r4 = $r3.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer>;

        if $r1 != $r4 goto label1;

        $r5 = $r3.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _elementTypeDeserializer>;

        if $r0 != $r5 goto label1;

        return $r3;

     label1:
        $r6 = new com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer;

        $r2 = $r3.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.type.ArrayType _arrayType>;

        specialinvoke $r6.<com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: void <init>(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>($r2, $r1, $r0);

        return $r6;
    }
}
