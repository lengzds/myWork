public final enum class com.fasterxml.jackson.core.JsonToken extends java.lang.Enum
{
    private static final com.fasterxml.jackson.core.JsonToken[] $VALUES;
    public static final enum com.fasterxml.jackson.core.JsonToken END_ARRAY;
    public static final enum com.fasterxml.jackson.core.JsonToken END_OBJECT;
    public static final enum com.fasterxml.jackson.core.JsonToken FIELD_NAME;
    public static final enum com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE;
    public static final enum com.fasterxml.jackson.core.JsonToken START_ARRAY;
    public static final enum com.fasterxml.jackson.core.JsonToken START_OBJECT;
    public static final enum com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT;
    public static final enum com.fasterxml.jackson.core.JsonToken VALUE_FALSE;
    public static final enum com.fasterxml.jackson.core.JsonToken VALUE_NULL;
    public static final enum com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT;
    public static final enum com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT;
    public static final enum com.fasterxml.jackson.core.JsonToken VALUE_STRING;
    public static final enum com.fasterxml.jackson.core.JsonToken VALUE_TRUE;
    final java.lang.String _serialized;
    final byte[] _serializedBytes;
    final char[] _serializedChars;

    static void <clinit>()
    {
        com.fasterxml.jackson.core.JsonToken $r0;
        com.fasterxml.jackson.core.JsonToken[] $r1;

        $r0 = new com.fasterxml.jackson.core.JsonToken;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String)>("NOT_AVAILABLE", 0, null);

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE> = $r0;

        $r0 = new com.fasterxml.jackson.core.JsonToken;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String)>("START_OBJECT", 1, "{");

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT> = $r0;

        $r0 = new com.fasterxml.jackson.core.JsonToken;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String)>("END_OBJECT", 2, "}");

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT> = $r0;

        $r0 = new com.fasterxml.jackson.core.JsonToken;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String)>("START_ARRAY", 3, "[");

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY> = $r0;

        $r0 = new com.fasterxml.jackson.core.JsonToken;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String)>("END_ARRAY", 4, "]");

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY> = $r0;

        $r0 = new com.fasterxml.jackson.core.JsonToken;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String)>("FIELD_NAME", 5, null);

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME> = $r0;

        $r0 = new com.fasterxml.jackson.core.JsonToken;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String)>("VALUE_EMBEDDED_OBJECT", 6, null);

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT> = $r0;

        $r0 = new com.fasterxml.jackson.core.JsonToken;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String)>("VALUE_STRING", 7, null);

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING> = $r0;

        $r0 = new com.fasterxml.jackson.core.JsonToken;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String)>("VALUE_NUMBER_INT", 8, null);

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT> = $r0;

        $r0 = new com.fasterxml.jackson.core.JsonToken;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String)>("VALUE_NUMBER_FLOAT", 9, null);

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT> = $r0;

        $r0 = new com.fasterxml.jackson.core.JsonToken;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String)>("VALUE_TRUE", 10, "true");

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_TRUE> = $r0;

        $r0 = new com.fasterxml.jackson.core.JsonToken;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String)>("VALUE_FALSE", 11, "false");

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_FALSE> = $r0;

        $r0 = new com.fasterxml.jackson.core.JsonToken;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String)>("VALUE_NULL", 12, "null");

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL> = $r0;

        $r1 = newarray (com.fasterxml.jackson.core.JsonToken)[13];

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        $r1[0] = $r0;

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        $r1[1] = $r0;

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        $r1[2] = $r0;

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        $r1[3] = $r0;

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        $r1[4] = $r0;

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        $r1[5] = $r0;

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        $r1[6] = $r0;

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        $r1[7] = $r0;

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        $r1[8] = $r0;

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        $r1[9] = $r0;

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        $r1[10] = $r0;

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        $r1[11] = $r0;

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        $r1[12] = $r0;

        <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken[] $VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        com.fasterxml.jackson.core.JsonToken $r0;
        java.lang.String $r1, $r2;
        int $i0, $i1;
        byte[] $r3;
        char[] $r4;
        char $c2;
        byte $b3;

        $r0 := @this: com.fasterxml.jackson.core.JsonToken;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        if $r2 != null goto label1;

        $r0.<com.fasterxml.jackson.core.JsonToken: java.lang.String _serialized> = null;

        $r0.<com.fasterxml.jackson.core.JsonToken: char[] _serializedChars> = null;

        $r0.<com.fasterxml.jackson.core.JsonToken: byte[] _serializedBytes> = null;

        return;

     label1:
        $r0.<com.fasterxml.jackson.core.JsonToken: java.lang.String _serialized> = $r2;

        $r4 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $r0.<com.fasterxml.jackson.core.JsonToken: char[] _serializedChars> = $r4;

        $r4 = $r0.<com.fasterxml.jackson.core.JsonToken: char[] _serializedChars>;

        $i0 = lengthof $r4;

        $r3 = newarray (byte)[$i0];

        $r0.<com.fasterxml.jackson.core.JsonToken: byte[] _serializedBytes> = $r3;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r3 = $r0.<com.fasterxml.jackson.core.JsonToken: byte[] _serializedBytes>;

        $r4 = $r0.<com.fasterxml.jackson.core.JsonToken: char[] _serializedChars>;

        $c2 = $r4[$i1];

        $b3 = (byte) $c2;

        $r3[$i1] = $b3;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public static com.fasterxml.jackson.core.JsonToken valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.fasterxml.jackson.core.JsonToken $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/fasterxml/jackson/core/JsonToken", $r0);

        $r2 = (com.fasterxml.jackson.core.JsonToken) $r1;

        return $r2;
    }

    public static com.fasterxml.jackson.core.JsonToken[] values()
    {
        java.lang.Object $r0;
        com.fasterxml.jackson.core.JsonToken[] $r1;

        $r1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.fasterxml.jackson.core.JsonToken[]) $r0;

        return $r1;
    }

    public final char[] asCharArray()
    {
        com.fasterxml.jackson.core.JsonToken $r0;
        char[] r1;

        $r0 := @this: com.fasterxml.jackson.core.JsonToken;

        r1 = $r0.<com.fasterxml.jackson.core.JsonToken: char[] _serializedChars>;

        return r1;
    }

    public final java.lang.String asString()
    {
        com.fasterxml.jackson.core.JsonToken $r0;
        java.lang.String r1;

        $r0 := @this: com.fasterxml.jackson.core.JsonToken;

        r1 = $r0.<com.fasterxml.jackson.core.JsonToken: java.lang.String _serialized>;

        return r1;
    }

    public final boolean isNumeric()
    {
        com.fasterxml.jackson.core.JsonToken $r0, $r1;

        $r0 := @this: com.fasterxml.jackson.core.JsonToken;

        $r1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if $r0 == $r1 goto label1;

        $r1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        if $r0 != $r1 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public final boolean isScalarValue()
    {
        com.fasterxml.jackson.core.JsonToken $r0;
        int $i0, $i1;

        $r0 := @this: com.fasterxml.jackson.core.JsonToken;

        $i0 = virtualinvoke $r0.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        $r0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        $i1 = virtualinvoke $r0.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        if $i0 < $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
}
