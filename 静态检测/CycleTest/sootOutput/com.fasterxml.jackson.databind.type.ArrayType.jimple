public final class com.fasterxml.jackson.databind.type.ArrayType extends com.fasterxml.jackson.databind.type.TypeBase
{
    protected final com.fasterxml.jackson.databind.JavaType _componentType;
    protected final java.lang.Object _emptyArray;

    private void <init>(com.fasterxml.jackson.databind.JavaType, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;
        com.fasterxml.jackson.databind.JavaType $r1;
        java.lang.Object $r2, $r3, $r4;
        java.lang.Class $r5;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $r4 := @parameter3: java.lang.Object;

        $r5 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: int hashCode()>();

        specialinvoke $r0.<com.fasterxml.jackson.databind.type.TypeBase: void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object)>($r5, $i0, $r3, $r4);

        $r0.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType> = $r1;

        $r0.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _emptyArray> = $r2;

        return;
    }

    public static com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType, java.lang.Object, java.lang.Object)
    {
        com.fasterxml.jackson.databind.JavaType $r0;
        java.lang.Object $r1, $r2;
        java.lang.Class $r3;
        com.fasterxml.jackson.databind.type.ArrayType $r4;

        $r0 := @parameter0: com.fasterxml.jackson.databind.JavaType;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r3, 0);

        $r4 = new com.fasterxml.jackson.databind.type.ArrayType;

        specialinvoke $r4.<com.fasterxml.jackson.databind.type.ArrayType: void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,java.lang.Object)>($r0, $r1, null, null);

        return $r4;
    }

    protected final com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class)
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;
        java.lang.Class $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        com.fasterxml.jackson.databind.type.TypeFactory $r5;
        com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7, $r8;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r1 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Incompatible narrowing operation: trying to narrow ");

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to class ");

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r1 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $r5 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()>();

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>($r1);

        $r7 = $r0.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _valueHandler>;

        $r8 = $r0.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _typeHandler>;

        $r0 = staticinvoke <com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object)>($r6, $r7, $r8);

        return $r0;
    }

    protected final java.lang.String buildCanonicalName()
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;
        java.lang.String $r1;
        java.lang.Class $r2;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r2 = $r0.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Class _class>;

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r1;
    }

    public final com.fasterxml.jackson.databind.JavaType containedType(int)
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;
        int $i0;
        com.fasterxml.jackson.databind.JavaType r1;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        r1 = $r0.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        return r1;

     label1:
        return null;
    }

    public final int containedTypeCount()
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        return 1;
    }

    public final java.lang.String containedTypeName(int)
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        return "E";

     label1:
        return null;
    }

    public final boolean equals(java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0, $r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        com.fasterxml.jackson.databind.JavaType $r5, $r6;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != $r0 goto label1;

        return 1;

     label1:
        if $r1 == null goto label2;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 != $r3 goto label2;

        $r4 = (com.fasterxml.jackson.databind.type.ArrayType) $r1;

        $r5 = $r0.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $r6 = $r4.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $z0 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>($r6);

        return $z0;

     label2:
        return 0;
    }

    public final com.fasterxml.jackson.databind.JavaType getContentType()
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;
        com.fasterxml.jackson.databind.JavaType r1;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        r1 = $r0.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        return r1;
    }

    public final boolean hasGenericTypes()
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;
        boolean $z0;
        com.fasterxml.jackson.databind.JavaType $r1;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r1 = $r0.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $z0 = virtualinvoke $r1.<com.fasterxml.jackson.databind.JavaType: boolean hasGenericTypes()>();

        return $z0;
    }

    public final boolean isAbstract()
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        return 0;
    }

    public final boolean isArrayType()
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        return 1;
    }

    public final boolean isConcrete()
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        return 1;
    }

    public final boolean isContainerType()
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        return 1;
    }

    public final com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class)
    {
        java.lang.Class $r0, $r5;
        java.lang.Object $r1, $r2;
        com.fasterxml.jackson.databind.type.ArrayType $r3;
        com.fasterxml.jackson.databind.JavaType $r4;

        $r3 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r0 := @parameter0: java.lang.Class;

        $r4 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        if $r0 != $r5 goto label1;

        return $r3;

     label1:
        $r4 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $r4 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType narrowBy(java.lang.Class)>($r0);

        $r1 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _valueHandler>;

        $r2 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _typeHandler>;

        $r3 = staticinvoke <com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object)>($r4, $r1, $r2);

        return $r3;
    }

    public final java.lang.String toString()
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;
        java.lang.StringBuilder $r1;
        com.fasterxml.jackson.databind.JavaType $r2;
        java.lang.String $r3;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("[array type, component type: ");

        $r2 = $r0.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public final com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class)
    {
        java.lang.Class $r0, $r5;
        java.lang.Object $r1, $r2;
        com.fasterxml.jackson.databind.type.ArrayType $r3;
        com.fasterxml.jackson.databind.JavaType $r4;

        $r3 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r0 := @parameter0: java.lang.Class;

        $r4 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        if $r0 != $r5 goto label1;

        return $r3;

     label1:
        $r4 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $r4 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType widenBy(java.lang.Class)>($r0);

        $r1 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _valueHandler>;

        $r2 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _typeHandler>;

        $r3 = staticinvoke <com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object)>($r4, $r1, $r2);

        return $r3;
    }

    public final volatile com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;
        java.lang.Object $r1;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r1 := @parameter0: java.lang.Object;

        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.type.ArrayType withContentTypeHandler(java.lang.Object)>($r1);

        return $r0;
    }

    public final com.fasterxml.jackson.databind.type.ArrayType withContentTypeHandler(java.lang.Object)
    {
        java.lang.Object $r0, $r1, $r2;
        com.fasterxml.jackson.databind.type.ArrayType $r3, $r5;
        com.fasterxml.jackson.databind.JavaType $r4;

        $r3 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r0 := @parameter0: java.lang.Object;

        $r4 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $r1 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getTypeHandler()>();

        if $r0 != $r1 goto label1;

        return $r3;

     label1:
        $r5 = new com.fasterxml.jackson.databind.type.ArrayType;

        $r4 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $r4 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object)>($r0);

        $r0 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _emptyArray>;

        $r1 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _valueHandler>;

        $r2 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _typeHandler>;

        specialinvoke $r5.<com.fasterxml.jackson.databind.type.ArrayType: void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r0, $r1, $r2);

        return $r5;
    }

    public final volatile com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;
        java.lang.Object $r1;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r1 := @parameter0: java.lang.Object;

        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.type.ArrayType withContentValueHandler(java.lang.Object)>($r1);

        return $r0;
    }

    public final com.fasterxml.jackson.databind.type.ArrayType withContentValueHandler(java.lang.Object)
    {
        java.lang.Object $r0, $r1, $r2;
        com.fasterxml.jackson.databind.type.ArrayType $r3, $r5;
        com.fasterxml.jackson.databind.JavaType $r4;

        $r3 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r0 := @parameter0: java.lang.Object;

        $r4 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $r1 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();

        if $r0 != $r1 goto label1;

        return $r3;

     label1:
        $r5 = new com.fasterxml.jackson.databind.type.ArrayType;

        $r4 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $r4 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object)>($r0);

        $r0 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _emptyArray>;

        $r1 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _valueHandler>;

        $r2 = $r3.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _typeHandler>;

        specialinvoke $r5.<com.fasterxml.jackson.databind.type.ArrayType: void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r0, $r1, $r2);

        return $r5;
    }

    public final volatile com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;
        java.lang.Object $r1;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r1 := @parameter0: java.lang.Object;

        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.type.ArrayType withTypeHandler(java.lang.Object)>($r1);

        return $r0;
    }

    public final com.fasterxml.jackson.databind.type.ArrayType withTypeHandler(java.lang.Object)
    {
        java.lang.Object $r0, $r2, $r3;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.type.ArrayType $r4, $r5;

        $r4 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r0 := @parameter0: java.lang.Object;

        $r2 = $r4.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _typeHandler>;

        if $r0 != $r2 goto label1;

        return $r4;

     label1:
        $r5 = new com.fasterxml.jackson.databind.type.ArrayType;

        $r1 = $r4.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $r2 = $r4.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _emptyArray>;

        $r3 = $r4.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _valueHandler>;

        specialinvoke $r5.<com.fasterxml.jackson.databind.type.ArrayType: void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, $r2, $r3, $r0);

        return $r5;
    }

    public final volatile com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object)
    {
        com.fasterxml.jackson.databind.type.ArrayType $r0;
        java.lang.Object $r1;

        $r0 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r1 := @parameter0: java.lang.Object;

        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.type.ArrayType withValueHandler(java.lang.Object)>($r1);

        return $r0;
    }

    public final com.fasterxml.jackson.databind.type.ArrayType withValueHandler(java.lang.Object)
    {
        java.lang.Object $r0, $r2, $r3;
        com.fasterxml.jackson.databind.JavaType $r1;
        com.fasterxml.jackson.databind.type.ArrayType $r4, $r5;

        $r4 := @this: com.fasterxml.jackson.databind.type.ArrayType;

        $r0 := @parameter0: java.lang.Object;

        $r2 = $r4.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _valueHandler>;

        if $r0 != $r2 goto label1;

        return $r4;

     label1:
        $r5 = new com.fasterxml.jackson.databind.type.ArrayType;

        $r1 = $r4.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType _componentType>;

        $r2 = $r4.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _emptyArray>;

        $r3 = $r4.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Object _typeHandler>;

        specialinvoke $r5.<com.fasterxml.jackson.databind.type.ArrayType: void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, $r2, $r0, $r3);

        return $r5;
    }
}
