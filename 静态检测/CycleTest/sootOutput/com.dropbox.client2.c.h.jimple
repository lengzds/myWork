final class com.dropbox.client2.c.h extends java.lang.Object implements org.apache.http.conn.ConnectionKeepAliveStrategy
{

    private void <init>()
    {
        com.dropbox.client2.c.h $r0;

        $r0 := @this: com.dropbox.client2.c.h;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(byte)
    {
        com.dropbox.client2.c.h $r0;
        byte $b0;

        $r0 := @this: com.dropbox.client2.c.h;

        $b0 := @parameter0: byte;

        specialinvoke $r0.<com.dropbox.client2.c.h: void <init>()>();

        return;
    }

    public final long getKeepAliveDuration(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)
    {
        com.dropbox.client2.c.h $r0;
        org.apache.http.HttpResponse $r1;
        org.apache.http.protocol.HttpContext $r2;
        org.apache.http.message.BasicHeaderElementIterator $r3;
        long $l0, $l1;
        org.apache.http.HeaderIterator $r4;
        boolean $z0;
        org.apache.http.HeaderElement $r5;
        java.lang.String $r6, $r7;
        java.lang.NumberFormatException $r8;

        $r0 := @this: com.dropbox.client2.c.h;

        $r1 := @parameter0: org.apache.http.HttpResponse;

        $r2 := @parameter1: org.apache.http.protocol.HttpContext;

        $l0 = 20000L;

        $r3 = new org.apache.http.message.BasicHeaderElementIterator;

        $r4 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.HeaderIterator headerIterator(java.lang.String)>("Keep-Alive");

        specialinvoke $r3.<org.apache.http.message.BasicHeaderElementIterator: void <init>(org.apache.http.HeaderIterator)>($r4);

     label1:
        $z0 = interfaceinvoke $r3.<org.apache.http.HeaderElementIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r3.<org.apache.http.HeaderElementIterator: org.apache.http.HeaderElement nextElement()>();

        $r6 = interfaceinvoke $r5.<org.apache.http.HeaderElement: java.lang.String getName()>();

        $r7 = interfaceinvoke $r5.<org.apache.http.HeaderElement: java.lang.String getValue()>();

        if $r7 == null goto label1;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("timeout");

        if $z0 == 0 goto label1;

     label2:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r7);

     label3:
        $l1 = $l1 * 1000L;

     label4:
        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l1);

     label5:
        goto label1;

     label6:
        return $l0;

     label7:
        $r8 := @caughtexception;

        goto label1;

        catch java.lang.NumberFormatException from label2 to label3 with label7;
        catch java.lang.NumberFormatException from label4 to label5 with label7;
    }
}
