public class com.fasterxml.jackson.databind.deser.BeanDeserializer extends com.fasterxml.jackson.databind.deser.BeanDeserializerBase
{

    protected void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.databind.deser.BeanDeserializerBase $r1;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.deser.BeanDeserializerBase;

        $z0 = $r1.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: boolean _ignoreAllUnknown>;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean)>($r1, $z0);

        return;
    }

    public void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase, com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.databind.deser.BeanDeserializerBase $r1;
        com.fasterxml.jackson.databind.deser.impl.ObjectIdReader $r2;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.deser.BeanDeserializerBase;

        $r2 := @parameter1: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)>($r1, $r2);

        return;
    }

    protected void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase, com.fasterxml.jackson.databind.util.NameTransformer)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.databind.deser.BeanDeserializerBase $r1;
        com.fasterxml.jackson.databind.util.NameTransformer $r2;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.deser.BeanDeserializerBase;

        $r2 := @parameter1: com.fasterxml.jackson.databind.util.NameTransformer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer)>($r1, $r2);

        return;
    }

    public void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase, java.util.HashSet)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.databind.deser.BeanDeserializerBase $r1;
        java.util.HashSet $r2;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.deser.BeanDeserializerBase;

        $r2 := @parameter1: java.util.HashSet;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.HashSet)>($r1, $r2);

        return;
    }

    public void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap, java.util.Map, java.util.HashSet, boolean, boolean)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder $r1;
        com.fasterxml.jackson.databind.BeanDescription $r2;
        com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap $r3;
        java.util.Map $r4;
        java.util.HashSet $r5;
        boolean $z0, $z1;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder;

        $r2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;

        $r3 := @parameter2: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap;

        $r4 := @parameter3: java.util.Map;

        $r5 := @parameter4: java.util.HashSet;

        $z0 := @parameter5: boolean;

        $z1 := @parameter6: boolean;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean)>($r1, $r2, $r3, $r4, $r5, $z0, $z1);

        return;
    }

    private final void _vanillaDeserializeHandleUnknown(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object, java.lang.String)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        boolean $z0;
        java.util.HashSet $r5;
        com.fasterxml.jackson.databind.deser.SettableAnyProperty $r6;
        java.lang.Exception $r7;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: java.lang.Object;

        $r4 := @parameter3: java.lang.String;

        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r5 == null goto label1;

        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r5.<java.util.HashSet: boolean contains(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

        return;

     label1:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        if $r6 == null goto label5;

     label2:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.SettableAnyProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r3, $r4);

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r7, $r3, $r4, $r2);

        return;

     label5:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r3, $r4);

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private final java.lang.Object vanillaDeserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.core.JsonToken)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.core.JsonToken $r3, $r6;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r4;
        java.lang.Object $r5;
        java.lang.String $r7;
        com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap $r8;
        com.fasterxml.jackson.databind.deser.SettableBeanProperty $r9;
        java.lang.Exception $r10;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: com.fasterxml.jackson.core.JsonToken;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)>($r2);

     label1:
        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if $r3 == $r6 goto label6;

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r8 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties>;

        $r9 = virtualinvoke $r8.<com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String)>($r7);

        if $r9 == null goto label5;

     label2:
        virtualinvoke $r9.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r5);

     label3:
        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label1;

     label4:
        $r10 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r10, $r5, $r7, $r2);

        goto label3;

     label5:
        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void _vanillaDeserializeHandleUnknown(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r5, $r7);

        goto label3;

     label6:
        return $r5;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected final java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator $r3;
        com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer $r4;
        com.fasterxml.jackson.core.JsonToken $r5, $r7;
        com.fasterxml.jackson.databind.util.TokenBuffer $r6;
        java.lang.String $r8;
        com.fasterxml.jackson.databind.deser.SettableBeanProperty $r9;
        java.lang.Object $r10;
        int $i0;
        boolean $z0;
        java.lang.Class $r11, $r13;
        com.fasterxml.jackson.databind.JavaType $r12;
        java.lang.Exception $r14, $r20;
        com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap $r15;
        java.util.HashSet $r16;
        com.fasterxml.jackson.databind.deser.SettableAnyProperty $r17, $r18;
        com.fasterxml.jackson.core.ObjectCodec $r19;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        $r4 = virtualinvoke $r3.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r6 = null;

     label01:
        $r7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r5 != $r7 goto label13;

        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r9 = virtualinvoke $r3.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.SettableBeanProperty findCreatorProperty(java.lang.String)>($r8);

        if $r9 == null goto label08;

        $r10 = virtualinvoke $r9.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $i0 = virtualinvoke $r9.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: int getPropertyIndex()>();

        $z0 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: boolean assignParameter(int,java.lang.Object)>($i0, $r10);

        if $z0 == 0 goto label05;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

     label02:
        $r10 = virtualinvoke $r3.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)>($r2, $r4);

     label03:
        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JavaType _beanType>;

        $r13 = virtualinvoke $r12.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        if $r11 == $r13 goto label06;

        $r10 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)>($r1, $r2, $r10, $r6);

        return $r10;

     label04:
        $r14 := @caughtexception;

        $r12 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JavaType _beanType>;

        $r11 = virtualinvoke $r12.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r14, $r11, $r8, $r2);

     label05:
        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label01;

     label06:
        if $r6 == null goto label18;

        $r10 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)>($r2, $r10, $r6);

     label07:
        $r10 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r10);

        return $r10;

     label08:
        $r15 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties>;

        $r9 = virtualinvoke $r15.<com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String)>($r8);

        if $r9 == null goto label09;

        $r10 = virtualinvoke $r9.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: void bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object)>($r9, $r10);

        goto label05;

     label09:
        $r16 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r16 == null goto label10;

        $r16 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r16.<java.util.HashSet: boolean contains(java.lang.Object)>($r8);

        if $z0 == 0 goto label10;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

        goto label05;

     label10:
        $r17 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        if $r17 == null goto label11;

        $r17 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        $r18 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        $r10 = virtualinvoke $r18.<com.fasterxml.jackson.databind.deser.SettableAnyProperty: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: void bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object)>($r17, $r8, $r10);

        goto label05;

     label11:
        if $r6 != null goto label12;

        $r6 = new com.fasterxml.jackson.databind.util.TokenBuffer;

        $r19 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.ObjectCodec getCodec()>();

        specialinvoke $r6.<com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.ObjectCodec)>($r19);

     label12:
        virtualinvoke $r6.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>($r8);

        virtualinvoke $r6.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>($r1);

        goto label05;

     label13:
        $r10 = virtualinvoke $r3.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)>($r2, $r4);

     label14:
        if $r6 == null goto label17;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JavaType _beanType>;

        $r13 = virtualinvoke $r12.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        if $r11 == $r13 goto label16;

        $r10 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)>(null, $r2, $r10, $r6);

        return $r10;

     label15:
        $r20 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)>($r20, $r2);

        return null;

     label16:
        $r10 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)>($r2, $r10, $r6);

     label17:
        return $r10;

     label18:
        goto label07;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    public final java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.core.JsonToken $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fasterxml.jackson.databind.deser.impl.ObjectIdReader $r6;
        int[] $r7;
        int $i0;
        java.lang.Class $r8;
        com.fasterxml.jackson.databind.JsonMappingException $r9;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r3 != $r4 goto label03;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $z0 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: boolean _vanillaProcessing>;

        if $z0 == 0 goto label01;

        $r5 = specialinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)>($r1, $r2, $r3);

        return $r5;

     label01:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader>;

        if $r6 == null goto label02;

        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r5;

     label02:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r5;

     label03:
        $r7 = <com.fasterxml.jackson.databind.deser.BeanDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $i0 = virtualinvoke $r3.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label11;
            default: goto label04;
        };

     label04:
        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Class getBeanClass()>();

        $r9 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class)>($r8);

        throw $r9;

     label05:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r5;

     label06:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r5;

     label07:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r5;

     label08:
        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();

        return $r5;

     label09:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r5;

     label10:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r5;

     label11:
        $z0 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: boolean _vanillaProcessing>;

        if $z0 == 0 goto label12;

        $r5 = specialinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)>($r1, $r2, $r3);

        return $r5;

     label12:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader>;

        if $r6 == null goto label13;

        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r5;

     label13:
        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r5;
    }

    public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.lang.Object $r3;
        com.fasterxml.jackson.databind.deser.impl.ValueInjector[] $r4;
        com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler $r5;
        com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler $r6;
        boolean $z0;
        java.lang.Class $r7;
        com.fasterxml.jackson.core.JsonToken $r8, $r9, $r10;
        java.lang.String $r11;
        com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap $r12;
        com.fasterxml.jackson.databind.deser.SettableBeanProperty $r13;
        java.lang.Exception $r14;
        java.util.HashSet $r15;
        com.fasterxml.jackson.databind.deser.SettableAnyProperty $r16;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: java.lang.Object;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables>;

        if $r4 == null goto label01;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r3);

     label01:
        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        if $r5 == null goto label02;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r3);

        return $r3;

     label02:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler _externalTypeIdHandler>;

        if $r6 == null goto label03;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r3);

        return $r3;

     label03:
        $z0 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: boolean _needViewProcesing>;

        if $z0 == 0 goto label04;

        $r7 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class getActiveView()>();

        if $r7 == null goto label04;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class)>($r1, $r2, $r3, $r7);

        return $r3;

     label04:
        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r9 = $r8;

        $r10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r8 != $r10 goto label05;

        $r9 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

     label05:
        $r8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r9 != $r8 goto label12;

        $r11 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r12 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties>;

        $r13 = virtualinvoke $r12.<com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String)>($r11);

        if $r13 == null goto label09;

     label06:
        virtualinvoke $r13.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r3);

     label07:
        $r9 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label05;

     label08:
        $r14 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r14, $r3, $r11, $r2);

        goto label07;

     label09:
        $r15 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r15 == null goto label10;

        $r15 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r15.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        if $z0 == 0 goto label10;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

        goto label07;

     label10:
        $r16 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        if $r16 == null goto label11;

        $r16 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r16.<com.fasterxml.jackson.databind.deser.SettableAnyProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r3, $r11);

        goto label07;

     label11:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r3, $r11);

        goto label07;

     label12:
        return $r3;

        catch java.lang.Exception from label06 to label07 with label08;
    }

    public java.lang.Object deserializeFromArray(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.JsonDeserializer $r3;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r4;
        java.lang.Object $r5;
        com.fasterxml.jackson.databind.deser.impl.ValueInjector[] $r6;
        java.lang.Exception $r7;
        java.lang.Class $r8;
        com.fasterxml.jackson.databind.JsonMappingException $r9;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        if $r3 == null goto label6;

     label1:
        $r4 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        $r5 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r5);

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables>;

     label2:
        if $r6 == null goto label7;

     label3:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r5);

     label4:
        return $r5;

     label5:
        $r7 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)>($r7, $r2);

     label6:
        $r8 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Class getBeanClass()>();

        $r9 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class)>($r8);

        throw $r9;

     label7:
        return $r5;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.lang.Object deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.JsonDeserializer $r3;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fasterxml.jackson.databind.deser.impl.ValueInjector[] $r6;
        com.fasterxml.jackson.core.JsonToken $r7, $r8;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        if $r3 == null goto label1;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $z0 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromBoolean()>();

        if $z0 != 0 goto label1;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        $r5 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r5);

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables>;

        if $r6 == null goto label4;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r5);

        return $r5;

     label1:
        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        if $r7 != $r8 goto label3;

        $z0 = 1;

     label2:
        $r4 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean)>($r2, $z0);

        return $r5;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return $r5;
    }

    public java.lang.Object deserializeFromDouble(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        int[] $r3;
        com.fasterxml.jackson.core.JsonParser$NumberType $r4;
        int $i0;
        com.fasterxml.jackson.databind.JsonDeserializer $r5;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r6;
        java.lang.Object $r7;
        boolean $z0;
        com.fasterxml.jackson.databind.deser.impl.ValueInjector[] $r8;
        double $d0;
        java.lang.Class $r9;
        com.fasterxml.jackson.databind.JsonMappingException $r10;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = <com.fasterxml.jackson.databind.deser.BeanDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType>;

        $r4 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser$NumberType getNumberType()>();

        $i0 = virtualinvoke $r4.<com.fasterxml.jackson.core.JsonParser$NumberType: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 3: goto label2;
            case 4: goto label2;
            default: goto label1;
        };

     label1:
        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        if $r5 == null goto label4;

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        $r7 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r7 = virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r7);

        return $r7;

     label2:
        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        if $r5 == null goto label3;

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $z0 = virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromDouble()>();

        if $z0 != 0 goto label3;

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        $r7 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r7 = virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r7);

        $r8 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables>;

        if $r8 == null goto label5;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r7);

        return $r7;

     label3:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $d0 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: double getDoubleValue()>();

        $r7 = virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double)>($r2, $d0);

        return $r7;

     label4:
        $r9 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Class getBeanClass()>();

        $r10 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.String)>($r9, "no suitable creator method found to deserialize from JSON floating-point number");

        throw $r10;

     label5:
        return $r7;
    }

    public java.lang.Object deserializeFromNumber(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.deser.impl.ObjectIdReader $r3;
        java.lang.Object $r4;
        int[] $r5;
        com.fasterxml.jackson.core.JsonParser$NumberType $r6;
        int $i0;
        com.fasterxml.jackson.databind.JsonDeserializer $r7;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r8;
        com.fasterxml.jackson.databind.deser.impl.ValueInjector[] $r9;
        boolean $z0;
        long $l1;
        java.lang.Class $r10;
        com.fasterxml.jackson.databind.JsonMappingException $r11;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader>;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r4;

     label1:
        $r5 = <com.fasterxml.jackson.databind.deser.BeanDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType>;

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser$NumberType getNumberType()>();

        $i0 = virtualinvoke $r6.<com.fasterxml.jackson.core.JsonParser$NumberType: int ordinal()>();

        $i0 = $r5[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label5;
            default: goto label2;
        };

     label2:
        $r7 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        if $r7 == null goto label7;

        $r8 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r7 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        $r4 = virtualinvoke $r7.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r4 = virtualinvoke $r8.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r4);

        $r9 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables>;

        if $r9 == null goto label8;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r4);

        return $r4;

     label3:
        $r7 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        if $r7 == null goto label4;

        $r8 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $z0 = virtualinvoke $r8.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromInt()>();

        if $z0 != 0 goto label4;

        $r8 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r7 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        $r4 = virtualinvoke $r7.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r4 = virtualinvoke $r8.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r4);

        $r9 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables>;

        if $r9 == null goto label8;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r4);

        return $r4;

     label4:
        $r8 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $i0 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();

        $r4 = virtualinvoke $r8.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int)>($r2, $i0);

        return $r4;

     label5:
        $r7 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        if $r7 == null goto label6;

        $r8 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $z0 = virtualinvoke $r8.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromInt()>();

        if $z0 != 0 goto label6;

        $r8 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r7 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        $r4 = virtualinvoke $r7.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r4 = virtualinvoke $r8.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r4);

        $r9 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables>;

        if $r9 == null goto label8;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r4);

        return $r4;

     label6:
        $r8 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $l1 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: long getLongValue()>();

        $r4 = virtualinvoke $r8.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long)>($r2, $l1);

        return $r4;

     label7:
        $r10 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Class getBeanClass()>();

        $r11 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.String)>($r10, "no suitable creator method found to deserialize from JSON integer number");

        throw $r11;

     label8:
        return $r4;
    }

    public java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        boolean $z0;
        com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler $r3;
        java.lang.Object $r4;
        com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler $r5;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r6;
        com.fasterxml.jackson.databind.deser.impl.ValueInjector[] $r7;
        java.lang.Class $r8;
        com.fasterxml.jackson.core.JsonToken $r9, $r10;
        java.lang.String $r11;
        com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap $r12;
        com.fasterxml.jackson.databind.deser.SettableBeanProperty $r13;
        java.lang.Exception $r14, $r17;
        java.util.HashSet $r15;
        com.fasterxml.jackson.databind.deser.SettableAnyProperty $r16;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $z0 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: boolean _nonStandardCreation>;

        if $z0 == 0 goto label03;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        if $r3 == null goto label01;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r4;

     label01:
        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler _externalTypeIdHandler>;

        if $r5 == null goto label02;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r4;

     label02:
        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r4;

     label03:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r4 = virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)>($r2);

        $r7 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables>;

        if $r7 == null goto label04;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r4);

     label04:
        $z0 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: boolean _needViewProcesing>;

        if $z0 == 0 goto label05;

        $r8 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class getActiveView()>();

        if $r8 == null goto label05;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class)>($r1, $r2, $r4, $r8);

        return $r4;

     label05:
        $r9 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if $r9 == $r10 goto label15;

        $r11 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r12 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties>;

        $r13 = virtualinvoke $r12.<com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String)>($r11);

        if $r13 == null goto label09;

     label06:
        virtualinvoke $r13.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r4);

     label07:
        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label05;

     label08:
        $r14 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r14, $r4, $r11, $r2);

        goto label07;

     label09:
        $r15 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r15 == null goto label10;

        $r15 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r15.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        if $z0 == 0 goto label10;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

        goto label07;

     label10:
        $r16 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        if $r16 == null goto label14;

     label11:
        $r16 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r16.<com.fasterxml.jackson.databind.deser.SettableAnyProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r4, $r11);

     label12:
        goto label07;

     label13:
        $r17 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r17, $r4, $r11, $r2);

        goto label07;

     label14:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r4, $r11);

        goto label07;

     label15:
        return $r4;

        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    protected java.lang.Object deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.JsonDeserializer $r3;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r4;
        java.lang.Object $r5;
        com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator $r6;
        com.fasterxml.jackson.databind.JavaType $r7;
        boolean $z0;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        com.fasterxml.jackson.databind.JsonMappingException $r10;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        if $r3 == null goto label1;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        $r5 = virtualinvoke $r3.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r5);

        return $r5;

     label1:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        if $r6 == null goto label2;

        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r5;

     label2:
        $r7 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JavaType _beanType>;

        $z0 = virtualinvoke $r7.<com.fasterxml.jackson.databind.JavaType: boolean isAbstract()>();

        if $z0 == 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can not instantiate abstract type ");

        $r7 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JavaType _beanType>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (need to add/enable type information?)");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String)>($r1, $r9);

        throw $r10;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("No suitable constructor found for type ");

        $r7 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JavaType _beanType>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": can not instantiate from JSON object (need to add/enable type information?)");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String)>($r1, $r9);

        throw $r10;
    }

    public java.lang.Object deserializeFromString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.deser.impl.ObjectIdReader $r3;
        java.lang.Object $r4;
        com.fasterxml.jackson.databind.JsonDeserializer $r5;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r6;
        boolean $z0;
        com.fasterxml.jackson.databind.deser.impl.ValueInjector[] $r7;
        java.lang.String $r8;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader>;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r4;

     label1:
        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        if $r5 == null goto label2;

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $z0 = virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromString()>();

        if $z0 != 0 goto label2;

        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        $r4 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r4 = virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r4);

        $r7 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables>;

        if $r7 == null goto label3;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r4);

        return $r4;

     label2:
        $r6 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        $r4 = virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>($r2, $r8);

     label3:
        return $r4;
    }

    protected java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.util.TokenBuffer $r3;
        com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler $r4;
        com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator $r5;
        com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer $r6;
        com.fasterxml.jackson.core.ObjectCodec $r7;
        com.fasterxml.jackson.core.JsonToken $r8, $r9;
        java.lang.String $r10;
        com.fasterxml.jackson.databind.deser.SettableBeanProperty $r11;
        boolean $z0;
        java.lang.Object $r12;
        int $i0;
        java.lang.Exception $r13, $r22;
        com.fasterxml.jackson.databind.JavaType $r14;
        java.lang.Class $r15, $r16;
        com.fasterxml.jackson.databind.JsonMappingException $r17;
        com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap $r18;
        java.util.HashSet $r19;
        com.fasterxml.jackson.databind.deser.SettableAnyProperty $r20, $r21;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler _externalTypeIdHandler>;

        $r4 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler start()>();

        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r3 = new com.fasterxml.jackson.databind.util.TokenBuffer;

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.ObjectCodec getCodec()>();

        specialinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.ObjectCodec)>($r7);

        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();

        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

     label01:
        $r9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r8 != $r9 goto label11;

        $r10 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r11 = virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.SettableBeanProperty findCreatorProperty(java.lang.String)>($r10);

        if $r11 == null goto label08;

        $z0 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler: boolean handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)>($r1, $r2, $r10, $r6);

        if $z0 != 0 goto label05;

        $r12 = virtualinvoke $r11.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $i0 = virtualinvoke $r11.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: int getPropertyIndex()>();

        $z0 = virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: boolean assignParameter(int,java.lang.Object)>($i0, $r12);

        if $z0 == 0 goto label05;

        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

     label02:
        $r12 = virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)>($r2, $r6);

     label03:
        $r9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r8 != $r9 goto label06;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>($r1);

        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label03;

     label04:
        $r13 := @caughtexception;

        $r14 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JavaType _beanType>;

        $r15 = virtualinvoke $r14.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r13, $r15, $r10, $r2);

     label05:
        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label01;

     label06:
        $r15 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JavaType _beanType>;

        $r16 = virtualinvoke $r14.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        if $r15 == $r16 goto label07;

        $r17 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String)>("Can not create polymorphic instances with unwrapped values");

        throw $r17;

     label07:
        $r12 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler: java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r12);

        return $r12;

     label08:
        $r18 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties>;

        $r11 = virtualinvoke $r18.<com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String)>($r10);

        if $r11 == null goto label09;

        $r12 = virtualinvoke $r11.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: void bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object)>($r11, $r12);

        goto label05;

     label09:
        $z0 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler: boolean handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)>($r1, $r2, $r10, null);

        if $z0 != 0 goto label05;

        $r19 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r19 == null goto label10;

        $r19 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r19.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        if $z0 == 0 goto label10;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

        goto label05;

     label10:
        $r20 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        if $r20 == null goto label05;

        $r20 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        $r21 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        $r12 = virtualinvoke $r21.<com.fasterxml.jackson.databind.deser.SettableAnyProperty: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        virtualinvoke $r6.<com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: void bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object)>($r20, $r10, $r12);

        goto label05;

     label11:
        $r12 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler: java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator)>($r1, $r2, $r6, $r5);

     label12:
        return $r12;

     label13:
        $r22 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)>($r22, $r2);

        return null;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    protected java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.util.TokenBuffer $r3;
        com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator $r4;
        com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer $r5;
        com.fasterxml.jackson.core.ObjectCodec $r6;
        com.fasterxml.jackson.core.JsonToken $r7, $r8;
        java.lang.String $r9;
        com.fasterxml.jackson.databind.deser.SettableBeanProperty $r10;
        java.lang.Object $r11;
        int $i0;
        boolean $z0;
        java.lang.Exception $r12, $r22;
        com.fasterxml.jackson.databind.JavaType $r13;
        java.lang.Class $r14, $r15;
        com.fasterxml.jackson.databind.JsonMappingException $r16;
        com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler $r17;
        com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap $r18;
        java.util.HashSet $r19;
        com.fasterxml.jackson.databind.deser.SettableAnyProperty $r20, $r21;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        $r5 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r3 = new com.fasterxml.jackson.databind.util.TokenBuffer;

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.ObjectCodec getCodec()>();

        specialinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.ObjectCodec)>($r6);

        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

     label01:
        $r8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r7 != $r8 goto label11;

        $r9 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r10 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.SettableBeanProperty findCreatorProperty(java.lang.String)>($r9);

        if $r10 == null goto label08;

        $r11 = virtualinvoke $r10.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $i0 = virtualinvoke $r10.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: int getPropertyIndex()>();

        $z0 = virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: boolean assignParameter(int,java.lang.Object)>($i0, $r11);

        if $z0 == 0 goto label05;

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

     label02:
        $r11 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)>($r2, $r5);

     label03:
        $r8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r7 != $r8 goto label06;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>($r1);

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label03;

     label04:
        $r12 := @caughtexception;

        $r13 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JavaType _beanType>;

        $r14 = virtualinvoke $r13.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r12, $r14, $r9, $r2);

     label05:
        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label01;

     label06:
        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();

        $r14 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JavaType _beanType>;

        $r15 = virtualinvoke $r13.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        if $r14 == $r15 goto label07;

        $r16 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String)>("Can not create polymorphic instances with unwrapped values");

        throw $r16;

     label07:
        $r17 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        $r11 = virtualinvoke $r17.<com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler: java.lang.Object processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)>($r1, $r2, $r11, $r3);

        return $r11;

     label08:
        $r18 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties>;

        $r10 = virtualinvoke $r18.<com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String)>($r9);

        if $r10 == null goto label09;

        $r11 = virtualinvoke $r10.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: void bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object)>($r10, $r11);

        goto label05;

     label09:
        $r19 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r19 == null goto label10;

        $r19 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r19.<java.util.HashSet: boolean contains(java.lang.Object)>($r9);

        if $z0 == 0 goto label10;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

        goto label05;

     label10:
        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>($r9);

        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>($r1);

        $r20 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        if $r20 == null goto label05;

        $r20 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        $r21 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        $r11 = virtualinvoke $r21.<com.fasterxml.jackson.databind.deser.SettableAnyProperty: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: void bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object)>($r20, $r9, $r11);

        goto label05;

     label11:
        $r11 = virtualinvoke $r4.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)>($r2, $r5);

     label12:
        $r17 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        $r11 = virtualinvoke $r17.<com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler: java.lang.Object processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)>($r1, $r2, $r11, $r3);

        return $r11;

     label13:
        $r22 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)>($r22, $r2);

        return null;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    protected java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator $r3;
        java.lang.Object $r4;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r5;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r4;

     label1:
        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r4 = virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)>($r2);

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r4);

        return $r4;
    }

    protected java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.Class $r4;
        com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler $r5;
        com.fasterxml.jackson.core.JsonToken $r6, $r7;
        java.lang.String $r8;
        com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap $r9;
        com.fasterxml.jackson.databind.deser.SettableBeanProperty $r10;
        java.lang.Exception $r11, $r14;
        java.util.HashSet $r12;
        com.fasterxml.jackson.databind.deser.SettableAnyProperty $r13;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: java.lang.Object;

        $z0 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: boolean _needViewProcesing>;

        if $z0 == 0 goto label04;

        $r4 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class getActiveView()>();

     label01:
        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler _externalTypeIdHandler>;

        $r5 = virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler start()>();

     label02:
        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if $r6 == $r7 goto label14;

        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r9 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties>;

        $r10 = virtualinvoke $r9.<com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String)>($r8);

        if $r10 == null goto label08;

        if $r4 == null goto label05;

        $z0 = virtualinvoke $r10.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: boolean visibleInView(java.lang.Class)>($r4);

        if $z0 != 0 goto label05;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

     label03:
        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label02;

     label04:
        $r4 = null;

        goto label01;

     label05:
        virtualinvoke $r10.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r3);

     label06:
        goto label03;

     label07:
        $r11 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r11, $r3, $r8, $r2);

        goto label03;

     label08:
        $r12 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r12 == null goto label09;

        $r12 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r12.<java.util.HashSet: boolean contains(java.lang.Object)>($r8);

        if $z0 == 0 goto label09;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

        goto label03;

     label09:
        $z0 = virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler: boolean handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)>($r1, $r2, $r8, $r3);

        if $z0 != 0 goto label03;

        $r13 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        if $r13 == null goto label13;

     label10:
        $r13 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r13.<com.fasterxml.jackson.databind.deser.SettableAnyProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r3, $r8);

     label11:
        goto label03;

     label12:
        $r14 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r14, $r3, $r8, $r2);

        goto label03;

     label13:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r3, $r8);

        goto label03;

     label14:
        $r3 = virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler: java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r3);

        return $r3;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    protected java.lang.Object deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.lang.String $r3, $r5;
        com.fasterxml.jackson.databind.deser.impl.ObjectIdReader $r4;
        boolean $z0;
        java.lang.Object $r6;
        com.fasterxml.jackson.databind.util.TokenBuffer $r7, $r9;
        com.fasterxml.jackson.core.ObjectCodec $r8;
        com.fasterxml.jackson.core.JsonToken $r10, $r11;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader>;

        $r3 = $r4.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReader: java.lang.String propertyName>;

        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r6;

     label1:
        $r7 = new com.fasterxml.jackson.databind.util.TokenBuffer;

        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.ObjectCodec getCodec()>();

        specialinvoke $r7.<com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.ObjectCodec)>($r8);

        $r9 = null;

     label2:
        $r10 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if $r10 == $r11 goto label6;

        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        if $r9 != null goto label5;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

        $r9 = new com.fasterxml.jackson.databind.util.TokenBuffer;

        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.ObjectCodec getCodec()>();

        specialinvoke $r9.<com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.ObjectCodec)>($r8);

        virtualinvoke $r9.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>($r5);

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        virtualinvoke $r9.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>($r1);

        virtualinvoke $r9.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer append(com.fasterxml.jackson.databind.util.TokenBuffer)>($r7);

        $r7 = null;

     label3:
        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label2;

     label4:
        virtualinvoke $r7.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>($r5);

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        virtualinvoke $r7.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>($r1);

        goto label3;

     label5:
        virtualinvoke $r9.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>($r5);

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        virtualinvoke $r9.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>($r1);

        goto label3;

     label6:
        if $r9 != null goto label8;

     label7:
        virtualinvoke $r7.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();

        $r1 = virtualinvoke $r7.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser asParser()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r6 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r6;

     label8:
        $r7 = $r9;

        goto label7;
    }

    protected java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.databind.util.TokenBuffer $r3;
        com.fasterxml.jackson.databind.JsonDeserializer $r4;
        com.fasterxml.jackson.databind.deser.ValueInstantiator $r5;
        java.lang.Object $r6;
        com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator $r7;
        com.fasterxml.jackson.core.ObjectCodec $r8;
        com.fasterxml.jackson.databind.deser.impl.ValueInjector[] $r9;
        boolean $z0;
        java.lang.Class $r10;
        com.fasterxml.jackson.core.JsonToken $r11, $r12;
        java.lang.String $r13;
        com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap $r14;
        com.fasterxml.jackson.databind.deser.SettableBeanProperty $r15;
        java.lang.Exception $r16, $r19;
        java.util.HashSet $r17;
        com.fasterxml.jackson.databind.deser.SettableAnyProperty $r18;
        com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler $r20;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        if $r4 == null goto label01;

        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r4 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;

        $r6 = virtualinvoke $r4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r6);

        return $r6;

     label01:
        $r7 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        if $r7 == null goto label02;

        $r6 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r6;

     label02:
        $r3 = new com.fasterxml.jackson.databind.util.TokenBuffer;

        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.ObjectCodec getCodec()>();

        specialinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.ObjectCodec)>($r8);

        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();

        $r5 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)>($r2);

        $r9 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables>;

        if $r9 == null goto label03;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r2, $r6);

     label03:
        $z0 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: boolean _needViewProcesing>;

        if $z0 == 0 goto label06;

        $r10 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class getActiveView()>();

     label04:
        $r11 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r12 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if $r11 == $r12 goto label15;

        $r13 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r14 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties>;

        $r15 = virtualinvoke $r14.<com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String)>($r13);

        if $r15 == null goto label10;

        if $r10 == null goto label07;

        $z0 = virtualinvoke $r15.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: boolean visibleInView(java.lang.Class)>($r10);

        if $z0 != 0 goto label07;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

     label05:
        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label04;

     label06:
        $r10 = null;

        goto label04;

     label07:
        virtualinvoke $r15.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r6);

     label08:
        goto label05;

     label09:
        $r16 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r16, $r6, $r13, $r2);

        goto label05;

     label10:
        $r17 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r17 == null goto label11;

        $r17 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r17.<java.util.HashSet: boolean contains(java.lang.Object)>($r13);

        if $z0 == 0 goto label11;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

        goto label05;

     label11:
        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>($r13);

        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>($r1);

        $r18 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        if $r18 == null goto label05;

     label12:
        $r18 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r18.<com.fasterxml.jackson.databind.deser.SettableAnyProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r6, $r13);

     label13:
        goto label05;

     label14:
        $r19 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r19, $r6, $r13, $r2);

        goto label05;

     label15:
        virtualinvoke $r3.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();

        $r20 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        virtualinvoke $r20.<com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler: java.lang.Object processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)>($r1, $r2, $r6, $r3);

        return $r6;

        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    protected java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.lang.Object $r3;
        com.fasterxml.jackson.databind.util.TokenBuffer $r4;
        com.fasterxml.jackson.core.JsonToken $r5, $r6, $r7;
        com.fasterxml.jackson.core.ObjectCodec $r8;
        boolean $z0;
        java.lang.Class $r9;
        java.lang.String $r10;
        com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap $r11;
        com.fasterxml.jackson.databind.deser.SettableBeanProperty $r12;
        java.lang.Exception $r13;
        java.util.HashSet $r14;
        com.fasterxml.jackson.databind.deser.SettableAnyProperty $r15;
        com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler $r16;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: java.lang.Object;

        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r6 = $r5;

        $r7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r5 != $r7 goto label01;

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

     label01:
        $r4 = new com.fasterxml.jackson.databind.util.TokenBuffer;

        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.ObjectCodec getCodec()>();

        specialinvoke $r4.<com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.ObjectCodec)>($r8);

        virtualinvoke $r4.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();

        $z0 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: boolean _needViewProcesing>;

        if $z0 == 0 goto label04;

        $r9 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class getActiveView()>();

     label02:
        $r5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r6 != $r5 goto label10;

        $r10 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        $r11 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties>;

        $r12 = virtualinvoke $r11.<com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String)>($r10);

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        if $r12 == null goto label08;

        if $r9 == null goto label05;

        $z0 = virtualinvoke $r12.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: boolean visibleInView(java.lang.Class)>($r9);

        if $z0 != 0 goto label05;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

     label03:
        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label02;

     label04:
        $r9 = null;

        goto label02;

     label05:
        virtualinvoke $r12.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r3);

     label06:
        goto label03;

     label07:
        $r13 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r13, $r3, $r10, $r2);

        goto label03;

     label08:
        $r14 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r14 == null goto label09;

        $r14 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r14.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        if $z0 == 0 goto label09;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

        goto label03;

     label09:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>($r10);

        virtualinvoke $r4.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>($r1);

        $r15 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        if $r15 == null goto label03;

        $r15 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r15.<com.fasterxml.jackson.databind.deser.SettableAnyProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r3, $r10);

        goto label03;

     label10:
        virtualinvoke $r4.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();

        $r16 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        virtualinvoke $r16.<com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler: java.lang.Object processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)>($r1, $r2, $r3, $r4);

        return $r3;

        catch java.lang.Exception from label05 to label06 with label07;
    }

    protected final java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object, java.lang.Class)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.lang.Object $r3;
        java.lang.Class $r4;
        com.fasterxml.jackson.core.JsonToken $r5, $r6;
        java.lang.String $r7;
        com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap $r8;
        com.fasterxml.jackson.databind.deser.SettableBeanProperty $r9;
        boolean $z0;
        java.lang.Exception $r10;
        java.util.HashSet $r11;
        com.fasterxml.jackson.databind.deser.SettableAnyProperty $r12;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: java.lang.Object;

        $r4 := @parameter3: java.lang.Class;

        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

     label1:
        $r6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r5 != $r6 goto label9;

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r8 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties>;

        $r9 = virtualinvoke $r8.<com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String)>($r7);

        if $r9 == null goto label6;

        $z0 = virtualinvoke $r9.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: boolean visibleInView(java.lang.Class)>($r4);

        if $z0 != 0 goto label3;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

     label2:
        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label1;

     label3:
        virtualinvoke $r9.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r3);

     label4:
        goto label2;

     label5:
        $r10 := @caughtexception;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>($r10, $r3, $r7, $r2);

        goto label2;

     label6:
        $r11 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r11 == null goto label7;

        $r11 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r11.<java.util.HashSet: boolean contains(java.lang.Object)>($r7);

        if $z0 == 0 goto label7;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();

        goto label2;

     label7:
        $r12 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        if $r12 == null goto label8;

        $r12 = $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r12.<com.fasterxml.jackson.databind.deser.SettableAnyProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r3, $r7);

        goto label2;

     label8:
        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r3, $r7);

        goto label2;

     label9:
        return $r3;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    protected java.lang.Object handlePolymorphic(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object, com.fasterxml.jackson.databind.util.TokenBuffer)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1, $r6;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.lang.Object $r3;
        com.fasterxml.jackson.databind.util.TokenBuffer $r4;
        com.fasterxml.jackson.databind.JsonDeserializer $r5;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 := @parameter2: java.lang.Object;

        $r4 := @parameter3: com.fasterxml.jackson.databind.util.TokenBuffer;

        $r5 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _findSubclassDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)>($r2, $r3, $r4);

        if $r5 == null goto label2;

        if $r4 == null goto label5;

        virtualinvoke $r4.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();

        $r6 = virtualinvoke $r4.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser asParser()>();

        virtualinvoke $r6.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r3 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r6, $r2, $r3);

     label1:
        if $r1 == null goto label6;

        $r3 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r3);

        return $r3;

     label2:
        if $r4 == null goto label4;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)>($r2, $r3, $r4);

     label3:
        if $r1 == null goto label6;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r1, $r2, $r3);

        return $r3;

     label4:
        goto label3;

     label5:
        goto label1;

     label6:
        return $r3;
    }

    public com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
    {
        com.fasterxml.jackson.databind.util.NameTransformer $r0;
        java.lang.Class $r1;
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r2, $r3;

        $r2 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r0 := @parameter0: com.fasterxml.jackson.databind.util.NameTransformer;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == class "com/fasterxml/jackson/databind/deser/BeanDeserializer" goto label1;

        return $r2;

     label1:
        $r3 = new com.fasterxml.jackson.databind.deser.BeanDeserializer;

        specialinvoke $r3.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer)>($r2, $r0);

        return $r3;
    }

    public com.fasterxml.jackson.databind.deser.BeanDeserializer withIgnorableProperties(java.util.HashSet)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0, $r2;
        java.util.HashSet $r1;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: java.util.HashSet;

        $r2 = new com.fasterxml.jackson.databind.deser.BeanDeserializer;

        specialinvoke $r2.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.HashSet)>($r0, $r1);

        return $r2;
    }

    public volatile com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.HashSet)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        java.util.HashSet $r1;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: java.util.HashSet;

        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializer withIgnorableProperties(java.util.HashSet)>($r1);

        return $r0;
    }

    public com.fasterxml.jackson.databind.deser.BeanDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0, $r2;
        com.fasterxml.jackson.databind.deser.impl.ObjectIdReader $r1;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader;

        $r2 = new com.fasterxml.jackson.databind.deser.BeanDeserializer;

        specialinvoke $r2.<com.fasterxml.jackson.databind.deser.BeanDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)>($r0, $r1);

        return $r2;
    }

    public volatile com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
    {
        com.fasterxml.jackson.databind.deser.BeanDeserializer $r0;
        com.fasterxml.jackson.databind.deser.impl.ObjectIdReader $r1;

        $r0 := @this: com.fasterxml.jackson.databind.deser.BeanDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader;

        $r0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)>($r1);

        return $r0;
    }
}
