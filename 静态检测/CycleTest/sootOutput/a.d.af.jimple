final class a.d.af extends a.d.b
{
    int D;
    int E;
    int F;
    long G;
    long H;
    long I;
    long J;
    long K;
    long L;
    boolean M;
    boolean N;
    byte b;
    int c;
    int d;

    void <init>()
    {
        a.d.af $r0;

        $r0 := @this: a.d.af;

        specialinvoke $r0.<a.d.b: void <init>()>();

        return;
    }

    final int i(byte[], int)
    {
        a.d.af $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.af;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    final int j(byte[], int)
    {
        a.d.af $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.af;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    final int k(byte[], int)
    {
        a.d.af $r0;
        byte[] $r1;
        int $i0, $i1, $i3;
        byte $b2;
        long $l4;
        short $s5;
        boolean $z0;

        $r0 := @this: a.d.af;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = $i0 + 1;

        $b2 = $r1[$i0];

        $r0.<a.d.af: byte b> = $b2;

        $i3 = staticinvoke <a.d.af: int d(byte[],int)>($r1, $i1);

        $r0.<a.d.af: int c> = $i3;

        $i1 = $i1 + 2;

        $i3 = staticinvoke <a.d.af: int e(byte[],int)>($r1, $i1);

        $r0.<a.d.af: int d> = $i3;

        $i1 = $i1 + 4;

        $l4 = staticinvoke <a.d.af: long g(byte[],int)>($r1, $i1);

        $r0.<a.d.af: long G> = $l4;

        $i1 = $i1 + 8;

        $l4 = staticinvoke <a.d.af: long g(byte[],int)>($r1, $i1);

        $r0.<a.d.af: long H> = $l4;

        $i1 = $i1 + 8;

        $l4 = staticinvoke <a.d.af: long g(byte[],int)>($r1, $i1);

        $r0.<a.d.af: long I> = $l4;

        $i1 = $i1 + 8;

        $l4 = staticinvoke <a.d.af: long g(byte[],int)>($r1, $i1);

        $r0.<a.d.af: long J> = $l4;

        $i1 = $i1 + 8;

        $i3 = staticinvoke <a.d.af: int e(byte[],int)>($r1, $i1);

        $r0.<a.d.af: int D> = $i3;

        $i1 = $i1 + 4;

        $l4 = staticinvoke <a.d.af: long f(byte[],int)>($r1, $i1);

        $r0.<a.d.af: long K> = $l4;

        $i1 = $i1 + 8;

        $l4 = staticinvoke <a.d.af: long f(byte[],int)>($r1, $i1);

        $r0.<a.d.af: long L> = $l4;

        $i1 = $i1 + 8;

        $i3 = staticinvoke <a.d.af: int d(byte[],int)>($r1, $i1);

        $r0.<a.d.af: int E> = $i3;

        $i1 = $i1 + 2;

        $i3 = staticinvoke <a.d.af: int d(byte[],int)>($r1, $i1);

        $r0.<a.d.af: int F> = $i3;

        $i1 = $i1 + 2;

        $i3 = $i1 + 1;

        $b2 = $r1[$i1];

        $s5 = $b2 & 255;

        if $s5 <= 0 goto label2;

        $z0 = 1;

     label1:
        $r0.<a.d.af: boolean M> = $z0;

        $i0 = $i3 - $i0;

        return $i0;

     label2:
        $z0 = 0;

        goto label1;
    }

    final int l(byte[], int)
    {
        a.d.af $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: a.d.af;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return 0;
    }

    public final java.lang.String toString()
    {
        a.d.af $r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder $r2;
        byte $b0;
        int $i1;
        java.util.Date $r4;
        long $l2;
        boolean $z0;

        $r0 := @this: a.d.af;

        $r1 = new java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("SmbComNTCreateAndXResponse[");

        $r3 = specialinvoke $r0.<a.d.b: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",oplockLevel=");

        $b0 = $r0.<a.d.af: byte b>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",fid=");

        $i1 = $r0.<a.d.af: int c>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",createAction=0x");

        $i1 = $r0.<a.d.af: int d>;

        $r3 = staticinvoke <a.e.d: java.lang.String a(int,int)>($i1, 4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",creationTime=");

        $r4 = new java.util.Date;

        $l2 = $r0.<a.d.af: long G>;

        specialinvoke $r4.<java.util.Date: void <init>(long)>($l2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",lastAccessTime=");

        $r4 = new java.util.Date;

        $l2 = $r0.<a.d.af: long H>;

        specialinvoke $r4.<java.util.Date: void <init>(long)>($l2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",lastWriteTime=");

        $r4 = new java.util.Date;

        $l2 = $r0.<a.d.af: long I>;

        specialinvoke $r4.<java.util.Date: void <init>(long)>($l2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",changeTime=");

        $r4 = new java.util.Date;

        $l2 = $r0.<a.d.af: long J>;

        specialinvoke $r4.<java.util.Date: void <init>(long)>($l2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",extFileAttributes=0x");

        $i1 = $r0.<a.d.af: int D>;

        $r3 = staticinvoke <a.e.d: java.lang.String a(int,int)>($i1, 4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allocationSize=");

        $l2 = $r0.<a.d.af: long K>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",endOfFile=");

        $l2 = $r0.<a.d.af: long L>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",fileType=");

        $i1 = $r0.<a.d.af: int E>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",deviceState=");

        $i1 = $r0.<a.d.af: int F>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",directory=");

        $z0 = $r0.<a.d.af: boolean M>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>($r3);

        return $r1;
    }
}
