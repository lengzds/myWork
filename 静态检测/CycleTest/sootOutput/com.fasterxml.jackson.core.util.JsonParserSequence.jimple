public class com.fasterxml.jackson.core.util.JsonParserSequence extends com.fasterxml.jackson.core.util.JsonParserDelegate
{
    protected int _nextParser;
    protected final com.fasterxml.jackson.core.JsonParser[] _parsers;

    protected void <init>(com.fasterxml.jackson.core.JsonParser[])
    {
        com.fasterxml.jackson.core.util.JsonParserSequence $r0;
        com.fasterxml.jackson.core.JsonParser[] $r1;
        com.fasterxml.jackson.core.JsonParser $r2;

        $r0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser[];

        $r2 = $r1[0];

        specialinvoke $r0.<com.fasterxml.jackson.core.util.JsonParserDelegate: void <init>(com.fasterxml.jackson.core.JsonParser)>($r2);

        $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser[] _parsers> = $r1;

        $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParser> = 1;

        return;
    }

    public static com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)
    {
        com.fasterxml.jackson.core.JsonParser $r0, $r1;
        boolean $z0;
        com.fasterxml.jackson.core.util.JsonParserSequence $r2;
        com.fasterxml.jackson.core.JsonParser[] $r3;
        java.util.ArrayList $r4;
        int $i0;
        java.lang.Object[] $r5;

        $r0 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonParser;

        $z0 = $r0 instanceof com.fasterxml.jackson.core.util.JsonParserSequence;

        if $z0 != 0 goto label1;

        $z0 = $r1 instanceof com.fasterxml.jackson.core.util.JsonParserSequence;

        if $z0 != 0 goto label1;

        $r2 = new com.fasterxml.jackson.core.util.JsonParserSequence;

        $r3 = newarray (com.fasterxml.jackson.core.JsonParser)[2];

        $r3[0] = $r0;

        $r3[1] = $r1;

        specialinvoke $r2.<com.fasterxml.jackson.core.util.JsonParserSequence: void <init>(com.fasterxml.jackson.core.JsonParser[])>($r3);

        return $r2;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $z0 = $r0 instanceof com.fasterxml.jackson.core.util.JsonParserSequence;

        if $z0 == 0 goto label4;

        $r2 = (com.fasterxml.jackson.core.util.JsonParserSequence) $r0;

        virtualinvoke $r2.<com.fasterxml.jackson.core.util.JsonParserSequence: void addFlattenedActiveParsers(java.util.List)>($r4);

     label2:
        $z0 = $r1 instanceof com.fasterxml.jackson.core.util.JsonParserSequence;

        if $z0 == 0 goto label5;

        $r2 = (com.fasterxml.jackson.core.util.JsonParserSequence) $r1;

        virtualinvoke $r2.<com.fasterxml.jackson.core.util.JsonParserSequence: void addFlattenedActiveParsers(java.util.List)>($r4);

     label3:
        $r2 = new com.fasterxml.jackson.core.util.JsonParserSequence;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r3 = newarray (com.fasterxml.jackson.core.JsonParser)[$i0];

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (com.fasterxml.jackson.core.JsonParser[]) $r5;

        specialinvoke $r2.<com.fasterxml.jackson.core.util.JsonParserSequence: void <init>(com.fasterxml.jackson.core.JsonParser[])>($r3);

        return $r2;

     label4:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        goto label2;

     label5:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label3;
    }

    protected void addFlattenedActiveParsers(java.util.List)
    {
        com.fasterxml.jackson.core.util.JsonParserSequence $r0, $r4;
        java.util.List $r1;
        int $i0, $i1;
        boolean $z0;
        com.fasterxml.jackson.core.JsonParser[] $r2;
        com.fasterxml.jackson.core.JsonParser $r3;

        $r0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;

        $r1 := @parameter0: java.util.List;

        $i0 = $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParser>;

        $i1 = $i0 + -1;

        $r2 = $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser[] _parsers>;

        $i0 = lengthof $r2;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser[] _parsers>;

        $r3 = $r2[$i1];

        $z0 = $r3 instanceof com.fasterxml.jackson.core.util.JsonParserSequence;

        if $z0 == 0 goto label3;

        $r4 = (com.fasterxml.jackson.core.util.JsonParserSequence) $r3;

        virtualinvoke $r4.<com.fasterxml.jackson.core.util.JsonParserSequence: void addFlattenedActiveParsers(java.util.List)>($r1);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label2;

     label4:
        return;
    }

    public void close()
    {
        com.fasterxml.jackson.core.util.JsonParserSequence $r0;
        boolean $z0;
        com.fasterxml.jackson.core.JsonParser $r1;

        $r0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;

     label1:
        $r1 = $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate>;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: void close()>();

        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: boolean switchToNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public com.fasterxml.jackson.core.JsonToken nextToken()
    {
        com.fasterxml.jackson.core.util.JsonParserSequence $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.core.JsonToken $r2;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;

        $r1 = $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate>;

        $r2 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        if $r2 == null goto label1;

        return $r2;

     label1:
        $z0 = virtualinvoke $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: boolean switchToNext()>();

        if $z0 == 0 goto label2;

        $r1 = $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate>;

        $r2 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        if $r2 == null goto label1;

        return $r2;

     label2:
        return null;
    }

    protected boolean switchToNext()
    {
        com.fasterxml.jackson.core.util.JsonParserSequence $r0;
        int $i0, $i1;
        com.fasterxml.jackson.core.JsonParser[] $r1;
        com.fasterxml.jackson.core.JsonParser $r2;

        $r0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;

        $i0 = $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParser>;

        $r1 = $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser[] _parsers>;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label1;

        return 0;

     label1:
        $r1 = $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser[] _parsers>;

        $i1 = $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParser>;

        $i0 = $i1 + 1;

        $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParser> = $i0;

        $r2 = $r1[$i1];

        $r0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate> = $r2;

        return 1;
    }
}
