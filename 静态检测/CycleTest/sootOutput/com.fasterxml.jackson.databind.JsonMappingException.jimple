public class com.fasterxml.jackson.databind.JsonMappingException extends com.fasterxml.jackson.core.JsonProcessingException
{
    protected java.util.LinkedList _path;

    public void <init>(java.lang.String)
    {
        com.fasterxml.jackson.databind.JsonMappingException $r0;
        java.lang.String $r1;

        $r0 := @this: com.fasterxml.jackson.databind.JsonMappingException;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>($r1);

        return;
    }

    public void <init>(java.lang.String, com.fasterxml.jackson.core.JsonLocation)
    {
        com.fasterxml.jackson.databind.JsonMappingException $r0;
        java.lang.String $r1;
        com.fasterxml.jackson.core.JsonLocation $r2;

        $r0 := @this: com.fasterxml.jackson.databind.JsonMappingException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonLocation;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)>($r1, $r2);

        return;
    }

    public void <init>(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)
    {
        com.fasterxml.jackson.databind.JsonMappingException $r0;
        java.lang.String $r1;
        com.fasterxml.jackson.core.JsonLocation $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.fasterxml.jackson.databind.JsonMappingException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonLocation;

        $r3 := @parameter2: java.lang.Throwable;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>($r1, $r2, $r3);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        com.fasterxml.jackson.databind.JsonMappingException $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.fasterxml.jackson.databind.JsonMappingException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        specialinvoke $r0.<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r2);

        return;
    }

    public static com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonParser, java.lang.String)
    {
        com.fasterxml.jackson.core.JsonParser $r0;
        java.lang.String $r1;
        com.fasterxml.jackson.databind.JsonMappingException $r2;
        com.fasterxml.jackson.core.JsonLocation $r3;

        $r0 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r1 := @parameter1: java.lang.String;

        $r2 = new com.fasterxml.jackson.databind.JsonMappingException;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonLocation getTokenLocation()>();

        specialinvoke $r2.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)>($r1, $r3);

        return $r2;
    }

    public static com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonParser, java.lang.String, java.lang.Throwable)
    {
        com.fasterxml.jackson.core.JsonParser $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        com.fasterxml.jackson.databind.JsonMappingException $r3;
        com.fasterxml.jackson.core.JsonLocation $r4;

        $r0 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 = new com.fasterxml.jackson.databind.JsonMappingException;

        $r4 = virtualinvoke $r0.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonLocation getTokenLocation()>();

        specialinvoke $r3.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>($r1, $r4, $r2);

        return $r3;
    }

    public static com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable, com.fasterxml.jackson.databind.JsonMappingException$Reference)
    {
        com.fasterxml.jackson.databind.JsonMappingException$Reference $r0;
        java.lang.Throwable $r1;
        boolean $z0;
        com.fasterxml.jackson.databind.JsonMappingException $r2;
        java.lang.String $r3, $r4;
        int $i0;
        java.lang.StringBuilder $r5;
        java.lang.Class $r6;

        $r1 := @parameter0: java.lang.Throwable;

        $r0 := @parameter1: com.fasterxml.jackson.databind.JsonMappingException$Reference;

        $z0 = $r1 instanceof com.fasterxml.jackson.databind.JsonMappingException;

        if $z0 == 0 goto label2;

        $r2 = (com.fasterxml.jackson.databind.JsonMappingException) $r1;

     label1:
        virtualinvoke $r2.<com.fasterxml.jackson.databind.JsonMappingException: void prependPath(com.fasterxml.jackson.databind.JsonMappingException$Reference)>($r0);

        return $r2;

     label2:
        $r3 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String getMessage()>();

        $r4 = $r3;

        if $r3 == null goto label3;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("(was ");

        $r6 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r2 = new com.fasterxml.jackson.databind.JsonMappingException;

        specialinvoke $r2.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>($r4, null, $r1);

        goto label1;
    }

    public static com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable, java.lang.Object, int)
    {
        java.lang.Throwable $r0;
        java.lang.Object $r1;
        int $i0;
        com.fasterxml.jackson.databind.JsonMappingException $r2;
        com.fasterxml.jackson.databind.JsonMappingException$Reference $r3;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $r3 = new com.fasterxml.jackson.databind.JsonMappingException$Reference;

        specialinvoke $r3.<com.fasterxml.jackson.databind.JsonMappingException$Reference: void <init>(java.lang.Object,int)>($r1, $i0);

        $r2 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException$Reference)>($r0, $r3);

        return $r2;
    }

    public static com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable, java.lang.Object, java.lang.String)
    {
        java.lang.Throwable $r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        com.fasterxml.jackson.databind.JsonMappingException $r3;
        com.fasterxml.jackson.databind.JsonMappingException$Reference $r4;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.String;

        $r4 = new com.fasterxml.jackson.databind.JsonMappingException$Reference;

        specialinvoke $r4.<com.fasterxml.jackson.databind.JsonMappingException$Reference: void <init>(java.lang.Object,java.lang.String)>($r1, $r2);

        $r3 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException$Reference)>($r0, $r4);

        return $r3;
    }

    protected void _appendPathDesc(java.lang.StringBuilder)
    {
        com.fasterxml.jackson.databind.JsonMappingException $r0;
        java.lang.StringBuilder $r1;
        java.util.LinkedList $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.fasterxml.jackson.databind.JsonMappingException$Reference $r5;
        java.lang.String $r6;

        $r0 := @this: com.fasterxml.jackson.databind.JsonMappingException;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 = $r0.<com.fasterxml.jackson.databind.JsonMappingException: java.util.LinkedList _path>;

        $r3 = virtualinvoke $r2.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.fasterxml.jackson.databind.JsonMappingException$Reference) $r4;

        $r6 = virtualinvoke $r5.<com.fasterxml.jackson.databind.JsonMappingException$Reference: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        goto label1;

     label2:
        return;
    }

    protected java.lang.String _buildMessage()
    {
        com.fasterxml.jackson.databind.JsonMappingException $r0;
        java.lang.String $r1;
        java.util.LinkedList $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: com.fasterxml.jackson.databind.JsonMappingException;

        $r1 = specialinvoke $r0.<com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getMessage()>();

        $r2 = $r0.<com.fasterxml.jackson.databind.JsonMappingException: java.util.LinkedList _path>;

        if $r2 != null goto label1;

        return $r1;

     label1:
        if $r1 != null goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (through reference chain: ");

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.JsonMappingException: java.lang.StringBuilder getPathReference(java.lang.StringBuilder)>($r3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        goto label2;
    }

    public java.lang.String getLocalizedMessage()
    {
        com.fasterxml.jackson.databind.JsonMappingException $r0;
        java.lang.String $r1;

        $r0 := @this: com.fasterxml.jackson.databind.JsonMappingException;

        $r1 = virtualinvoke $r0.<com.fasterxml.jackson.databind.JsonMappingException: java.lang.String _buildMessage()>();

        return $r1;
    }

    public java.lang.String getMessage()
    {
        com.fasterxml.jackson.databind.JsonMappingException $r0;
        java.lang.String $r1;

        $r0 := @this: com.fasterxml.jackson.databind.JsonMappingException;

        $r1 = virtualinvoke $r0.<com.fasterxml.jackson.databind.JsonMappingException: java.lang.String _buildMessage()>();

        return $r1;
    }

    public java.lang.StringBuilder getPathReference(java.lang.StringBuilder)
    {
        com.fasterxml.jackson.databind.JsonMappingException $r0;
        java.lang.StringBuilder $r1;

        $r0 := @this: com.fasterxml.jackson.databind.JsonMappingException;

        $r1 := @parameter0: java.lang.StringBuilder;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.JsonMappingException: void _appendPathDesc(java.lang.StringBuilder)>($r1);

        return $r1;
    }

    public void prependPath(com.fasterxml.jackson.databind.JsonMappingException$Reference)
    {
        com.fasterxml.jackson.databind.JsonMappingException $r0;
        com.fasterxml.jackson.databind.JsonMappingException$Reference $r1;
        int $i0;
        java.util.LinkedList $r2;

        $r0 := @this: com.fasterxml.jackson.databind.JsonMappingException;

        $r1 := @parameter0: com.fasterxml.jackson.databind.JsonMappingException$Reference;

        $r2 = $r0.<com.fasterxml.jackson.databind.JsonMappingException: java.util.LinkedList _path>;

        if $r2 != null goto label1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.JsonMappingException: java.util.LinkedList _path> = $r2;

     label1:
        $r2 = $r0.<com.fasterxml.jackson.databind.JsonMappingException: java.util.LinkedList _path>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i0 >= 1000 goto label2;

        $r2 = $r0.<com.fasterxml.jackson.databind.JsonMappingException: java.util.LinkedList _path>;

        virtualinvoke $r2.<java.util.LinkedList: void addFirst(java.lang.Object)>($r1);

     label2:
        return;
    }

    public void prependPath(java.lang.Object, java.lang.String)
    {
        com.fasterxml.jackson.databind.JsonMappingException $r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        com.fasterxml.jackson.databind.JsonMappingException$Reference $r3;

        $r0 := @this: com.fasterxml.jackson.databind.JsonMappingException;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        $r3 = new com.fasterxml.jackson.databind.JsonMappingException$Reference;

        specialinvoke $r3.<com.fasterxml.jackson.databind.JsonMappingException$Reference: void <init>(java.lang.Object,java.lang.String)>($r1, $r2);

        virtualinvoke $r0.<com.fasterxml.jackson.databind.JsonMappingException: void prependPath(com.fasterxml.jackson.databind.JsonMappingException$Reference)>($r3);

        return;
    }

    public java.lang.String toString()
    {
        com.fasterxml.jackson.databind.JsonMappingException $r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        $r0 := @this: com.fasterxml.jackson.databind.JsonMappingException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.JsonMappingException: java.lang.String getMessage()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
