final class com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node extends java.lang.Object
{
    final java.lang.Object _data;
    final int _dataLength;
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next;

    public void <init>(java.lang.Object, int)
    {
        com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node $r0;
        java.lang.Object $r1;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: java.lang.Object _data> = $r1;

        $r0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: int _dataLength> = $i0;

        return;
    }

    public final int copyData(java.lang.Object, int)
    {
        com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node $r0;
        java.lang.Object $r1, $r2;
        int $i0, $i1;

        $r0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: java.lang.Object _data>;

        $i1 = $r0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: int _dataLength>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i0, $i1);

        $i1 = $r0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: int _dataLength>;

        $i0 = $i1 + $i0;

        return $i0;
    }

    public final java.lang.Object getData()
    {
        com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node $r0;
        java.lang.Object r1;

        $r0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node;

        r1 = $r0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: java.lang.Object _data>;

        return r1;
    }

    public final void linkNext(com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node)
    {
        com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node $r0, $r1, $r2;
        java.lang.IllegalStateException $r3;

        $r0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node;

        $r1 := @parameter0: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node;

        $r2 = $r0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        $r0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next> = $r1;

        return;
    }

    public final com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node next()
    {
        com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node $r0;

        $r0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node;

        $r0 = $r0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next>;

        return $r0;
    }
}
