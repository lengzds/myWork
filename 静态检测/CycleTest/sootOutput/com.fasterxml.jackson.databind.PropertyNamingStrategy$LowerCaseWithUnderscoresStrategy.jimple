public class com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy extends com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase
{

    public void <init>()
    {
        com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy $r0;

        $r0 := @this: com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy;

        specialinvoke $r0.<com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase: void <init>()>();

        return;
    }

    public java.lang.String translate(java.lang.String)
    {
        com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int $i0, $i1, $i2, $i4;
        boolean $z0, $z1;
        char $c3, $c5;

        $r0 := @this: com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy;

        $r2 := @parameter0: java.lang.String;

        if $r2 != null goto label01;

        return $r2;

     label01:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r1 = new java.lang.StringBuilder;

        $i1 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        $i1 = 0;

        $z0 = 0;

        $i2 = 0;

     label02:
        if $i1 >= $i0 goto label08;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i1);

        if $i1 > 0 goto label03;

        if $c3 == 95 goto label09;

     label03:
        $z1 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c3);

        if $z1 == 0 goto label07;

        if $z0 != 0 goto label04;

        if $i2 <= 0 goto label04;

        $i4 = $i2 + -1;

        $c5 = virtualinvoke $r1.<java.lang.StringBuilder: char charAt(int)>($i4);

        if $c5 == 95 goto label04;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

        $i2 = $i2 + 1;

     label04:
        $z0 = 1;

        $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c3);

     label05:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $i2 = $i2 + 1;

     label06:
        $i1 = $i1 + 1;

        goto label02;

     label07:
        $z0 = 0;

        goto label05;

     label08:
        if $i2 <= 0 goto label10;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label09:
        goto label06;

     label10:
        return $r2;
    }
}
