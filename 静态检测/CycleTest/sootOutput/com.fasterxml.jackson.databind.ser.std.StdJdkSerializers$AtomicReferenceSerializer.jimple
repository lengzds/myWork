public final class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicReferenceSerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer
{

    public void <init>()
    {
        com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicReferenceSerializer $r0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicReferenceSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class,boolean)>(class "java/util/concurrent/atomic/AtomicReference", 0);

        return;
    }

    public final volatile void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicReferenceSerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        java.lang.Object $r3;
        java.util.concurrent.atomic.AtomicReference $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicReferenceSerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.util.concurrent.atomic.AtomicReference) $r3;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicReferenceSerializer: void serialize(java.util.concurrent.atomic.AtomicReference,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r4, $r1, $r2);

        return;
    }

    public final void serialize(java.util.concurrent.atomic.AtomicReference, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicReferenceSerializer $r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        com.fasterxml.jackson.core.JsonGenerator $r2;
        com.fasterxml.jackson.databind.SerializerProvider $r3;
        java.lang.Object $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicReferenceSerializer;

        $r1 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        $r2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        virtualinvoke $r3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeValue(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>($r4, $r2);

        return;
    }
}
