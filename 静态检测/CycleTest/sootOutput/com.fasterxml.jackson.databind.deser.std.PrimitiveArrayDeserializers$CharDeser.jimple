final class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser extends com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$Base
{

    public void <init>()
    {
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser $r0;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$Base: void <init>(java.lang.Class)>(class "[C");

        return;
    }

    public final volatile java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        char[] $r3;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser: char[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r3;
    }

    public final char[] deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.core.JsonToken $r3, $r4;
        char[] $r5, $r6;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r7;
        java.lang.Class $r8;
        com.fasterxml.jackson.databind.JsonMappingException $r9;
        java.lang.String $r10;
        char $c2;
        java.lang.Object $r11;
        com.fasterxml.jackson.core.Base64Variant $r12;
        byte[] $r13;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r3 != $r4 goto label01;

        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: char[] getTextCharacters()>();

        $i0 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: int getTextOffset()>();

        $i1 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: int getTextLength()>();

        $r6 = newarray (char)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i0, $r6, 0, $i1);

        return $r6;

     label01:
        $z0 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z0 == 0 goto label06;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>(64);

     label02:
        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if $r3 == $r4 goto label05;

        $r4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r3 == $r4 goto label03;

        $r8 = <java.lang.Character: java.lang.Class TYPE>;

        $r9 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class)>($r8);

        throw $r9;

     label03:
        $r10 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i0 == 1 goto label04;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can not convert a JSON String of length ");

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into a char element of char array");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String)>($r1, $r10);

        throw $r9;

     label04:
        $c2 = virtualinvoke $r10.<java.lang.String: char charAt(int)>(0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label02;

     label05:
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r10.<java.lang.String: char[] toCharArray()>();

        return $r5;

     label06:
        $r4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        if $r3 != $r4 goto label10;

        $r11 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();

        if $r11 != null goto label07;

        return null;

     label07:
        $z0 = $r11 instanceof char[];

        if $z0 == 0 goto label08;

        $r5 = (char[]) $r11;

        return $r5;

     label08:
        $z0 = $r11 instanceof java.lang.String;

        if $z0 == 0 goto label09;

        $r10 = (java.lang.String) $r11;

        $r5 = virtualinvoke $r10.<java.lang.String: char[] toCharArray()>();

        return $r5;

     label09:
        $z0 = $r11 instanceof byte[];

        if $z0 == 0 goto label10;

        $r12 = staticinvoke <com.fasterxml.jackson.core.Base64Variants: com.fasterxml.jackson.core.Base64Variant getDefaultVariant()>();

        $r13 = (byte[]) $r11;

        $r10 = virtualinvoke $r12.<com.fasterxml.jackson.core.Base64Variant: java.lang.String encode(byte[],boolean)>($r13, 0);

        $r5 = virtualinvoke $r10.<java.lang.String: char[] toCharArray()>();

        return $r5;

     label10:
        $r8 = $r0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser: java.lang.Class _valueClass>;

        $r9 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class)>($r8);

        throw $r9;
    }
}
