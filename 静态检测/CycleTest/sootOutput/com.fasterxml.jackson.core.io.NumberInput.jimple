public final class com.fasterxml.jackson.core.io.NumberInput extends java.lang.Object
{
    static final java.lang.String MAX_LONG_STR;
    static final java.lang.String MIN_LONG_STR_NO_SIGN;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(-9223372036854775808L);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        <com.fasterxml.jackson.core.io.NumberInput: java.lang.String MIN_LONG_STR_NO_SIGN> = $r0;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(9223372036854775807L);

        <com.fasterxml.jackson.core.io.NumberInput: java.lang.String MAX_LONG_STR> = $r0;

        return;
    }

    public static final boolean inLongRange(java.lang.String, boolean)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        int $i0, $i1, $i4;
        char $c2, $c3;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        $r1 = <com.fasterxml.jackson.core.io.NumberInput: java.lang.String MIN_LONG_STR_NO_SIGN>;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i0 goto label3;

        return 1;

     label2:
        $r1 = <com.fasterxml.jackson.core.io.NumberInput: java.lang.String MAX_LONG_STR>;

        goto label1;

     label3:
        if $i1 <= $i0 goto label4;

        return 0;

     label4:
        $i1 = 0;

     label5:
        if $i1 >= $i0 goto label8;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i4 = $c2 - $c3;

        if $i4 == 0 goto label7;

        if $i4 >= 0 goto label6;

        return 1;

     label6:
        return 0;

     label7:
        $i1 = $i1 + 1;

        goto label5;

     label8:
        return 1;
    }

    public static final boolean inLongRange(char[], int, int, boolean)
    {
        char[] $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.String $r1;
        char $c4, $c5;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $z0 == 0 goto label2;

        $r1 = <com.fasterxml.jackson.core.io.NumberInput: java.lang.String MIN_LONG_STR_NO_SIGN>;

     label1:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label3;

        return 1;

     label2:
        $r1 = <com.fasterxml.jackson.core.io.NumberInput: java.lang.String MAX_LONG_STR>;

        goto label1;

     label3:
        if $i1 <= $i2 goto label4;

        return 0;

     label4:
        $i1 = 0;

     label5:
        if $i1 >= $i2 goto label8;

        $i3 = $i0 + $i1;

        $c4 = $r0[$i3];

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i3 = $c4 - $c5;

        if $i3 == 0 goto label7;

        if $i3 >= 0 goto label6;

        return 1;

     label6:
        return 0;

     label7:
        $i1 = $i1 + 1;

        goto label5;

     label8:
        return 1;
    }

    public static final double parseDouble(java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        double $d0;

        $r0 := @parameter0: java.lang.String;

        $r1 = "2.2250738585072012e-308";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        return 2.2250738585072014E-308;

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r0);

        return $d0;
    }

    public static final int parseInt(java.lang.String)
    {
        java.lang.String $r0;
        byte $b0;
        char $c1, $c2;
        int $i3, $i4, $i5, $i6;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $b0 = 1;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $c2 = $c1;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $c1 != 45 goto label03;

        $z0 = 1;

     label01:
        if $z0 == 0 goto label07;

        if $i3 == 1 goto label02;

        if $i3 <= 10 goto label04;

     label02:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i3;

     label03:
        $z0 = 0;

        goto label01;

     label04:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(1);

        $b0 = 2;

     label05:
        if $c2 > 57 goto label06;

        if $c2 >= 48 goto label08;

     label06:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i3;

     label07:
        if $i3 <= 9 goto label05;

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i3;

     label08:
        $i4 = $c2 + -48;

        if $b0 >= $i3 goto label16;

        $i5 = $b0 + 1;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($b0);

        if $c1 > 57 goto label09;

        if $c1 >= 48 goto label10;

     label09:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i3;

     label10:
        $i6 = $i4 * 10;

        $i4 = $c1 + -48;

        $i4 = $i6 + $i4;

        if $i5 >= $i3 goto label16;

        $i6 = $i5 + 1;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i5);

        if $c1 > 57 goto label11;

        if $c1 >= 48 goto label12;

     label11:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i3;

     label12:
        $i5 = $i4 * 10;

        $i4 = $c1 + -48;

        $i4 = $i5 + $i4;

        if $i6 >= $i3 goto label16;

     label13:
        $i5 = $i6 + 1;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i6);

        if $c1 > 57 goto label14;

        if $c1 >= 48 goto label15;

     label14:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i3;

     label15:
        $i6 = $i4 * 10;

        $i4 = $c1 + -48;

        $i4 = $i6 + $i4;

        if $i5 < $i3 goto label17;

     label16:
        if $z0 == 0 goto label18;

        $i3 = neg $i4;

        return $i3;

     label17:
        $i6 = $i5;

        goto label13;

     label18:
        return $i4;
    }

    public static final int parseInt(char[], int, int)
    {
        char[] $r0;
        int $i0, $i1, $i3, $i4;
        char $c2;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $c2 = $r0[$i0];

        $i3 = $c2 + -48;

        $i1 = $i1 + $i0;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        $i3 = $i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 + -48;

        $i3 = $i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        $i3 = $i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 + -48;

        $i3 = $i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        $i3 = $i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 + -48;

        $i3 = $i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        $i3 = $i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 + -48;

        $i3 = $i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        $i3 = $i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 + -48;

        $i3 = $i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        $i3 = $i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 + -48;

        $i3 = $i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        $i3 = $i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 + -48;

        $i3 = $i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        $i1 = $i3 * 10;

        $c2 = $r0[$i0];

        $i0 = $c2 + -48;

        $i0 = $i1 + $i0;

        return $i0;

     label1:
        return $i3;
    }

    public static final long parseLong(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;
        long $l1;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 > 9 goto label1;

        $i0 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>($r0);

        $l1 = (long) $i0;

        return $l1;

     label1:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        return $l1;
    }

    public static final long parseLong(char[], int, int)
    {
        char[] $r0;
        int $i0, $i1, $i2;
        long $l3, $l4;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i1 = $i1 + -9;

        $i2 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(char[],int,int)>($r0, $i0, $i1);

        $l3 = (long) $i2;

        $l3 = $l3 * 1000000000L;

        $i0 = $i1 + $i0;

        $i0 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(char[],int,int)>($r0, $i0, 9);

        $l4 = (long) $i0;

        $l3 = $l4 + $l3;

        return $l3;
    }
}
