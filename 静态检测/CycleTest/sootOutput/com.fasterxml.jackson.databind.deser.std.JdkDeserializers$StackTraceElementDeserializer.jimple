public class com.fasterxml.jackson.databind.deser.std.JdkDeserializers$StackTraceElementDeserializer extends com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer
{

    public void <init>()
    {
        com.fasterxml.jackson.databind.deser.std.JdkDeserializers$StackTraceElementDeserializer $r0;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.JdkDeserializers$StackTraceElementDeserializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "java/lang/StackTraceElement");

        return;
    }

    public volatile java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.JdkDeserializers$StackTraceElementDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        java.lang.StackTraceElement $r3;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.JdkDeserializers$StackTraceElementDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.JdkDeserializers$StackTraceElementDeserializer: java.lang.StackTraceElement deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>($r1, $r2);

        return $r3;
    }

    public java.lang.StackTraceElement deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
    {
        com.fasterxml.jackson.databind.deser.std.JdkDeserializers$StackTraceElementDeserializer $r0;
        com.fasterxml.jackson.core.JsonParser $r1;
        com.fasterxml.jackson.databind.DeserializationContext $r2;
        com.fasterxml.jackson.core.JsonToken $r3, $r4;
        java.lang.String $r5, $r6, $r7, $r8, $r9;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r10;
        com.fasterxml.jackson.databind.JsonMappingException $r11;
        java.lang.Class $r12;
        java.lang.StackTraceElement $r13;

        $r0 := @this: com.fasterxml.jackson.databind.deser.std.JdkDeserializers$StackTraceElementDeserializer;

        $r1 := @parameter0: com.fasterxml.jackson.core.JsonParser;

        $r2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        $r4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r3 != $r4 goto label8;

        $r5 = "";

        $r6 = "";

        $r7 = "";

        $i0 = -1;

     label1:
        $r3 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextValue()>();

        $r4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if $r3 == $r4 goto label7;

        $r8 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>();

        $r9 = "className";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label1;

     label2:
        $r9 = "fileName";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label1;

     label3:
        $r9 = "lineNumber";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label5;

        $z0 = virtualinvoke $r3.<com.fasterxml.jackson.core.JsonToken: boolean isNumeric()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();

        goto label1;

     label4:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Non-numeric token (");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") for property \'lineNumber\'");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String)>($r1, $r5);

        throw $r11;

     label5:
        $r9 = "methodName";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label6;

        $r6 = virtualinvoke $r1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label1;

     label6:
        $r9 = "nativeMethod";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r12 = $r0.<com.fasterxml.jackson.databind.deser.std.JdkDeserializers$StackTraceElementDeserializer: java.lang.Class _valueClass>;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.deser.std.JdkDeserializers$StackTraceElementDeserializer: void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r12, $r8);

        goto label1;

     label7:
        $r13 = new java.lang.StackTraceElement;

        specialinvoke $r13.<java.lang.StackTraceElement: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r5, $r6, $r7, $i0);

        return $r13;

     label8:
        $r12 = $r0.<com.fasterxml.jackson.databind.deser.std.JdkDeserializers$StackTraceElementDeserializer: java.lang.Class _valueClass>;

        $r11 = virtualinvoke $r2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)>($r12, $r3);

        throw $r11;
    }
}
