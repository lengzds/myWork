public abstract class com.fasterxml.jackson.core.JsonGenerator extends java.lang.Object implements java.io.Closeable
{
    protected com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter;

    protected void <init>()
    {
        com.fasterxml.jackson.core.JsonGenerator $r0;

        $r0 := @this: com.fasterxml.jackson.core.JsonGenerator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void close();

    public abstract void flush();

    public com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)
    {
        com.fasterxml.jackson.core.JsonGenerator $r0;
        com.fasterxml.jackson.core.io.CharacterEscapes $r1;

        $r0 := @this: com.fasterxml.jackson.core.JsonGenerator;

        $r1 := @parameter0: com.fasterxml.jackson.core.io.CharacterEscapes;

        return $r0;
    }

    public com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int)
    {
        com.fasterxml.jackson.core.JsonGenerator $r0;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.core.JsonGenerator;

        $i0 := @parameter0: int;

        return $r0;
    }

    public com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)
    {
        com.fasterxml.jackson.core.JsonGenerator $r0;
        com.fasterxml.jackson.core.PrettyPrinter $r1;

        $r0 := @this: com.fasterxml.jackson.core.JsonGenerator;

        $r1 := @parameter0: com.fasterxml.jackson.core.PrettyPrinter;

        $r0.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter> = $r1;

        return $r0;
    }

    public abstract com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter();

    public final void writeArrayFieldStart(java.lang.String)
    {
        com.fasterxml.jackson.core.JsonGenerator $r0;
        java.lang.String $r1;

        $r0 := @this: com.fasterxml.jackson.core.JsonGenerator;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r1);

        virtualinvoke $r0.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray()>();

        return;
    }

    public abstract void writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int);

    public void writeBinary(byte[])
    {
        com.fasterxml.jackson.core.JsonGenerator $r0;
        byte[] $r1;
        int $i0;
        com.fasterxml.jackson.core.Base64Variant $r2;

        $r0 := @this: com.fasterxml.jackson.core.JsonGenerator;

        $r1 := @parameter0: byte[];

        $r2 = staticinvoke <com.fasterxml.jackson.core.Base64Variants: com.fasterxml.jackson.core.Base64Variant getDefaultVariant()>();

        $i0 = lengthof $r1;

        virtualinvoke $r0.<com.fasterxml.jackson.core.JsonGenerator: void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)>($r2, $r1, 0, $i0);

        return;
    }

    public abstract void writeBoolean(boolean);

    public abstract void writeEndArray();

    public abstract void writeEndObject();

    public abstract void writeFieldName(com.fasterxml.jackson.core.SerializableString);

    public abstract void writeFieldName(java.lang.String);

    public abstract void writeNull();

    public abstract void writeNumber(double);

    public abstract void writeNumber(float);

    public abstract void writeNumber(int);

    public abstract void writeNumber(long);

    public abstract void writeNumber(java.lang.String);

    public abstract void writeNumber(java.math.BigDecimal);

    public abstract void writeNumber(java.math.BigInteger);

    public abstract void writeObject(java.lang.Object);

    public final void writeObjectFieldStart(java.lang.String)
    {
        com.fasterxml.jackson.core.JsonGenerator $r0;
        java.lang.String $r1;

        $r0 := @this: com.fasterxml.jackson.core.JsonGenerator;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r1);

        virtualinvoke $r0.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>();

        return;
    }

    public abstract void writeRaw(char);

    public abstract void writeRaw(java.lang.String);

    public abstract void writeRaw(char[], int, int);

    public abstract void writeRawValue(java.lang.String);

    public abstract void writeStartArray();

    public abstract void writeStartObject();

    public abstract void writeString(com.fasterxml.jackson.core.SerializableString);

    public abstract void writeString(java.lang.String);

    public abstract void writeString(char[], int, int);

    public void writeStringField(java.lang.String, java.lang.String)
    {
        com.fasterxml.jackson.core.JsonGenerator $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: com.fasterxml.jackson.core.JsonGenerator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke $r0.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r1);

        virtualinvoke $r0.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>($r2);

        return;
    }
}
