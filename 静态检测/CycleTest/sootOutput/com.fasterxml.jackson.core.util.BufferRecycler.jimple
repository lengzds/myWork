public class com.fasterxml.jackson.core.util.BufferRecycler extends java.lang.Object
{
    protected final byte[][] _byteBuffers;
    protected final char[][] _charBuffers;

    public void <init>()
    {
        com.fasterxml.jackson.core.util.BufferRecycler $r0;
        com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[] $r1;
        int $i0;
        byte[][] $r2;
        com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType[] $r3;
        char[][] $r4;

        $r0 := @this: com.fasterxml.jackson.core.util.BufferRecycler;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[] values()>();

        $i0 = lengthof $r1;

        $r2 = newarray (byte[])[$i0];

        $r0.<com.fasterxml.jackson.core.util.BufferRecycler: byte[][] _byteBuffers> = $r2;

        $r3 = staticinvoke <com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType: com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType[] values()>();

        $i0 = lengthof $r3;

        $r4 = newarray (char[])[$i0];

        $r0.<com.fasterxml.jackson.core.util.BufferRecycler: char[][] _charBuffers> = $r4;

        return;
    }

    private final byte[] balloc(int)
    {
        com.fasterxml.jackson.core.util.BufferRecycler $r0;
        int $i0;
        byte[] $r1;

        $r0 := @this: com.fasterxml.jackson.core.util.BufferRecycler;

        $i0 := @parameter0: int;

        $r1 = newarray (byte)[$i0];

        return $r1;
    }

    private final char[] calloc(int)
    {
        com.fasterxml.jackson.core.util.BufferRecycler $r0;
        int $i0;
        char[] $r1;

        $r0 := @this: com.fasterxml.jackson.core.util.BufferRecycler;

        $i0 := @parameter0: int;

        $r1 = newarray (char)[$i0];

        return $r1;
    }

    public final byte[] allocByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)
    {
        com.fasterxml.jackson.core.util.BufferRecycler $r0;
        com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType $r1;
        byte[][] $r2;
        int $i0;
        byte[] $r3;

        $r0 := @this: com.fasterxml.jackson.core.util.BufferRecycler;

        $r1 := @parameter0: com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType;

        $i0 = virtualinvoke $r1.<com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: int ordinal()>();

        $r2 = $r0.<com.fasterxml.jackson.core.util.BufferRecycler: byte[][] _byteBuffers>;

        $r3 = $r2[$i0];

        if $r3 != null goto label1;

        $i0 = staticinvoke <com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: int access$000(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType)>($r1);

        $r3 = specialinvoke $r0.<com.fasterxml.jackson.core.util.BufferRecycler: byte[] balloc(int)>($i0);

        return $r3;

     label1:
        $r2 = $r0.<com.fasterxml.jackson.core.util.BufferRecycler: byte[][] _byteBuffers>;

        $r2[$i0] = null;

        return $r3;
    }

    public final char[] allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType)
    {
        com.fasterxml.jackson.core.util.BufferRecycler $r0;
        com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType $r1;
        char[] $r2;

        $r0 := @this: com.fasterxml.jackson.core.util.BufferRecycler;

        $r1 := @parameter0: com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType;

        $r2 = virtualinvoke $r0.<com.fasterxml.jackson.core.util.BufferRecycler: char[] allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType,int)>($r1, 0);

        return $r2;
    }

    public final char[] allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, int)
    {
        com.fasterxml.jackson.core.util.BufferRecycler $r0;
        com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType $r1;
        int $i0, $i1, $i2;
        char[][] $r2;
        char[] $r3;

        $r0 := @this: com.fasterxml.jackson.core.util.BufferRecycler;

        $r1 := @parameter0: com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType: int access$100(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType)>($r1);

        if $i1 <= $i0 goto label1;

        $i0 = staticinvoke <com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType: int access$100(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType)>($r1);

     label1:
        $i1 = virtualinvoke $r1.<com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType: int ordinal()>();

        $r2 = $r0.<com.fasterxml.jackson.core.util.BufferRecycler: char[][] _charBuffers>;

        $r3 = $r2[$i1];

        if $r3 == null goto label2;

        $i2 = lengthof $r3;

        if $i2 >= $i0 goto label3;

     label2:
        $r3 = specialinvoke $r0.<com.fasterxml.jackson.core.util.BufferRecycler: char[] calloc(int)>($i0);

        return $r3;

     label3:
        $r2 = $r0.<com.fasterxml.jackson.core.util.BufferRecycler: char[][] _charBuffers>;

        $r2[$i1] = null;

        return $r3;
    }

    public final void releaseByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType, byte[])
    {
        com.fasterxml.jackson.core.util.BufferRecycler $r0;
        com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType $r1;
        byte[] $r2;
        byte[][] $r3;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.core.util.BufferRecycler;

        $r1 := @parameter0: com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType;

        $r2 := @parameter1: byte[];

        $r3 = $r0.<com.fasterxml.jackson.core.util.BufferRecycler: byte[][] _byteBuffers>;

        $i0 = virtualinvoke $r1.<com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType: int ordinal()>();

        $r3[$i0] = $r2;

        return;
    }

    public final void releaseCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType, char[])
    {
        com.fasterxml.jackson.core.util.BufferRecycler $r0;
        com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType $r1;
        char[] $r2;
        char[][] $r3;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.core.util.BufferRecycler;

        $r1 := @parameter0: com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType;

        $r2 := @parameter1: char[];

        $r3 = $r0.<com.fasterxml.jackson.core.util.BufferRecycler: char[][] _charBuffers>;

        $i0 = virtualinvoke $r1.<com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType: int ordinal()>();

        $r3[$i0] = $r2;

        return;
    }
}
