public abstract class com.speedsoftware.a.ba extends com.speedsoftware.a.az
{
    public static final int[] ah;
    public static final byte[] ai;
    public static final int[] aj;
    public static final int[] ak;
    public static final int[] al;
    public static final int[] am;
    protected com.speedsoftware.a.z[] V;
    protected byte[] W;
    protected int X;
    protected int Y;
    protected int Z;
    protected int aa;
    protected com.speedsoftware.a.c[] ab;
    protected com.speedsoftware.a.t ac;
    protected com.speedsoftware.a.l ad;
    protected com.speedsoftware.a.u ae;
    protected com.speedsoftware.a.ap af;
    protected com.speedsoftware.a.e ag;

    static void <clinit>()
    {
        int[] $r0;
        byte[] $r1;

        $r0 = newarray (int)[28];

        $r0[1] = 1;

        $r0[2] = 2;

        $r0[3] = 3;

        $r0[4] = 4;

        $r0[5] = 5;

        $r0[6] = 6;

        $r0[7] = 7;

        $r0[8] = 8;

        $r0[9] = 10;

        $r0[10] = 12;

        $r0[11] = 14;

        $r0[12] = 16;

        $r0[13] = 20;

        $r0[14] = 24;

        $r0[15] = 28;

        $r0[16] = 32;

        $r0[17] = 40;

        $r0[18] = 48;

        $r0[19] = 56;

        $r0[20] = 64;

        $r0[21] = 80;

        $r0[22] = 96;

        $r0[23] = 112;

        $r0[24] = 128;

        $r0[25] = 160;

        $r0[26] = 192;

        $r0[27] = 224;

        <com.speedsoftware.a.ba: int[] ah> = $r0;

        $r1 = newarray (byte)[28];

        $r1[8] = 1;

        $r1[9] = 1;

        $r1[10] = 1;

        $r1[11] = 1;

        $r1[12] = 2;

        $r1[13] = 2;

        $r1[14] = 2;

        $r1[15] = 2;

        $r1[16] = 3;

        $r1[17] = 3;

        $r1[18] = 3;

        $r1[19] = 3;

        $r1[20] = 4;

        $r1[21] = 4;

        $r1[22] = 4;

        $r1[23] = 4;

        $r1[24] = 5;

        $r1[25] = 5;

        $r1[26] = 5;

        $r1[27] = 5;

        <com.speedsoftware.a.ba: byte[] ai> = $r1;

        $r0 = newarray (int)[48];

        $r0[1] = 1;

        $r0[2] = 2;

        $r0[3] = 3;

        $r0[4] = 4;

        $r0[5] = 6;

        $r0[6] = 8;

        $r0[7] = 12;

        $r0[8] = 16;

        $r0[9] = 24;

        $r0[10] = 32;

        $r0[11] = 48;

        $r0[12] = 64;

        $r0[13] = 96;

        $r0[14] = 128;

        $r0[15] = 192;

        $r0[16] = 256;

        $r0[17] = 384;

        $r0[18] = 512;

        $r0[19] = 768;

        $r0[20] = 1024;

        $r0[21] = 1536;

        $r0[22] = 2048;

        $r0[23] = 3072;

        $r0[24] = 4096;

        $r0[25] = 6144;

        $r0[26] = 8192;

        $r0[27] = 12288;

        $r0[28] = 16384;

        $r0[29] = 24576;

        $r0[30] = 32768;

        $r0[31] = 49152;

        $r0[32] = 65536;

        $r0[33] = 98304;

        $r0[34] = 131072;

        $r0[35] = 196608;

        $r0[36] = 262144;

        $r0[37] = 327680;

        $r0[38] = 393216;

        $r0[39] = 458752;

        $r0[40] = 524288;

        $r0[41] = 589824;

        $r0[42] = 655360;

        $r0[43] = 720896;

        $r0[44] = 786432;

        $r0[45] = 851968;

        $r0[46] = 917504;

        $r0[47] = 983040;

        <com.speedsoftware.a.ba: int[] aj> = $r0;

        $r0 = newarray (int)[48];

        $r0[4] = 1;

        $r0[5] = 1;

        $r0[6] = 2;

        $r0[7] = 2;

        $r0[8] = 3;

        $r0[9] = 3;

        $r0[10] = 4;

        $r0[11] = 4;

        $r0[12] = 5;

        $r0[13] = 5;

        $r0[14] = 6;

        $r0[15] = 6;

        $r0[16] = 7;

        $r0[17] = 7;

        $r0[18] = 8;

        $r0[19] = 8;

        $r0[20] = 9;

        $r0[21] = 9;

        $r0[22] = 10;

        $r0[23] = 10;

        $r0[24] = 11;

        $r0[25] = 11;

        $r0[26] = 12;

        $r0[27] = 12;

        $r0[28] = 13;

        $r0[29] = 13;

        $r0[30] = 14;

        $r0[31] = 14;

        $r0[32] = 15;

        $r0[33] = 15;

        $r0[34] = 16;

        $r0[35] = 16;

        $r0[36] = 16;

        $r0[37] = 16;

        $r0[38] = 16;

        $r0[39] = 16;

        $r0[40] = 16;

        $r0[41] = 16;

        $r0[42] = 16;

        $r0[43] = 16;

        $r0[44] = 16;

        $r0[45] = 16;

        $r0[46] = 16;

        $r0[47] = 16;

        <com.speedsoftware.a.ba: int[] ak> = $r0;

        $r0 = newarray (int)[8];

        $r0[1] = 4;

        $r0[2] = 8;

        $r0[3] = 16;

        $r0[4] = 32;

        $r0[5] = 64;

        $r0[6] = 128;

        $r0[7] = 192;

        <com.speedsoftware.a.ba: int[] al> = $r0;

        $r0 = newarray (int)[8];

        $r0[0] = 2;

        $r0[1] = 2;

        $r0[2] = 3;

        $r0[3] = 4;

        $r0[4] = 5;

        $r0[5] = 6;

        $r0[6] = 6;

        $r0[7] = 6;

        <com.speedsoftware.a.ba: int[] am> = $r0;

        return;
    }

    public void <init>()
    {
        com.speedsoftware.a.ba $r0;
        com.speedsoftware.a.z[] $r1;
        byte[] $r2;
        com.speedsoftware.a.c[] $r3;
        com.speedsoftware.a.t $r4;
        com.speedsoftware.a.l $r5;
        com.speedsoftware.a.u $r6;
        com.speedsoftware.a.ap $r7;
        com.speedsoftware.a.e $r8;

        $r0 := @this: com.speedsoftware.a.ba;

        specialinvoke $r0.<com.speedsoftware.a.az: void <init>()>();

        $r1 = newarray (com.speedsoftware.a.z)[4];

        $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.z[] V> = $r1;

        $r2 = newarray (byte)[1028];

        $r0.<com.speedsoftware.a.ba: byte[] W> = $r2;

        $r3 = newarray (com.speedsoftware.a.c)[4];

        $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.c[] ab> = $r3;

        $r4 = new com.speedsoftware.a.t;

        specialinvoke $r4.<com.speedsoftware.a.t: void <init>()>();

        $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.t ac> = $r4;

        $r5 = new com.speedsoftware.a.l;

        specialinvoke $r5.<com.speedsoftware.a.l: void <init>()>();

        $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.l ad> = $r5;

        $r6 = new com.speedsoftware.a.u;

        specialinvoke $r6.<com.speedsoftware.a.u: void <init>()>();

        $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.u ae> = $r6;

        $r7 = new com.speedsoftware.a.ap;

        specialinvoke $r7.<com.speedsoftware.a.ap: void <init>()>();

        $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.ap af> = $r7;

        $r8 = new com.speedsoftware.a.e;

        specialinvoke $r8.<com.speedsoftware.a.e: void <init>()>();

        $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.e ag> = $r8;

        return;
    }

    private void a(int, int)
    {
        com.speedsoftware.a.ba $r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1, $r3;
        int[] $r2;
        long $l4, $l5;
        byte $b6;

        $r0 := @this: com.speedsoftware.a.ba;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.speedsoftware.a.ba: int[] m>;

        $i2 = $r0.<com.speedsoftware.a.ba: int p>;

        $i3 = $i2 + 1;

        $r0.<com.speedsoftware.a.ba: int p> = $i3;

        $i2 = $i2 & 3;

        $r2[$i2] = $i0;

        $r0.<com.speedsoftware.a.ba: int P> = $i0;

        $r0.<com.speedsoftware.a.ba: int Q> = $i1;

        $l4 = $r0.<com.speedsoftware.a.ba: long k>;

        $l5 = (long) $i1;

        $l4 = $l4 - $l5;

        $r0.<com.speedsoftware.a.ba: long k> = $l4;

        $i2 = $r0.<com.speedsoftware.a.ba: int n>;

        $i0 = $i2 - $i0;

        if $i0 >= 4194004 goto label4;

        $i2 = $r0.<com.speedsoftware.a.ba: int n>;

        if $i2 >= 4194004 goto label4;

        $r1 = $r0.<com.speedsoftware.a.ba: byte[] l>;

        $i3 = $r0.<com.speedsoftware.a.ba: int n>;

        $i2 = $i3 + 1;

        $r0.<com.speedsoftware.a.ba: int n> = $i2;

        $r3 = $r0.<com.speedsoftware.a.ba: byte[] l>;

        $i2 = $i0 + 1;

        $b6 = $r3[$i0];

        $r1[$i3] = $b6;

        $r1 = $r0.<com.speedsoftware.a.ba: byte[] l>;

        $i3 = $r0.<com.speedsoftware.a.ba: int n>;

        $i0 = $i3 + 1;

        $r0.<com.speedsoftware.a.ba: int n> = $i0;

        $r3 = $r0.<com.speedsoftware.a.ba: byte[] l>;

        $i0 = $i2 + 1;

        $b6 = $r3[$i2];

        $r1[$i3] = $b6;

     label1:
        if $i1 > 2 goto label2;

        return;

     label2:
        $i1 = $i1 + -1;

        $r1 = $r0.<com.speedsoftware.a.ba: byte[] l>;

        $i2 = $r0.<com.speedsoftware.a.ba: int n>;

        $i3 = $i2 + 1;

        $r0.<com.speedsoftware.a.ba: int n> = $i3;

        $r3 = $r0.<com.speedsoftware.a.ba: byte[] l>;

        $b6 = $r3[$i0];

        $r1[$i2] = $b6;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r3 = $r0.<com.speedsoftware.a.ba: byte[] l>;

        $i3 = $r0.<com.speedsoftware.a.ba: int n>;

        $r1 = $r0.<com.speedsoftware.a.ba: byte[] l>;

        $i1 = $i0 + 1;

        $i0 = $i0 & 4194303;

        $b6 = $r1[$i0];

        $r3[$i3] = $b6;

        $i0 = $r0.<com.speedsoftware.a.ba: int n>;

        $i0 = $i0 + 1;

        $i0 = $i0 & 4194303;

        $r0.<com.speedsoftware.a.ba: int n> = $i0;

        $i0 = $i1;

        $i1 = $i2;

     label4:
        $i2 = $i1 + -1;

        if $i1 != 0 goto label3;

        return;
    }

    protected static void a(byte[], int, com.speedsoftware.a.k, int)
    {
        byte[] $r0;
        int $i0, $i1, $i2, $i3, $i7;
        com.speedsoftware.a.k $r1;
        int[] $r2, $r3, $r4, $r5;
        long $l4, $l6;
        byte $b5;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r1 := @parameter2: com.speedsoftware.a.k;

        $i1 := @parameter3: int;

        $r2 = newarray (int)[16];

        $r3 = newarray (int)[16];

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r2, 0);

        $r4 = virtualinvoke $r1.<com.speedsoftware.a.k: int[] b()>();

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r4, 0);

        $i3 = 0;

     label1:
        if $i3 < $i1 goto label4;

        $r2[0] = 0;

        $r3[0] = 0;

        $r4 = virtualinvoke $r1.<com.speedsoftware.a.k: int[] c()>();

        $r4[0] = 0;

        $r4 = virtualinvoke $r1.<com.speedsoftware.a.k: int[] a()>();

        $r4[0] = 0;

        $l4 = 0L;

        $i3 = 1;

     label2:
        if $i3 < 16 goto label5;

        $i3 = 0;

     label3:
        if $i3 < $i1 goto label7;

        virtualinvoke $r1.<com.speedsoftware.a.k: void a(int)>($i1);

        return;

     label4:
        $i2 = $i0 + $i3;

        $b5 = $r0[$i2];

        $b5 = $b5 & 15;

        $i2 = $r2[$b5];

        $i2 = $i2 + 1;

        $r2[$b5] = $i2;

        $i3 = $i3 + 1;

        goto label1;

     label5:
        $i2 = $r2[$i3];

        $l6 = (long) $i2;

        $l4 = $l4 + $l6;

        $l4 = 2L * $l4;

        $i2 = 15 - $i3;

        $l6 = $l4 << $i2;

        $b5 = $l6 cmp 65535L;

        if $b5 <= 0 goto label6;

        $l6 = 65535L;

     label6:
        $r4 = virtualinvoke $r1.<com.speedsoftware.a.k: int[] a()>();

        $i2 = (int) $l6;

        $r4[$i3] = $i2;

        $r4 = virtualinvoke $r1.<com.speedsoftware.a.k: int[] c()>();

        $r5 = virtualinvoke $r1.<com.speedsoftware.a.k: int[] c()>();

        $i2 = $i3 + -1;

        $i2 = $r5[$i2];

        $i7 = $i3 + -1;

        $i7 = $r2[$i7];

        $i2 = $i2 + $i7;

        $r4[$i3] = $i2;

        $r3[$i3] = $i2;

        $i3 = $i3 + 1;

        goto label2;

     label7:
        $i2 = $i0 + $i3;

        $b5 = $r0[$i2];

        if $b5 == 0 goto label8;

        $r2 = virtualinvoke $r1.<com.speedsoftware.a.k: int[] b()>();

        $i2 = $i0 + $i3;

        $b5 = $r0[$i2];

        $b5 = $b5 & 15;

        $i2 = $r3[$b5];

        $i7 = $i2 + 1;

        $r3[$b5] = $i7;

        $r2[$i2] = $i3;

     label8:
        $i3 = $i3 + 1;

        goto label3;
    }

    private boolean f()
    {
        com.speedsoftware.a.ba $r0;
        byte[] $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i5;
        boolean $z0;
        com.speedsoftware.a.e $r4;
        byte $b4;
        com.speedsoftware.a.z[] $r5;
        com.speedsoftware.a.z $r6;
        com.speedsoftware.a.t $r7;
        com.speedsoftware.a.l $r8;
        com.speedsoftware.a.ap $r9;

        $r0 := @this: com.speedsoftware.a.ba;

        $i0 = 0;

        $r2 = newarray (byte)[19];

        $r1 = newarray (byte)[1028];

        $i1 = $r0.<com.speedsoftware.a.ba: int a>;

        $i2 = $r0.<com.speedsoftware.a.ba: int j>;

        $i2 = $i2 + -25;

        if $i1 <= $i2 goto label01;

        $z0 = virtualinvoke $r0.<com.speedsoftware.a.ba: boolean i()>();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $i1 = virtualinvoke $r0.<com.speedsoftware.a.ba: int b()>();

        $i2 = 32768 & $i1;

        $r0.<com.speedsoftware.a.ba: int X> = $i2;

        $i2 = $i1 & 16384;

        if $i2 != 0 goto label02;

        $r3 = $r0.<com.speedsoftware.a.ba: byte[] W>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r3, 0);

     label02:
        virtualinvoke $r0.<com.speedsoftware.a.ba: void a(int)>(2);

        $i2 = $r0.<com.speedsoftware.a.ba: int X>;

        if $i2 == 0 goto label07;

        $i1 = $i1 >>> 12;

        $i1 = $i1 & 3;

        $i1 = $i1 + 1;

        $r0.<com.speedsoftware.a.ba: int Y> = $i1;

        $i1 = $r0.<com.speedsoftware.a.ba: int Z>;

        $i2 = $r0.<com.speedsoftware.a.ba: int Y>;

        if $i1 < $i2 goto label03;

        $r0.<com.speedsoftware.a.ba: int Z> = 0;

     label03:
        virtualinvoke $r0.<com.speedsoftware.a.ba: void a(int)>(2);

        $i1 = $r0.<com.speedsoftware.a.ba: int Y>;

        $i1 = $i1 * 257;

     label04:
        $i2 = 0;

     label05:
        if $i2 < 19 goto label08;

        $r4 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.e ag>;

        staticinvoke <com.speedsoftware.a.ba: void a(byte[],int,com.speedsoftware.a.k,int)>($r2, 0, $r4, 19);

        $i2 = 0;

     label06:
        if $i2 < $i1 goto label09;

        $i1 = $r0.<com.speedsoftware.a.ba: int a>;

        $i2 = $r0.<com.speedsoftware.a.ba: int j>;

        if $i1 <= $i2 goto label16;

        return 1;

     label07:
        $i1 = 374;

        goto label04;

     label08:
        $i3 = virtualinvoke $r0.<com.speedsoftware.a.ba: int b()>();

        $i3 = $i3 >>> 12;

        $b4 = (byte) $i3;

        $r2[$i2] = $b4;

        virtualinvoke $r0.<com.speedsoftware.a.ba: void a(int)>(4);

        $i2 = $i2 + 1;

        goto label05;

     label09:
        $i3 = $r0.<com.speedsoftware.a.ba: int a>;

        $i5 = $r0.<com.speedsoftware.a.ba: int j>;

        $i5 = $i5 + -5;

        if $i3 <= $i5 goto label10;

        $z0 = virtualinvoke $r0.<com.speedsoftware.a.ba: boolean i()>();

        if $z0 == 0 goto label22;

     label10:
        $r4 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.e ag>;

        $i3 = virtualinvoke $r0.<com.speedsoftware.a.ba: int a(com.speedsoftware.a.k)>($r4);

        if $i3 >= 16 goto label11;

        $r2 = $r0.<com.speedsoftware.a.ba: byte[] W>;

        $b4 = $r2[$i2];

        $i3 = $i3 + $b4;

        $i3 = $i3 & 15;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $i2 = $i2 + 1;

        goto label06;

     label11:
        if $i3 != 16 goto label13;

        $i3 = virtualinvoke $r0.<com.speedsoftware.a.ba: int b()>();

        $i3 = $i3 >>> 14;

        $i5 = $i3 + 3;

        virtualinvoke $r0.<com.speedsoftware.a.ba: void a(int)>(2);

     label12:
        $i3 = $i5 + -1;

        if $i5 <= 0 goto label06;

        if $i2 >= $i1 goto label06;

        $i5 = $i2 + -1;

        $b4 = $r1[$i5];

        $r1[$i2] = $b4;

        $i2 = $i2 + 1;

        $i5 = $i3;

        goto label12;

     label13:
        if $i3 != 17 goto label15;

        $i3 = virtualinvoke $r0.<com.speedsoftware.a.ba: int b()>();

        $i3 = $i3 >>> 13;

        $i5 = $i3 + 3;

        virtualinvoke $r0.<com.speedsoftware.a.ba: void a(int)>(3);

     label14:
        if $i5 <= 0 goto label06;

        if $i2 >= $i1 goto label06;

        $r1[$i2] = 0;

        $i2 = $i2 + 1;

        $i5 = $i5 + -1;

        goto label14;

     label15:
        $i3 = virtualinvoke $r0.<com.speedsoftware.a.ba: int b()>();

        $i3 = $i3 >>> 9;

        $i5 = $i3 + 11;

        virtualinvoke $r0.<com.speedsoftware.a.ba: void a(int)>(7);

        goto label14;

     label16:
        $i1 = $r0.<com.speedsoftware.a.ba: int X>;

        if $i1 == 0 goto label20;

        $i1 = 0;

     label17:
        $i2 = $r0.<com.speedsoftware.a.ba: int Y>;

        if $i1 < $i2 goto label19;

     label18:
        $r2 = $r0.<com.speedsoftware.a.ba: byte[] W>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label21;

        return 1;

     label19:
        $i2 = $i1 * 257;

        $r5 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.z[] V>;

        $r6 = $r5[$i1];

        staticinvoke <com.speedsoftware.a.ba: void a(byte[],int,com.speedsoftware.a.k,int)>($r1, $i2, $r6, 257);

        $i1 = $i1 + 1;

        goto label17;

     label20:
        $r7 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.t ac>;

        staticinvoke <com.speedsoftware.a.ba: void a(byte[],int,com.speedsoftware.a.k,int)>($r1, 0, $r7, 298);

        $r8 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.l ad>;

        staticinvoke <com.speedsoftware.a.ba: void a(byte[],int,com.speedsoftware.a.k,int)>($r1, 298, $r8, 48);

        $r9 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.ap af>;

        staticinvoke <com.speedsoftware.a.ba: void a(byte[],int,com.speedsoftware.a.k,int)>($r1, 346, $r9, 28);

        goto label18;

     label21:
        $r2 = $r0.<com.speedsoftware.a.ba: byte[] W>;

        $b4 = $r1[$i0];

        $r2[$i0] = $b4;

        $i0 = $i0 + 1;

        goto label18;

     label22:
        return 0;
    }

    protected final int a(com.speedsoftware.a.k)
    {
        com.speedsoftware.a.ba $r0;
        com.speedsoftware.a.k $r1;
        byte $b0, $b4;
        int $i1, $i5, $i6;
        long $l2, $l3;
        int[] $r2, $r3;

        $r0 := @this: com.speedsoftware.a.ba;

        $r1 := @parameter0: com.speedsoftware.a.k;

        $b0 = 1;

        $i1 = virtualinvoke $r0.<com.speedsoftware.a.ba: int b()>();

        $i1 = $i1 & 65534;

        $l2 = (long) $i1;

        $r2 = virtualinvoke $r1.<com.speedsoftware.a.k: int[] a()>();

        $i1 = $r2[8];

        $l3 = (long) $i1;

        $b4 = $l2 cmp $l3;

        if $b4 >= 0 goto label10;

        $i1 = $r2[4];

        $l3 = (long) $i1;

        $b4 = $l2 cmp $l3;

        if $b4 >= 0 goto label06;

        $i1 = $r2[2];

        $l3 = (long) $i1;

        $b4 = $l2 cmp $l3;

        if $b4 >= 0 goto label04;

        $i1 = $r2[1];

        $l3 = (long) $i1;

        $b4 = $l2 cmp $l3;

        if $b4 >= 0 goto label03;

     label01:
        virtualinvoke $r0.<com.speedsoftware.a.ba: void a(int)>($b0);

        $r3 = virtualinvoke $r1.<com.speedsoftware.a.k: int[] c()>();

        $i1 = $r3[$b0];

        $i5 = (int) $l2;

        $i6 = $b0 + -1;

        $i6 = $r2[$i6];

        $i5 = $i5 - $i6;

        $i6 = 16 - $b0;

        $i5 = $i5 >>> $i6;

        $i1 = $i5 + $i1;

        $i5 = virtualinvoke $r1.<com.speedsoftware.a.k: int d()>();

        if $i1 < $i5 goto label02;

        $i1 = 0;

     label02:
        $r2 = virtualinvoke $r1.<com.speedsoftware.a.k: int[] b()>();

        $i1 = $r2[$i1];

        return $i1;

     label03:
        $b0 = 2;

        goto label01;

     label04:
        $i1 = $r2[3];

        $l3 = (long) $i1;

        $b0 = $l2 cmp $l3;

        if $b0 >= 0 goto label05;

        $b0 = 3;

        goto label01;

     label05:
        $b0 = 4;

        goto label01;

     label06:
        $i1 = $r2[6];

        $l3 = (long) $i1;

        $b0 = $l2 cmp $l3;

        if $b0 >= 0 goto label08;

        $i1 = $r2[5];

        $l3 = (long) $i1;

        $b0 = $l2 cmp $l3;

        if $b0 >= 0 goto label07;

        $b0 = 5;

        goto label01;

     label07:
        $b0 = 6;

        goto label01;

     label08:
        $i1 = $r2[7];

        $l3 = (long) $i1;

        $b0 = $l2 cmp $l3;

        if $b0 >= 0 goto label09;

        $b0 = 7;

        goto label01;

     label09:
        $b0 = 8;

        goto label01;

     label10:
        $i1 = $r2[12];

        $l3 = (long) $i1;

        $b0 = $l2 cmp $l3;

        if $b0 >= 0 goto label14;

        $i1 = $r2[10];

        $l3 = (long) $i1;

        $b0 = $l2 cmp $l3;

        if $b0 >= 0 goto label12;

        $i1 = $r2[9];

        $l3 = (long) $i1;

        $b0 = $l2 cmp $l3;

        if $b0 >= 0 goto label11;

        $b0 = 9;

        goto label01;

     label11:
        $b0 = 10;

        goto label01;

     label12:
        $i1 = $r2[11];

        $l3 = (long) $i1;

        $b0 = $l2 cmp $l3;

        if $b0 >= 0 goto label13;

        $b0 = 11;

        goto label01;

     label13:
        $b0 = 12;

        goto label01;

     label14:
        $i1 = $r2[14];

        $l3 = (long) $i1;

        $b0 = $l2 cmp $l3;

        if $b0 >= 0 goto label16;

        $i1 = $r2[13];

        $l3 = (long) $i1;

        $b0 = $l2 cmp $l3;

        if $b0 >= 0 goto label15;

        $b0 = 13;

        goto label01;

     label15:
        $b0 = 14;

        goto label01;

     label16:
        $b0 = 15;

        goto label01;
    }

    protected final void c(boolean)
    {
        com.speedsoftware.a.ba $r0;
        boolean $z0, $z1;
        int $i0, $i3, $i4, $i5, $i6, $i7;
        long $l1;
        byte $b2;
        com.speedsoftware.a.z[] $r1;
        com.speedsoftware.a.z $r2;
        byte[] $r3;
        com.speedsoftware.a.c[] $r4;
        com.speedsoftware.a.c $r5;
        int[] $r6;
        com.speedsoftware.a.t $r7;
        com.speedsoftware.a.l $r8;
        com.speedsoftware.a.ap $r9;

        $r0 := @this: com.speedsoftware.a.ba;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<com.speedsoftware.a.ba: boolean f>;

        if $z1 == 0 goto label04;

        $i0 = $r0.<com.speedsoftware.a.ba: int o>;

        $r0.<com.speedsoftware.a.ba: int n> = $i0;

     label01:
        $l1 = $r0.<com.speedsoftware.a.ba: long k>;

        $b2 = $l1 cmp 0L;

        if $b2 >= 0 goto label06;

     label02:
        $i0 = $r0.<com.speedsoftware.a.ba: int j>;

        $i3 = $r0.<com.speedsoftware.a.ba: int a>;

        $i3 = $i3 + 5;

        if $i0 < $i3 goto label03;

        $i0 = $r0.<com.speedsoftware.a.ba: int X>;

        if $i0 == 0 goto label37;

        $r1 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.z[] V>;

        $i0 = $r0.<com.speedsoftware.a.ba: int Z>;

        $r2 = $r1[$i0];

        $i0 = virtualinvoke $r0.<com.speedsoftware.a.ba: int a(com.speedsoftware.a.k)>($r2);

        if $i0 != 256 goto label03;

        specialinvoke $r0.<com.speedsoftware.a.ba: boolean f()>();

     label03:
        virtualinvoke $r0.<com.speedsoftware.a.ba: void j()>();

        return;

     label04:
        virtualinvoke $r0.<com.speedsoftware.a.ba: void a(boolean)>($z0);

        $z1 = virtualinvoke $r0.<com.speedsoftware.a.ba: boolean i()>();

        if $z1 == 0 goto label38;

        if $z0 != 0 goto label05;

        $z0 = specialinvoke $r0.<com.speedsoftware.a.ba: boolean f()>();

        if $z0 == 0 goto label38;

     label05:
        $l1 = $r0.<com.speedsoftware.a.ba: long k>;

        $l1 = $l1 - 1L;

        $r0.<com.speedsoftware.a.ba: long k> = $l1;

        goto label01;

     label06:
        $i0 = $r0.<com.speedsoftware.a.ba: int n>;

        $i0 = $i0 & 4194303;

        $r0.<com.speedsoftware.a.ba: int n> = $i0;

        $i0 = $r0.<com.speedsoftware.a.ba: int a>;

        $i3 = $r0.<com.speedsoftware.a.ba: int j>;

        $i3 = $i3 + -30;

        if $i0 <= $i3 goto label07;

        $z0 = virtualinvoke $r0.<com.speedsoftware.a.ba: boolean i()>();

        if $z0 == 0 goto label02;

     label07:
        $i0 = $r0.<com.speedsoftware.a.ba: int o>;

        $i3 = $r0.<com.speedsoftware.a.ba: int n>;

        $i0 = $i0 - $i3;

        $i0 = $i0 & 4194303;

        if $i0 >= 270 goto label08;

        $i0 = $r0.<com.speedsoftware.a.ba: int o>;

        $i3 = $r0.<com.speedsoftware.a.ba: int n>;

        if $i0 == $i3 goto label08;

        virtualinvoke $r0.<com.speedsoftware.a.ba: void j()>();

        $z0 = $r0.<com.speedsoftware.a.ba: boolean f>;

        if $z0 != 0 goto label38;

     label08:
        $i0 = $r0.<com.speedsoftware.a.ba: int X>;

        if $i0 == 0 goto label25;

        $r1 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.z[] V>;

        $i0 = $r0.<com.speedsoftware.a.ba: int Z>;

        $r2 = $r1[$i0];

        $i4 = virtualinvoke $r0.<com.speedsoftware.a.ba: int a(com.speedsoftware.a.k)>($r2);

        if $i4 != 256 goto label09;

        $z0 = specialinvoke $r0.<com.speedsoftware.a.ba: boolean f()>();

        if $z0 != 0 goto label01;

        goto label02;

     label09:
        $r3 = $r0.<com.speedsoftware.a.ba: byte[] l>;

        $i0 = $r0.<com.speedsoftware.a.ba: int n>;

        $i3 = $i0 + 1;

        $r0.<com.speedsoftware.a.ba: int n> = $i3;

        $r4 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.c[] ab>;

        $i3 = $r0.<com.speedsoftware.a.ba: int Z>;

        $r5 = $r4[$i3];

        $i3 = $r5.<com.speedsoftware.a.c: int l>;

        $i3 = $i3 + 1;

        $r5.<com.speedsoftware.a.c: int l> = $i3;

        $i3 = $r5.<com.speedsoftware.a.c: int h>;

        $r5.<com.speedsoftware.a.c: int i> = $i3;

        $i3 = $r5.<com.speedsoftware.a.c: int g>;

        $r5.<com.speedsoftware.a.c: int h> = $i3;

        $i3 = $r5.<com.speedsoftware.a.c: int j>;

        $i5 = $r5.<com.speedsoftware.a.c: int f>;

        $i3 = $i3 - $i5;

        $r5.<com.speedsoftware.a.c: int g> = $i3;

        $i3 = $r5.<com.speedsoftware.a.c: int j>;

        $r5.<com.speedsoftware.a.c: int f> = $i3;

        $i3 = $r5.<com.speedsoftware.a.c: int m>;

        $i3 = $i3 * 8;

        $i5 = $r5.<com.speedsoftware.a.c: int a>;

        $i6 = $r5.<com.speedsoftware.a.c: int f>;

        $i5 = $i5 * $i6;

        $i3 = $i3 + $i5;

        $i5 = $r5.<com.speedsoftware.a.c: int b>;

        $i6 = $r5.<com.speedsoftware.a.c: int g>;

        $i5 = $i5 * $i6;

        $i6 = $r5.<com.speedsoftware.a.c: int c>;

        $i7 = $r5.<com.speedsoftware.a.c: int h>;

        $i6 = $i6 * $i7;

        $i5 = $i5 + $i6;

        $i3 = $i3 + $i5;

        $i5 = $r5.<com.speedsoftware.a.c: int d>;

        $i6 = $r5.<com.speedsoftware.a.c: int i>;

        $i5 = $i5 * $i6;

        $i6 = $r5.<com.speedsoftware.a.c: int e>;

        $i7 = $r0.<com.speedsoftware.a.ba: int aa>;

        $i6 = $i6 * $i7;

        $i5 = $i5 + $i6;

        $i3 = $i3 + $i5;

        $i3 = $i3 >>> 3;

        $i3 = $i3 & 255;

        $i3 = $i3 - $i4;

        $b2 = (byte) $i4;

        $i4 = $b2 << 3;

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i5 = $r6[0];

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i4);

        $i5 = $i5 + $i6;

        $r6[0] = $i5;

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i5 = $r6[1];

        $i6 = $r5.<com.speedsoftware.a.c: int f>;

        $i6 = $i4 - $i6;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i5 = $i5 + $i6;

        $r6[1] = $i5;

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i5 = $r6[2];

        $i6 = $r5.<com.speedsoftware.a.c: int f>;

        $i6 = $i6 + $i4;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i5 = $i5 + $i6;

        $r6[2] = $i5;

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i5 = $r6[3];

        $i6 = $r5.<com.speedsoftware.a.c: int g>;

        $i6 = $i4 - $i6;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i5 = $i5 + $i6;

        $r6[3] = $i5;

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i5 = $r6[4];

        $i6 = $r5.<com.speedsoftware.a.c: int g>;

        $i6 = $i6 + $i4;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i5 = $i5 + $i6;

        $r6[4] = $i5;

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i5 = $r6[5];

        $i6 = $r5.<com.speedsoftware.a.c: int h>;

        $i6 = $i4 - $i6;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i5 = $i5 + $i6;

        $r6[5] = $i5;

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i5 = $r6[6];

        $i6 = $r5.<com.speedsoftware.a.c: int h>;

        $i6 = $i6 + $i4;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i5 = $i5 + $i6;

        $r6[6] = $i5;

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i5 = $r6[7];

        $i6 = $r5.<com.speedsoftware.a.c: int i>;

        $i6 = $i4 - $i6;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i5 = $i5 + $i6;

        $r6[7] = $i5;

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i5 = $r6[8];

        $i6 = $r5.<com.speedsoftware.a.c: int i>;

        $i6 = $i6 + $i4;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i5 = $i5 + $i6;

        $r6[8] = $i5;

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i5 = $r6[9];

        $i6 = $r0.<com.speedsoftware.a.ba: int aa>;

        $i6 = $i4 - $i6;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i5 = $i5 + $i6;

        $r6[9] = $i5;

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i5 = $r6[10];

        $i6 = $r0.<com.speedsoftware.a.ba: int aa>;

        $i4 = $i4 + $i6;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i4);

        $i4 = $i4 + $i5;

        $r6[10] = $i4;

        $i4 = $r5.<com.speedsoftware.a.c: int m>;

        $i4 = $i3 - $i4;

        $b2 = (byte) $i4;

        $r5.<com.speedsoftware.a.c: int j> = $b2;

        $i4 = $r5.<com.speedsoftware.a.c: int j>;

        $r0.<com.speedsoftware.a.ba: int aa> = $i4;

        $r5.<com.speedsoftware.a.c: int m> = $i3;

        $i4 = $r5.<com.speedsoftware.a.c: int l>;

        $i4 = $i4 & 31;

        if $i4 != 0 goto label11;

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i5 = $r6[0];

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $r6[0] = 0;

        $i4 = 1;

        $i6 = 0;

     label10:
        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i7 = lengthof $r6;

        if $i4 < $i7 goto label13;

        lookupswitch($i6)
        {
            case 1: goto label15;
            case 2: goto label16;
            case 3: goto label17;
            case 4: goto label18;
            case 5: goto label19;
            case 6: goto label20;
            case 7: goto label21;
            case 8: goto label22;
            case 9: goto label23;
            case 10: goto label24;
            default: goto label11;
        };

     label11:
        $b2 = (byte) $i3;

        $r3[$i0] = $b2;

        $i0 = $r0.<com.speedsoftware.a.ba: int Z>;

        $i0 = $i0 + 1;

        $r0.<com.speedsoftware.a.ba: int Z> = $i0;

        $i3 = $r0.<com.speedsoftware.a.ba: int Y>;

        if $i0 != $i3 goto label12;

        $r0.<com.speedsoftware.a.ba: int Z> = 0;

     label12:
        $l1 = $r0.<com.speedsoftware.a.ba: long k>;

        $l1 = $l1 - 1L;

        $r0.<com.speedsoftware.a.ba: long k> = $l1;

        goto label01;

     label13:
        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i7 = $r6[$i4];

        if $i7 >= $i5 goto label14;

        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $i5 = $r6[$i4];

        $i6 = $i4;

     label14:
        $r6 = $r5.<com.speedsoftware.a.c: int[] k>;

        $r6[$i4] = 0;

        $i4 = $i4 + 1;

        goto label10;

     label15:
        $i4 = $r5.<com.speedsoftware.a.c: int a>;

        if $i4 < -16 goto label11;

        $i4 = $r5.<com.speedsoftware.a.c: int a>;

        $i4 = $i4 + -1;

        $r5.<com.speedsoftware.a.c: int a> = $i4;

        goto label11;

     label16:
        $i4 = $r5.<com.speedsoftware.a.c: int a>;

        if $i4 >= 16 goto label11;

        $i4 = $r5.<com.speedsoftware.a.c: int a>;

        $i4 = $i4 + 1;

        $r5.<com.speedsoftware.a.c: int a> = $i4;

        goto label11;

     label17:
        $i4 = $r5.<com.speedsoftware.a.c: int b>;

        if $i4 < -16 goto label11;

        $i4 = $r5.<com.speedsoftware.a.c: int b>;

        $i4 = $i4 + -1;

        $r5.<com.speedsoftware.a.c: int b> = $i4;

        goto label11;

     label18:
        $i4 = $r5.<com.speedsoftware.a.c: int b>;

        if $i4 >= 16 goto label11;

        $i4 = $r5.<com.speedsoftware.a.c: int b>;

        $i4 = $i4 + 1;

        $r5.<com.speedsoftware.a.c: int b> = $i4;

        goto label11;

     label19:
        $i4 = $r5.<com.speedsoftware.a.c: int c>;

        if $i4 < -16 goto label11;

        $i4 = $r5.<com.speedsoftware.a.c: int c>;

        $i4 = $i4 + -1;

        $r5.<com.speedsoftware.a.c: int c> = $i4;

        goto label11;

     label20:
        $i4 = $r5.<com.speedsoftware.a.c: int c>;

        if $i4 >= 16 goto label11;

        $i4 = $r5.<com.speedsoftware.a.c: int c>;

        $i4 = $i4 + 1;

        $r5.<com.speedsoftware.a.c: int c> = $i4;

        goto label11;

     label21:
        $i4 = $r5.<com.speedsoftware.a.c: int d>;

        if $i4 < -16 goto label11;

        $i4 = $r5.<com.speedsoftware.a.c: int d>;

        $i4 = $i4 + -1;

        $r5.<com.speedsoftware.a.c: int d> = $i4;

        goto label11;

     label22:
        $i4 = $r5.<com.speedsoftware.a.c: int d>;

        if $i4 >= 16 goto label11;

        $i4 = $r5.<com.speedsoftware.a.c: int d>;

        $i4 = $i4 + 1;

        $r5.<com.speedsoftware.a.c: int d> = $i4;

        goto label11;

     label23:
        $i4 = $r5.<com.speedsoftware.a.c: int e>;

        if $i4 < -16 goto label11;

        $i4 = $r5.<com.speedsoftware.a.c: int e>;

        $i4 = $i4 + -1;

        $r5.<com.speedsoftware.a.c: int e> = $i4;

        goto label11;

     label24:
        $i4 = $r5.<com.speedsoftware.a.c: int e>;

        if $i4 >= 16 goto label11;

        $i4 = $r5.<com.speedsoftware.a.c: int e>;

        $i4 = $i4 + 1;

        $r5.<com.speedsoftware.a.c: int e> = $i4;

        goto label11;

     label25:
        $r7 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.t ac>;

        $i0 = virtualinvoke $r0.<com.speedsoftware.a.ba: int a(com.speedsoftware.a.k)>($r7);

        if $i0 >= 256 goto label26;

        $r3 = $r0.<com.speedsoftware.a.ba: byte[] l>;

        $i3 = $r0.<com.speedsoftware.a.ba: int n>;

        $i4 = $i3 + 1;

        $r0.<com.speedsoftware.a.ba: int n> = $i4;

        $b2 = (byte) $i0;

        $r3[$i3] = $b2;

        $l1 = $r0.<com.speedsoftware.a.ba: long k>;

        $l1 = $l1 - 1L;

        $r0.<com.speedsoftware.a.ba: long k> = $l1;

        goto label01;

     label26:
        if $i0 <= 269 goto label30;

        $r6 = <com.speedsoftware.a.ba: int[] ah>;

        $i3 = $i0 + -270;

        $i0 = $r6[$i3];

        $i0 = $i0 + 3;

        $r3 = <com.speedsoftware.a.ba: byte[] ai>;

        $b2 = $r3[$i3];

        if $b2 <= 0 goto label27;

        $i3 = virtualinvoke $r0.<com.speedsoftware.a.ba: int b()>();

        $i4 = 16 - $b2;

        $i3 = $i3 >>> $i4;

        $i0 = $i0 + $i3;

        virtualinvoke $r0.<com.speedsoftware.a.ba: void a(int)>($b2);

     label27:
        $r8 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.l ad>;

        $i4 = virtualinvoke $r0.<com.speedsoftware.a.ba: int a(com.speedsoftware.a.k)>($r8);

        $r6 = <com.speedsoftware.a.ba: int[] aj>;

        $i3 = $r6[$i4];

        $i3 = $i3 + 1;

        $r6 = <com.speedsoftware.a.ba: int[] ak>;

        $i4 = $r6[$i4];

        if $i4 <= 0 goto label28;

        $i5 = virtualinvoke $r0.<com.speedsoftware.a.ba: int b()>();

        $i6 = 16 - $i4;

        $i5 = $i5 >>> $i6;

        $i3 = $i3 + $i5;

        virtualinvoke $r0.<com.speedsoftware.a.ba: void a(int)>($i4);

     label28:
        if $i3 < 8192 goto label29;

        $i0 = $i0 + 1;

        $l1 = (long) $i3;

        $b2 = $l1 cmp 262144L;

        if $b2 < 0 goto label29;

        $i0 = $i0 + 1;

     label29:
        specialinvoke $r0.<com.speedsoftware.a.ba: void a(int,int)>($i0, $i3);

        goto label01;

     label30:
        if $i0 != 269 goto label31;

        $z0 = specialinvoke $r0.<com.speedsoftware.a.ba: boolean f()>();

        if $z0 != 0 goto label01;

        goto label02;

     label31:
        if $i0 != 256 goto label32;

        $i0 = $r0.<com.speedsoftware.a.ba: int Q>;

        $i3 = $r0.<com.speedsoftware.a.ba: int P>;

        specialinvoke $r0.<com.speedsoftware.a.ba: void a(int,int)>($i0, $i3);

        goto label01;

     label32:
        if $i0 >= 261 goto label35;

        $r6 = $r0.<com.speedsoftware.a.ba: int[] m>;

        $i3 = $r0.<com.speedsoftware.a.ba: int p>;

        $i0 = $i0 + -256;

        $i0 = $i3 - $i0;

        $i0 = $i0 & 3;

        $i0 = $r6[$i0];

        $r9 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.ap af>;

        $i4 = virtualinvoke $r0.<com.speedsoftware.a.ba: int a(com.speedsoftware.a.k)>($r9);

        $r6 = <com.speedsoftware.a.ba: int[] ah>;

        $i3 = $r6[$i4];

        $i3 = $i3 + 2;

        $r3 = <com.speedsoftware.a.ba: byte[] ai>;

        $b2 = $r3[$i4];

        if $b2 <= 0 goto label33;

        $i4 = virtualinvoke $r0.<com.speedsoftware.a.ba: int b()>();

        $i5 = 16 - $b2;

        $i4 = $i4 >>> $i5;

        $i3 = $i3 + $i4;

        virtualinvoke $r0.<com.speedsoftware.a.ba: void a(int)>($b2);

     label33:
        if $i0 < 257 goto label34;

        $i3 = $i3 + 1;

        if $i0 < 8192 goto label34;

        $i3 = $i3 + 1;

        if $i0 < 262144 goto label34;

        $i3 = $i3 + 1;

     label34:
        specialinvoke $r0.<com.speedsoftware.a.ba: void a(int,int)>($i3, $i0);

        goto label01;

     label35:
        if $i0 >= 270 goto label01;

        $r6 = <com.speedsoftware.a.ba: int[] al>;

        $i3 = $i0 + -261;

        $i0 = $r6[$i3];

        $i0 = $i0 + 1;

        $r6 = <com.speedsoftware.a.ba: int[] am>;

        $i3 = $r6[$i3];

        if $i3 <= 0 goto label36;

        $i4 = virtualinvoke $r0.<com.speedsoftware.a.ba: int b()>();

        $i5 = 16 - $i3;

        $i4 = $i4 >>> $i5;

        $i0 = $i0 + $i4;

        virtualinvoke $r0.<com.speedsoftware.a.ba: void a(int)>($i3);

     label36:
        specialinvoke $r0.<com.speedsoftware.a.ba: void a(int,int)>(2, $i0);

        goto label01;

     label37:
        $r7 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.t ac>;

        $i0 = virtualinvoke $r0.<com.speedsoftware.a.ba: int a(com.speedsoftware.a.k)>($r7);

        if $i0 != 269 goto label03;

        specialinvoke $r0.<com.speedsoftware.a.ba: boolean f()>();

        goto label03;

     label38:
        return;
    }

    protected final void d(boolean)
    {
        com.speedsoftware.a.ba $r0;
        boolean $z0;
        com.speedsoftware.a.c $r1;
        com.speedsoftware.a.c[] $r2;
        byte[] $r3;

        $r0 := @this: com.speedsoftware.a.ba;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        $r0.<com.speedsoftware.a.ba: int Z> = 0;

        $r0.<com.speedsoftware.a.ba: int aa> = 0;

        $r0.<com.speedsoftware.a.ba: int Y> = 1;

        $r2 = $r0.<com.speedsoftware.a.ba: com.speedsoftware.a.c[] ab>;

        $r1 = new com.speedsoftware.a.c;

        specialinvoke $r1.<com.speedsoftware.a.c: void <init>()>();

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r2, $r1);

        $r3 = $r0.<com.speedsoftware.a.ba: byte[] W>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r3, 0);

     label1:
        return;
    }
}
