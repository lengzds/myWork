public final enum class com.fasterxml.jackson.databind.SerializationFeature extends java.lang.Enum implements com.fasterxml.jackson.databind.cfg.ConfigFeature
{
    private static final com.fasterxml.jackson.databind.SerializationFeature[] $VALUES;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature INDENT_OUTPUT;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature ORDER_MAP_ENTRIES_BY_KEYS;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature WRAP_EXCEPTIONS;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_AS_TIMESTAMPS;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_INDEX;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature WRITE_NULL_MAP_VALUES;
    public static final enum com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED;
    private final boolean _defaultState;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.SerializationFeature $r0;
        com.fasterxml.jackson.databind.SerializationFeature[] $r1;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("WRAP_ROOT_VALUE", 0, 0);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("INDENT_OUTPUT", 1, 0);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature INDENT_OUTPUT> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("FAIL_ON_EMPTY_BEANS", 2, 1);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("WRAP_EXCEPTIONS", 3, 1);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRAP_EXCEPTIONS> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("CLOSE_CLOSEABLE", 4, 0);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("FLUSH_AFTER_WRITE_VALUE", 5, 1);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("WRITE_DATES_AS_TIMESTAMPS", 6, 1);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_AS_TIMESTAMPS> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("WRITE_DATE_KEYS_AS_TIMESTAMPS", 7, 0);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS", 8, 0);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("WRITE_ENUMS_USING_TO_STRING", 9, 0);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("WRITE_ENUMS_USING_INDEX", 10, 0);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_INDEX> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("WRITE_NULL_MAP_VALUES", 11, 1);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_NULL_MAP_VALUES> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("WRITE_EMPTY_JSON_ARRAYS", 12, 1);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED", 13, 0);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED> = $r0;

        $r0 = new com.fasterxml.jackson.databind.SerializationFeature;

        specialinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: void <init>(java.lang.String,int,boolean)>("ORDER_MAP_ENTRIES_BY_KEYS", 14, 0);

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature ORDER_MAP_ENTRIES_BY_KEYS> = $r0;

        $r1 = newarray (com.fasterxml.jackson.databind.SerializationFeature)[15];

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;

        $r1[0] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature INDENT_OUTPUT>;

        $r1[1] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS>;

        $r1[2] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRAP_EXCEPTIONS>;

        $r1[3] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>;

        $r1[4] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>;

        $r1[5] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_AS_TIMESTAMPS>;

        $r1[6] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS>;

        $r1[7] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS>;

        $r1[8] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING>;

        $r1[9] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_INDEX>;

        $r1[10] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_NULL_MAP_VALUES>;

        $r1[11] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS>;

        $r1[12] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;

        $r1[13] = $r0;

        $r0 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature ORDER_MAP_ENTRIES_BY_KEYS>;

        $r1[14] = $r0;

        <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature[] $VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int, boolean)
    {
        com.fasterxml.jackson.databind.SerializationFeature $r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: com.fasterxml.jackson.databind.SerializationFeature;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        $r0.<com.fasterxml.jackson.databind.SerializationFeature: boolean _defaultState> = $z0;

        return;
    }

    public static com.fasterxml.jackson.databind.SerializationFeature valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.fasterxml.jackson.databind.SerializationFeature $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/fasterxml/jackson/databind/SerializationFeature", $r0);

        $r2 = (com.fasterxml.jackson.databind.SerializationFeature) $r1;

        return $r2;
    }

    public static com.fasterxml.jackson.databind.SerializationFeature[] values()
    {
        java.lang.Object $r0;
        com.fasterxml.jackson.databind.SerializationFeature[] $r1;

        $r1 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.fasterxml.jackson.databind.SerializationFeature[]) $r0;

        return $r1;
    }

    public final boolean enabledByDefault()
    {
        com.fasterxml.jackson.databind.SerializationFeature $r0;
        boolean z0;

        $r0 := @this: com.fasterxml.jackson.databind.SerializationFeature;

        z0 = $r0.<com.fasterxml.jackson.databind.SerializationFeature: boolean _defaultState>;

        return z0;
    }

    public final int getMask()
    {
        com.fasterxml.jackson.databind.SerializationFeature $r0;
        int $i0;

        $r0 := @this: com.fasterxml.jackson.databind.SerializationFeature;

        $i0 = virtualinvoke $r0.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>();

        $i0 = 1 << $i0;

        return $i0;
    }
}
