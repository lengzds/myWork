public final class com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer
{
    public static final com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer instance;

    static void <clinit>()
    {
        com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer $r0;

        $r0 = new com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer: void <init>()>();

        <com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer instance> = $r0;

        return;
    }

    public void <init>()
    {
        com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer $r0;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer;

        specialinvoke $r0.<com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class)>(class "java/lang/Number");

        return;
    }

    public final void serialize(java.lang.Number, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        java.lang.Number $r3;
        boolean $z0;
        java.math.BigDecimal $r4;
        java.math.BigInteger $r5;
        int $i0;
        long $l1;
        double $d0;
        float $f0;
        java.lang.String $r6;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer;

        $r3 := @parameter0: java.lang.Number;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $z0 = $r3 instanceof java.math.BigDecimal;

        if $z0 == 0 goto label1;

        $r4 = (java.math.BigDecimal) $r3;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.math.BigDecimal)>($r4);

        return;

     label1:
        $z0 = $r3 instanceof java.math.BigInteger;

        if $z0 == 0 goto label2;

        $r5 = (java.math.BigInteger) $r3;

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.math.BigInteger)>($r5);

        return;

     label2:
        $z0 = $r3 instanceof java.lang.Integer;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>($i0);

        return;

     label3:
        $z0 = $r3 instanceof java.lang.Long;

        if $z0 == 0 goto label4;

        $l1 = virtualinvoke $r3.<java.lang.Number: long longValue()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(long)>($l1);

        return;

     label4:
        $z0 = $r3 instanceof java.lang.Double;

        if $z0 == 0 goto label5;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(double)>($d0);

        return;

     label5:
        $z0 = $r3 instanceof java.lang.Float;

        if $z0 == 0 goto label6;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(float)>($f0);

        return;

     label6:
        $z0 = $r3 instanceof java.lang.Byte;

        if $z0 != 0 goto label7;

        $z0 = $r3 instanceof java.lang.Short;

        if $z0 == 0 goto label8;

     label7:
        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>($i0);

        return;

     label8:
        $r6 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.lang.String)>($r6);

        return;
    }

    public final volatile void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
    {
        com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer $r0;
        com.fasterxml.jackson.core.JsonGenerator $r1;
        com.fasterxml.jackson.databind.SerializerProvider $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @this: com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;

        $r2 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.lang.Number) $r3;

        virtualinvoke $r0.<com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer: void serialize(java.lang.Number,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>($r4, $r1, $r2);

        return;
    }
}
